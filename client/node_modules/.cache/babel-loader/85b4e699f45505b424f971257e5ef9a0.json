{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\RequestDetails\\\\Director.js\",\n    _s = $RefreshSig$();\n\nimport HeaderPages from '../header/Header_pages';\nimport { Card, Container, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment'; // import Pdf from \"react-to-pdf\";\n\nimport { useHistory } from 'react-router'; // import ReactDOM from \"react-dom\";\n\nimport React from \"react\";\nimport { API_URL } from '../../utils/constant';\nimport download from 'downloadjs';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Director = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [details, setDetails] = useState({\n    request: {},\n    comment: []\n  });\n  const [Department, setDepartment] = useState(\"\");\n  console.log(\"Params \", id);\n  const ref = /*#__PURE__*/React.createRef(); // const PDF =()=>{\n  //     axios.get(`${API_URL}/pdf`).then((res)=>{\n  //         console.log(res.data)\n  //     })\n  // }\n  // const [req_id, set_req_id] = useState(\"\")\n\n  useEffect(() => {\n    axios.get(`${API_URL}/` + id + '/directorrequest').then(res => {\n      setDetails(res.data);\n      setDepartment(res.data.request.R_Emp_Dept.Dept_Name);\n      console.log(id); // console.log(details.request._id)\n    });\n  }, [id]);\n\n  const Accept = () => {\n    axios.post(`${API_URL}/` + id + '/acceptdirector').then(res => {\n      if (res.status === 200) {\n        console.log('Requested Accepted');\n        window.flash('Requested Accepted');\n        history.push('/managerdashboard');\n      } else {\n        console.log('Requested Failed to Accept');\n        window.flash('Requested Failed to Accept', 'danger');\n      }\n    });\n  };\n\n  const Reject = () => {\n    axios.post(`${API_URL}/` + id + '/rejectdirector', {\n      name: details.request.R_Emp_Name,\n      email: details.request.R_Emp_Email,\n      item: details.request.Item\n    }).then(res => {\n      if (res.status === 200) {\n        console.log('Requested Rejected');\n        window.flash('Requested Rejected');\n        history.push('/managerdashboard');\n      } else {\n        console.log('Requested Failed to Reject');\n        window.flash('Requested Failed to Reject', 'danger');\n      }\n    });\n  };\n\n  const PDF = async () => {\n    fetch(`${API_URL}/${id}/pdf`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        filename: \"report\",\n        content: \"Testing Content\"\n      })\n    }).then(async res => {\n      if (res.status === 200) {\n        const blob = await res.blob();\n        const file = new Blob([blob], {\n          type: 'application/pdf'\n        }, {\n          name: 'report.pdf'\n        });\n        console.log(file); //Build a URL from the file\n\n        const fileURL = URL.createObjectURL(file); //Open the URL on new Window\n\n        console.log(fileURL); //   download(res.data, details.request.Item + '_report', 'pdf');\n\n        window.open(fileURL);\n      }\n    });\n  };\n\n  const Download = async () => {\n    await axios.get(`${API_URL}/${id}/download`, {\n      responseType: 'blob'\n    }).then(res => {\n      download(res.data, details.request.Item + '_quotation', 'pdf');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderPages, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"MainContainer\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"Card1\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Request Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          ref: ref,\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ID: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 37\n            }, this), id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this), details.request.R_Emp_Name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this), details.request.R_Emp_Email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Department: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }, this), Department]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            className: \"new-line\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Item: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 58\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 81\n            }, this), details.Item]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Reason : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 37\n            }, this), details.request.Reason]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date Requested \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 37\n            }, this), moment(details.request.Added).format('Do MMMM YYYY')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Accounts Manager Comments : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 37\n            }, this), details.comment.Comment_Accounts]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Admin Manager Comments : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this), details.comment.Comment_Admin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"Btn\",\n            onClick: Download,\n            children: \"Download Quotation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-danger ml-4 float-right\",\n            onClick: Reject,\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-success ml-4 float-right\",\n            onClick: Accept,\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"Btn float-right\",\n            onClick: PDF,\n            children: \"Generate PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Director, \"T6q/mMQ6NN8z5Kq6LNiSpPajAAI=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Director;\nexport default Director; // const MainContainer = styled(Container)`\n//     width: 100%;\n//     height: auto;\n//     min-height: 100%;\n//     min-height: 100vh;\n//     margin-top:100px;\n// `;\n// const Btn = styled(Button)`\n//     background :#EFBB20;\n//     border: none;\n//     &:hover{\n//     background: #0e8ccc;\n//     a{\n//         color: white;\n//         text-decoration : none;\n//     }\n// }`;\n\nvar _c;\n\n$RefreshReg$(_c, \"Director\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/RequestDetails/Director.js"],"names":["HeaderPages","Card","Container","Button","axios","useEffect","useState","useParams","moment","useHistory","React","API_URL","download","Director","history","id","details","setDetails","request","comment","Department","setDepartment","console","log","ref","createRef","get","then","res","data","R_Emp_Dept","Dept_Name","Accept","post","status","window","flash","push","Reject","name","R_Emp_Name","email","R_Emp_Email","item","Item","PDF","fetch","method","headers","body","JSON","stringify","filename","content","blob","file","Blob","type","fileURL","URL","createObjectURL","open","Download","responseType","Reason","Added","format","Comment_Accounts","Comment_Admin"],"mappings":"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","sourcesContent":["import HeaderPages from '../header/Header_pages';\r\nimport { Card, Container, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n// import Pdf from \"react-to-pdf\";\r\nimport { useHistory } from 'react-router';\r\n// import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { API_URL } from '../../utils/constant';\r\nimport download from 'downloadjs';\r\nimport '../style.css'\r\n\r\nconst Director = () => {\r\n\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [details, setDetails] = useState({ request: {}, comment: [] });\r\n    const [Department, setDepartment] = useState(\"\");\r\n\r\n    console.log(\"Params \", id);\r\n    const ref = React.createRef();\r\n\r\n    // const PDF =()=>{\r\n    //     axios.get(`${API_URL}/pdf`).then((res)=>{\r\n    //         console.log(res.data)\r\n    //     })\r\n    // }\r\n    // const [req_id, set_req_id] = useState(\"\")\r\n    useEffect(() => {\r\n        axios.get(`${API_URL}/` + id + '/directorrequest')\r\n            .then(\r\n                (res) => {\r\n                    setDetails(res.data)\r\n                    setDepartment(res.data.request.R_Emp_Dept.Dept_Name)\r\n                    console.log(id)\r\n                    // console.log(details.request._id)\r\n\r\n                }\r\n            )\r\n    }, [id])\r\n\r\n    const Accept = () => {\r\n        axios.post(`${API_URL}/` + id + '/acceptdirector').then((res) => {\r\n            if (res.status === 200) {\r\n                console.log('Requested Accepted');\r\n                window.flash('Requested Accepted');\r\n                history.push('/managerdashboard');\r\n\r\n            }\r\n            else {\r\n                console.log('Requested Failed to Accept');\r\n                window.flash('Requested Failed to Accept', 'danger');\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const Reject = () => {\r\n        axios.post(`${API_URL}/` + id + '/rejectdirector', {\r\n            name: details.request.R_Emp_Name,\r\n            email: details.request.R_Emp_Email,\r\n            item: details.request.Item\r\n        }).then((res) => {\r\n            if (res.status === 200) {\r\n                console.log('Requested Rejected');\r\n                window.flash('Requested Rejected');\r\n                history.push('/managerdashboard');\r\n\r\n            }\r\n            else {\r\n                console.log('Requested Failed to Reject');\r\n                window.flash('Requested Failed to Reject', 'danger');\r\n            }\r\n        })\r\n    }\r\n\r\n    const PDF = async () => {\r\n        fetch(`${API_URL}/${id}/pdf`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                filename: \"report\",\r\n                content: \"Testing Content\"\r\n            }),\r\n        }).then(async res => {\r\n            if (res.status === 200) {\r\n                const blob = await res.blob();\r\n                const file = new Blob(\r\n                    [blob],\r\n                    { type: 'application/pdf' },\r\n                    { name: 'report.pdf' }\r\n                );\r\n                console.log(file)\r\n\r\n                //Build a URL from the file\r\n                const fileURL = URL.createObjectURL(file);\r\n                //Open the URL on new Window\r\n                console.log(fileURL)\r\n                //   download(res.data, details.request.Item + '_report', 'pdf');\r\n                window.open(fileURL);\r\n            }\r\n        })\r\n    }\r\n\r\n    const Download = async () => {\r\n        await axios.get(`${API_URL}/${id}/download`, {\r\n            responseType: 'blob'\r\n        }).then((res) => {\r\n            download(res.data, details.request.Item + '_quotation', 'pdf');\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <HeaderPages />\r\n            <Container className=\"MainContainer\">\r\n\r\n                <Card className=\"Card1\">\r\n                    <Card.Header>\r\n                        Request Details\r\n                    </Card.Header>\r\n                    <Card.Body ref={ref}>\r\n                        <Card.Title><strong>ID: </strong>{id}</Card.Title>\r\n                        <Card.Title><strong>Name: </strong>{details.request.R_Emp_Name}</Card.Title>\r\n                        <Card.Title><strong>Email: </strong>{details.request.R_Emp_Email}</Card.Title>\r\n                        <Card.Title><strong>Department: </strong>{Department}</Card.Title>\r\n                        <Card.Title className=\"new-line\"><strong>Item: </strong><br />{details.Item}</Card.Title>\r\n                        {/* <Card.Title><strong>Duration: </strong>{details.request.Duration}</Card.Title>\r\n                        <Card.Title><strong>Quantity: </strong>{details.request.Quantity}</Card.Title> */}\r\n                        <Card.Title><strong>Reason : </strong>{details.request.Reason}</Card.Title>\r\n                        <Card.Title><strong>Date Requested </strong>{moment(details.request.Added).format('Do MMMM YYYY')}</Card.Title>\r\n                        <Card.Title><strong>Accounts Manager Comments : </strong>{details.comment.Comment_Accounts}</Card.Title>\r\n                        <Card.Title><strong>Admin Manager Comments : </strong>{details.comment.Comment_Admin}</Card.Title>\r\n                        <Button className=\"Btn\" onClick={Download}>Download Quotation</Button>\r\n\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"\">\r\n                        {/* <Pdf targetRef={ref} filename=\"code-example.pdf\">\r\n                 {({ toPdf }) => <Btn onClick={ () => { toPdf()}}>Generate Pdf</Btn>}\r\n            </Pdf> */}\r\n                        <Button className=\"btn-danger ml-4 float-right\" onClick={Reject}>Reject</Button>\r\n                        <Button className=\"btn-success ml-4 float-right\" onClick={Accept}>Accept</Button>\r\n\r\n\r\n                        {/* <Button className = \"Btn float-right\"><a href = {`${API_URL}/${id}/pdf`}>Generate Pdf</a></Button> */}\r\n                        <Button className=\"Btn float-right\" onClick={PDF}>Generate PDF</Button>\r\n\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Director;\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//     height: auto;\r\n//     min-height: 100%;\r\n//     min-height: 100vh;\r\n//     margin-top:100px;\r\n// `;\r\n\r\n\r\n// const Btn = styled(Button)`\r\n//     background :#EFBB20;\r\n//     border: none;\r\n//     &:hover{\r\n//     background: #0e8ccc;\r\n//     a{\r\n//         color: white;\r\n//         text-decoration : none;\r\n//     }\r\n// }`;\r\n"]},"metadata":{},"sourceType":"module"}