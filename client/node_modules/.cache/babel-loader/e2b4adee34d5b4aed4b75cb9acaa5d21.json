{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\purchaseRequest\\\\Purchase_request_table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Table, Button, Container, Modal, Form } from 'react-bootstrap';\nimport moment from 'moment';\nimport { API_URL } from '../../utils/constant';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RequestTable = () => {\n  _s();\n\n  const arr = ['Date Requested', 'Item Name', 'Quantity', 'Quotation'];\n  const [allrequest, setrequests] = useState([]);\n  const interval_id = useRef(null); // const [open, setOpen] = useState(false);\n\n  async function fetch() {\n    console.log('in fetch');\n    await axios.get(`${API_URL}/get_purchase_request`, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n      setrequests(res.data);\n    });\n  } // var requests = []\n\n\n  useEffect(() => {\n    fetch();\n    interval_id.current = setInterval(() => {\n      fetch();\n    }, 3000);\n    return function cleanup() {\n      clearInterval(interval_id.current);\n    };\n  }, []);\n  const [showModal, setShow] = useState(false);\n  const [file, SetFile] = useState(null);\n  const [Info, SetInfo] = useState(\"\");\n\n  const SubmitFile = async e => {\n    e.preventDefault();\n    console.log('File ', file); // console.log(e.target.file)\n    // console.log('document', document.getElementById('file').value())\n\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      await axios.post(`${API_URL}/${Info}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        if (res.data.code == 200) {\n          SetFile(null);\n          window.flash('File Successfully Submitted');\n          fetch();\n        } else {\n          window.flash('Failed To Submit The File', 'danger');\n        }\n      });\n    } else {\n      window.flash('Please select a file to add.', 'danger');\n    }\n  };\n\n  const onChangeHandlerFile = files => {\n    console.log(files);\n    const [uploadedFile] = files.target.files;\n    console.log(uploadedFile);\n    SetFile(uploadedFile);\n  }; // const ModalContent = ()=>{\n  //    function getBase64(e) {\n  //         var file = e.target.files[0]\n  //         let reader = new FileReader()\n  //         reader.readAsDataURL(file)\n  //         reader.onload = () => {\n  //             console.log(reader.result)\n  //             SetFile(reader.result)\n  //         //   this.setState({\n  //         //     imgUpload: reader.result\n  //         //   })\n  //         };\n  //         reader.onerror = function (error) {\n  //           console.log('Error: ', error);\n  //         }\n  //       }\n  //     return(\n  //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n  //             <Modal.Header closeButton>\n  //                 <Modal.Title>\n  //                     Details \n  //                 </Modal.Title>\n  //                 </Modal.Header>\n  //                 <Form>    \n  //                 <ModalBody>\n  //                 <input\n  //                 type = 'file'\n  //                 id=\"file\"\n  //                 name = \"file\"\n  //                 value={FileInfo}\n  //                 onChange={(e) => { e.preventDefault(); \n  //                     SetFile(e.target.files[0])\n  //                     // getBase64(e);\n  //                 }}\n  //                 />\n  //                 </ModalBody>\n  //             <Modal.Footer>\n  //                 <Btn className = \"btn-success\" type = \"submit\">Submit</Btn>\n  //             </Modal.Footer>\n  //             </Form>\n  //         </Modal>\n  //     );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"Btn float-right mb-2\",\n        onClick: fetch,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"TableStyle\",\n        responsive: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 14\n            }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: _\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allrequest.map((request, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: moment(request.Added).format('Do MMMM YYYY')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: request.Item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: request.Quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form, {\n                    onSubmit: SubmitFile,\n                    children: [/*#__PURE__*/_jsxDEV(Form.File, {\n                      name: \"file\",\n                      onChange: onChangeHandlerFile\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      className: \"Btn mt-2 btn btn-md\",\n                      onClick: () => {\n                        SetInfo(request._id);\n                      },\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 17\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 14\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(RequestTable, \"RYOKEzN8rstWh2KZjg7KNEX8SzA=\");\n\n_c = RequestTable;\nexport default RequestTable; // const TableStyle = styled(Table)`\n// th {background: #1F386B;color : white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n// const Btn = styled(Button)`\n//     background :#EFBB20;\n//     border: none; \n//     &:hover{\n//     background: #0e8ccc;\n// }`;\n\nconst ModalBody = styled(Modal.Body)`\n\nli{\n    padding:5px;\n}\n\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestTable\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/purchaseRequest/Purchase_request_table.js"],"names":["React","useEffect","useState","useRef","axios","Table","Button","Container","Modal","Form","moment","API_URL","styled","RequestTable","arr","allrequest","setrequests","interval_id","fetch","console","log","get","withCredentials","then","res","data","current","setInterval","cleanup","clearInterval","showModal","setShow","file","SetFile","Info","SetInfo","SubmitFile","e","preventDefault","formData","FormData","append","post","headers","code","window","flash","onChangeHandlerFile","files","uploadedFile","target","map","_","index","request","Added","format","Item","Quantity","_id","ModalBody","Body"],"mappings":"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","sourcesContent":["import React , { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport {Table,Button,Container, Modal, Form} from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { API_URL } from '../../utils/constant';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst RequestTable = () => {\r\n    const arr = ['Date Requested','Item Name','Quantity','Quotation']\r\n    const [allrequest, setrequests] = useState([])\r\n    const interval_id = useRef(null);\r\n    // const [open, setOpen] = useState(false);\r\n    async function fetch(){\r\n      console.log('in fetch');\r\n        await axios.get(`${API_URL}/get_purchase_request`, {\r\n             withCredentials: true\r\n         }).then((res)=>{\r\n             console.log(res.data);\r\n             \r\n             setrequests(res.data);\r\n             \r\n         })\r\n     } \r\n    // var requests = []\r\n    useEffect( () =>{\r\n      fetch()\r\n     \r\n      interval_id.current = setInterval(()=>{fetch()}, 3000);\r\n     return function cleanup() {\r\n        clearInterval(interval_id.current);\r\n        }\r\n    },[])\r\n    \r\n    const [showModal, setShow] = useState(false)\r\n    const [file, SetFile] = useState(null)\r\n    const [Info, SetInfo] = useState(\"\")\r\n\r\n    \r\n    const SubmitFile = async (e)=>{\r\n            \r\n        e.preventDefault();            \r\n\r\n        console.log('File ' , file)\r\n        // console.log(e.target.file)\r\n\r\n\r\n        // console.log('document', document.getElementById('file').value())\r\n        \r\n        if (file) {\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            await axios.post(`${API_URL}/${Info}/upload`, formData, {\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n            }).then((res)=>{\r\n                if(res.data.code == 200)\r\n                {\r\n                    SetFile(null);\r\n                    window.flash('File Successfully Submitted')\r\n                    fetch();\r\n                }\r\n                else\r\n                {\r\n                    window.flash('Failed To Submit The File', 'danger')\r\n                }\r\n            });\r\n          } else {\r\n            window.flash('Please select a file to add.', 'danger');\r\n          }\r\n        \r\n        \r\n        \r\n        \r\n        \r\n    \r\n    }\r\n\r\n    const onChangeHandlerFile=(files)=>{\r\n        console.log(files)\r\n        const [uploadedFile] = files.target.files;\r\n        console.log(uploadedFile)\r\n        SetFile(uploadedFile)\r\n\r\n    }\r\n   \r\n\r\n   \r\n    // const ModalContent = ()=>{\r\n       \r\n    //    function getBase64(e) {\r\n    //         var file = e.target.files[0]\r\n    //         let reader = new FileReader()\r\n    //         reader.readAsDataURL(file)\r\n    //         reader.onload = () => {\r\n    //             console.log(reader.result)\r\n    //             SetFile(reader.result)\r\n    //         //   this.setState({\r\n    //         //     imgUpload: reader.result\r\n    //         //   })\r\n    //         };\r\n    //         reader.onerror = function (error) {\r\n    //           console.log('Error: ', error);\r\n    //         }\r\n    //       }\r\n        \r\n\r\n    //     return(\r\n    //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\r\n    //             <Modal.Header closeButton>\r\n    //                 <Modal.Title>\r\n    //                     Details \r\n    //                 </Modal.Title>\r\n    //                 </Modal.Header>\r\n    //                 <Form>    \r\n\r\n    //                 <ModalBody>\r\n                        \r\n    //                 <input\r\n    //                 type = 'file'\r\n    //                 id=\"file\"\r\n    //                 name = \"file\"\r\n    //                 value={FileInfo}\r\n    //                 onChange={(e) => { e.preventDefault(); \r\n    //                     SetFile(e.target.files[0])\r\n    //                     // getBase64(e);\r\n    //                 }}\r\n    //                 />\r\n    //                 </ModalBody>\r\n\r\n                \r\n    //             <Modal.Footer>\r\n    //                 <Btn className = \"btn-success\" type = \"submit\">Submit</Btn>\r\n    //             </Modal.Footer>\r\n    //             </Form>\r\n\r\n    //         </Modal>\r\n    //     );\r\n        \r\n    \r\n    // }\r\n    \r\n\r\n\r\n    return(\r\n        <>\r\n         {/* {showModal?\r\n            <div>\r\n                <ModalContent/>\r\n            </div>\r\n        :null    */}\r\n        \r\n\r\n\r\n\r\n     <Container>\r\n       <Button className = \"Btn float-right mb-2\" onClick={fetch} >Refresh</Button>\r\n        <Table className=\"TableStyle\" responsive=\"sm\">\r\n        <thead>\r\n            <tr>\r\n             <th>#</th>\r\n            {arr.map((_, index) => (\r\n              <th key={index}>{_}</th>\r\n            ))}\r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allrequest.map((request, index) =>{\r\n            return(\r\n            <>\r\n             <tr key= {index}>\r\n                <td>{index+1}</td>\r\n                {/* <td>{request.R_Emp_Name}<br/></td> */}\r\n                {/* <td>{request.R_Emp_Email}</td> */}\r\n                <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\r\n                <td>{request.Item}</td>\r\n                <td>{request.Quantity}</td>\r\n                {/* <td>{request.Duration}</td> */}\r\n                <td>\r\n\r\n\r\n                {/* <a href = \"http://localhost:5000/upload\"><Btn>Upload</Btn></a> */}\r\n\r\n                    <Form onSubmit = {SubmitFile}>\r\n                        <Form.File name = \"file\" onChange = {  onChangeHandlerFile } />\r\n                        <Button type=\"submit\" className =\"Btn mt-2 btn btn-md\" onClick= {() => {SetInfo(request._id)}}>Submit</Button>\r\n                    </Form>\r\n                </td>\r\n            </tr>\r\n            \r\n            </>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      </Container>\r\n      </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default RequestTable\r\n\r\n// const TableStyle = styled(Table)`\r\n\r\n// th {background: #1F386B;color : white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n\r\n// const Btn = styled(Button)`\r\n//     background :#EFBB20;\r\n//     border: none; \r\n//     &:hover{\r\n//     background: #0e8ccc;\r\n// }`;\r\n\r\nconst ModalBody = styled(Modal.Body)`\r\n\r\nli{\r\n    padding:5px;\r\n}\r\n\r\n`;"]},"metadata":{},"sourceType":"module"}