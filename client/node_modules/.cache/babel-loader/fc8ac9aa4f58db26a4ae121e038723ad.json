{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\storeTable\\\\Store_Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Table, Button, Tab, Tabs, Container } from 'react-bootstrap'; // import { Tabs, Tab } from 'react-bootstrap-tabs';\n// import { useHistory } from 'react-router-dom';\n\nimport { API_URL } from '../../utils/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RequestTable = () => {\n  _s();\n\n  const arr = ['Request ID', 'Requested By', 'Email', 'Department', 'Item Name', ' '];\n  const [allrequest, setrequests] = useState([]);\n  const [allissued, setissued] = useState([]);\n  const [allreceive, setreceive] = useState([]);\n  const interval_id = useRef(null); // const history = useHistory()\n\n  async function fetch() {\n    await axios.get(`${API_URL}/storerequests`, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n      setrequests(res.data.requests);\n      setissued(res.data.issued);\n      setreceive(res.data.receive);\n    });\n  }\n\n  const onIssue = id => {\n    console.log(\"STORE TABLE MAIN ID FOR PARAMS\", id);\n    axios.post(`${API_URL}/request_issued`, {\n      id: id\n    }).then(res => {\n      if (res.data) {\n        // setShow(false)\n        window.flash('Request Issued');\n        fetch();\n      }\n    }); // history.push('/issuenote');\n  };\n\n  const onPurchase = id => {\n    axios.post(`${API_URL}/request_forward_purchase`, {\n      id: id\n    }).then(res => {\n      if (res.data) {\n        // setShow(false)\n        window.flash('Request Forwarded to Purchase Department');\n        fetch();\n      }\n    });\n  };\n\n  const onCancel = (_id, email, name, item) => {\n    axios.post(`${API_URL}/request_cancel`, {\n      id: _id,\n      email: email,\n      name: name,\n      item: item\n    }).then(res => {\n      if (res.data) {\n        window.flash('Request Cancelled');\n        fetch();\n      }\n    });\n  };\n\n  const OnReturn = (_id, email, name, item) => {\n    axios.post(`${API_URL}/return_this_item`, {\n      id: _id,\n      email: email,\n      name: name,\n      item: item\n    }).then(res => {\n      if (res.data) {\n        window.flash('Request Returned');\n        fetch();\n      }\n    });\n  };\n\n  const OnReceived = (_id, email, name, item) => {\n    axios.post(`${API_URL}/receive_this_item`, {\n      id: _id,\n      email: email,\n      name: name,\n      item: item\n    }).then(res => {\n      if (res.data) {\n        window.flash('Request Recieved');\n        fetch();\n      }\n    });\n  };\n\n  const OnDissmiss = (_id, email, name, item) => {\n    axios.post(`${API_URL}/dissmiss_this_item`, {\n      id: _id,\n      email: email,\n      name: name,\n      item: item\n    }).then(res => {\n      if (res.data) {\n        window.flash('Request Dissmissed');\n        fetch();\n      }\n    });\n  }; // var requests = []\n\n\n  useEffect(() => {\n    fetch();\n    interval_id.current = setInterval(() => {\n      fetch();\n    }, 3000);\n    return function cleanup() {\n      clearInterval(interval_id.current);\n    };\n  }, []); // const [showModal, setShow] = useState(false)\n  // const [ModalInfo, SetInfo] = useState({})\n  // const ModalContent = ()=>{\n  //     return(\n  //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n  //             <Modal.Header closeButton>\n  //                 <Modal.Title>\n  //                     Details\n  //                 </Modal.Title>\n  //                        </Modal.Header>\n  //                 <ModalBody>\n  //                     <ul className=\"list-unstyled\">\n  //                         <li><strong>Requested by:</strong> {ModalInfo.R_Emp_Name}</li>\n  //                         <li><strong>Email:</strong> {ModalInfo.R_Emp_Email}</li>\n  //                         <li><strong>Item:</strong> {ModalInfo.Item}</li>\n  //                         <li><strong>Quantity:</strong> {ModalInfo.Quantity}</li>\n  //                         <li><strong>Duration:</strong> {ModalInfo.Duration}</li>\n  //                         <li><strong>Reason:</strong> {ModalInfo.Reason}</li>\n  //                         <li className=\"mt-3\">\n  //                             <Form>\n  //                                 <Form.Group>\n  //                                     <Form.Control as=\"textarea\" placeholder = \"Additional Comments\" row={6}/>\n  //                                 </Form.Group>\n  //                             </Form>\n  //                         </li>\n  //                     </ul>\n  //                 </ModalBody>\n  //             <Modal.Footer>\n  //                 {/* <Btn className = \"btn-success\">Approve</Btn>\n  //                 <Btn className=\"btn-danger\">Reject</Btn> */}\n  //                 <Btn className=\"btn-success\" onClick= {() => {onPurchase()}}>Send To Purchase Department</Btn>\n  //             </Modal.Footer>\n  //         </Modal>\n  //     );\n  // }\n\n  const [key, setkey] = useState('Issue');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"MainContainer\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        id: \"controlled-tab-example\",\n        activeKey: key,\n        onSelect: key => setkey(key),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"Issue\",\n          title: \"Issue Requests (\" + allrequest.length + \")\",\n          children: allrequest.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"w-100 TableStyle\",\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 49\n                    }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: _\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 53\n                    }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: allrequest.map((request, index) => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [request.Order_ID, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 202,\n                          columnNumber: 79\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [request.R_Emp_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 203,\n                          columnNumber: 81\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: request.R_Emp_Email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: request.R_Emp_Dept.Dept_Name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"new-line\",\n                        children: request.Item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => {\n                            onPurchase(request);\n                          },\n                          className: \"Btn m-2\",\n                          children: \" Send to Purchase \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 211,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => onIssue(request._id),\n                          className: \"m-2 btn-success mr-1\",\n                          children: \"Issue\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 212,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => onCancel(request._id, request.R_Emp_Email, request.R_Emp_Name, request.Item),\n                          className: \"btn-danger\",\n                          children: \"Cancel\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 213,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"Return\",\n          title: \"Return Requests (\" + allissued.length + \")\",\n          children: allissued.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"w-100 TableStyle\",\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 49\n                    }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: _\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 53\n                    }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: allissued.map((request, index) => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [request.Order_ID, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 258,\n                          columnNumber: 79\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [request.R_Emp_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 259,\n                          columnNumber: 81\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: request.R_Emp_Email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: request.R_Emp_Dept.Dept_Name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"new-line\",\n                        children: request.Item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => OnReturn(request._id),\n                          className: \"m-2 btn-success mr-1\",\n                          children: \"Returned\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 267,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => OnDissmiss(request._id),\n                          className: \"m-2 mr-1 btn-danger\",\n                          children: \"Dissmiss\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 268,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"Receive\",\n          title: \"Receive Requests\",\n          children: allreceive.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"w-100 TableStyle\",\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 49\n                    }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: _\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 53\n                    }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: allreceive.map((request, index) => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 313,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [request.Order_ID, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 314,\n                          columnNumber: 79\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [request.R_Emp_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 315,\n                          columnNumber: 81\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: request.R_Emp_Email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: request.R_Emp_Dept.Dept_Name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"new-line\",\n                        children: request.Item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 318,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => OnReceived(request._id),\n                          className: \"m-2 btn-success mr-1\",\n                          children: \"Received\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 323,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => OnDissmiss(request._id),\n                          className: \"m-2 mr-1 btn-danger\",\n                          children: \"Dissmiss\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 324,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 33\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(RequestTable, \"DEjTYMETW3tT6CReA/548IXJUPU=\");\n\n_c = RequestTable;\nexport default RequestTable; // const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n// const Btn = styled(Button)`\n// &:hover{\n//     background: #0e8ccc;\n// }\n// `;\n// const ModalBody = styled(Modal.Body)`\n// li{\n//     padding:5px;\n// }\n// `;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestTable\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/storeTable/Store_Table.js"],"names":["React","useEffect","useState","useRef","axios","Table","Button","Tab","Tabs","Container","API_URL","RequestTable","arr","allrequest","setrequests","allissued","setissued","allreceive","setreceive","interval_id","fetch","get","withCredentials","then","res","console","log","data","requests","issued","receive","onIssue","id","post","window","flash","onPurchase","onCancel","_id","email","name","item","OnReturn","OnReceived","OnDissmiss","current","setInterval","cleanup","clearInterval","key","setkey","length","map","_","index","request","Order_ID","R_Emp_Name","R_Emp_Email","R_Emp_Dept","Dept_Name","Item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Button, Tab, Tabs, Container } from 'react-bootstrap';\r\n// import { Tabs, Tab } from 'react-bootstrap-tabs';\r\n// import { useHistory } from 'react-router-dom';\r\nimport { API_URL } from '../../utils/constant';\r\n\r\nconst RequestTable = () => {\r\n    const arr = ['Request ID', 'Requested By', 'Email', 'Department', 'Item Name', ' ']\r\n    const [allrequest, setrequests] = useState([])\r\n    const [allissued, setissued] = useState([])\r\n    const [allreceive, setreceive] = useState([])\r\n\r\n    const interval_id = useRef(null);\r\n    // const history = useHistory()\r\n    async function fetch() {\r\n        await axios.get(`${API_URL}/storerequests`, {\r\n            withCredentials: true\r\n        }).then((res) => {\r\n            console.log(res.data);\r\n            setrequests(res.data.requests);\r\n            setissued(res.data.issued);\r\n            setreceive(res.data.receive);\r\n\r\n\r\n\r\n\r\n        })\r\n    }\r\n    const onIssue = (id) => {\r\n\r\n        console.log(\"STORE TABLE MAIN ID FOR PARAMS\", id)\r\n        axios.post(`${API_URL}/request_issued`, { id: id }).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    // setShow(false)\r\n                    window.flash('Request Issued');\r\n                    fetch();\r\n                }\r\n            }\r\n        )\r\n        // history.push('/issuenote');\r\n    }\r\n\r\n\r\n    const onPurchase = (id) => {\r\n        axios.post(`${API_URL}/request_forward_purchase`, { id: id }).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    // setShow(false)\r\n                    window.flash('Request Forwarded to Purchase Department')\r\n                    fetch();\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const onCancel = (_id, email, name, item) => {\r\n        axios.post(`${API_URL}/request_cancel`, { id: _id, email: email, name: name, item: item }).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    window.flash('Request Cancelled');\r\n                    fetch();\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const OnReturn = (_id, email, name, item) => {\r\n        axios.post(`${API_URL}/return_this_item`, { id: _id, email: email, name: name, item: item }).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    window.flash('Request Returned');\r\n                    fetch();\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n    const OnReceived = (_id, email, name, item) => {\r\n        axios.post(`${API_URL}/receive_this_item`, { id: _id, email: email, name: name, item: item }).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    window.flash('Request Recieved');\r\n                    fetch();\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const OnDissmiss = (_id, email, name, item) => {\r\n        axios.post(`${API_URL}/dissmiss_this_item`, { id: _id, email: email, name: name, item: item }).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    window.flash('Request Dissmissed');\r\n                    fetch();\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n    // var requests = []\r\n    useEffect(() => {\r\n        fetch()\r\n\r\n        interval_id.current = setInterval(() => { fetch() }, 3000);\r\n        return function cleanup() {\r\n            clearInterval(interval_id.current);\r\n        }\r\n    }, [])\r\n\r\n\r\n    // const [showModal, setShow] = useState(false)\r\n    // const [ModalInfo, SetInfo] = useState({})\r\n    // const ModalContent = ()=>{\r\n\r\n    //     return(\r\n    //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\r\n    //             <Modal.Header closeButton>\r\n    //                 <Modal.Title>\r\n    //                     Details\r\n    //                 </Modal.Title>\r\n    //                        </Modal.Header>\r\n    //                 <ModalBody>\r\n    //                     <ul className=\"list-unstyled\">\r\n    //                         <li><strong>Requested by:</strong> {ModalInfo.R_Emp_Name}</li>\r\n    //                         <li><strong>Email:</strong> {ModalInfo.R_Emp_Email}</li>\r\n    //                         <li><strong>Item:</strong> {ModalInfo.Item}</li>\r\n    //                         <li><strong>Quantity:</strong> {ModalInfo.Quantity}</li>\r\n    //                         <li><strong>Duration:</strong> {ModalInfo.Duration}</li>\r\n    //                         <li><strong>Reason:</strong> {ModalInfo.Reason}</li>\r\n    //                         <li className=\"mt-3\">\r\n    //                             <Form>\r\n    //                                 <Form.Group>\r\n    //                                     <Form.Control as=\"textarea\" placeholder = \"Additional Comments\" row={6}/>\r\n    //                                 </Form.Group>\r\n    //                             </Form>\r\n    //                         </li>\r\n    //                     </ul>\r\n    //                 </ModalBody>\r\n\r\n\r\n    //             <Modal.Footer>\r\n    //                 {/* <Btn className = \"btn-success\">Approve</Btn>\r\n    //                 <Btn className=\"btn-danger\">Reject</Btn> */}\r\n    //                 <Btn className=\"btn-success\" onClick= {() => {onPurchase()}}>Send To Purchase Department</Btn>\r\n\r\n    //             </Modal.Footer>\r\n    //         </Modal>\r\n    //     );\r\n\r\n\r\n    // }\r\n    const [key, setkey] = useState('Issue')\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* {showModal?\r\n            <div>\r\n                <ModalContent/>\r\n            </div>\r\n        :null\r\n        } */}\r\n            <Container className=\"MainContainer\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={key => setkey(key)}\r\n                >\r\n                    <Tab eventKey=\"Issue\" title={\"Issue Requests (\" + allrequest.length + \")\"} >\r\n\r\n\r\n\r\n                        {\r\n                            allrequest.length > 0 &&\r\n                            <>\r\n                                {/* <h1>Issue Request</h1> */}\r\n                                <Table className=\"w-100 TableStyle\" responsive>\r\n                                    <thead>\r\n                                        <>\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                {arr.map((_, index) => (\r\n                                                    <th key={index}>{_}</th>\r\n                                                ))}\r\n                                                <th></th>\r\n                                            </tr>\r\n                                        </>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {allrequest.map((request, index) => {\r\n                                            return (\r\n                                                <>\r\n                                                    {/* <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"button-tooltip-2\">Click to see Details</Tooltip>} > */}\r\n                                                    {/* <tr key={index} onClick={() => { onIssue(request._id) }}> */}\r\n                                                    <tr>\r\n                                                        <td>{index + 1}</td>\r\n                                                        <td>{request.Order_ID}<br /></td>\r\n                                                        <td>{request.R_Emp_Name}<br /></td>\r\n                                                        <td>{request.R_Emp_Email}</td>\r\n                                                        <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                                                        <td className=\"new-line\">{request.Item}</td>\r\n                                                        {/* <td>{request.Quantity}</td>\r\n                                        <td>{request.Duration}</td> */}\r\n\r\n                                                        <td>\r\n                                                            <Button onClick={() => { onPurchase(request); }} className=\"Btn m-2\"> Send to Purchase </Button>\r\n                                                            <Button onClick={() => onIssue(request._id)} className=\"m-2 btn-success mr-1\">Issue</Button>\r\n                                                            <Button onClick={() => onCancel(request._id, request.R_Emp_Email, request.R_Emp_Name, request.Item)} className=\"btn-danger\">Cancel</Button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    {/* </OverlayTrigger> */}\r\n\r\n                                                </>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                        {/* {\r\n                allrequest.length === 0 && <h2>No Requests.</h2>\r\n            } */}\r\n                    </Tab>\r\n                    <Tab eventKey=\"Return\" title={\"Return Requests (\" + allissued.length + \")\"}>\r\n\r\n\r\n\r\n\r\n                        {allissued.length > 0 &&\r\n                            <>\r\n                                {/* <h1>Return Request</h1> */}\r\n\r\n                                <Table className=\"w-100 TableStyle\" responsive>\r\n                                    <thead>\r\n                                        <>\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                {arr.map((_, index) => (\r\n                                                    <th key={index}>{_}</th>\r\n                                                ))}\r\n                                                <th></th>\r\n                                            </tr>\r\n                                        </>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {allissued.map((request, index) => {\r\n                                            return (\r\n                                                <>\r\n                                                    {/* <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"button-tooltip-2\">Click to see Details</Tooltip>} > */}\r\n                                                    {/* <tr key={index} onClick={() => { onIssue(request._id) }}> */}\r\n                                                    <tr>\r\n                                                        <td>{index + 1}</td>\r\n                                                        <td>{request.Order_ID}<br /></td>\r\n                                                        <td>{request.R_Emp_Name}<br /></td>\r\n                                                        <td>{request.R_Emp_Email}</td>\r\n                                                        <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                                                        <td className=\"new-line\">{request.Item}</td>\r\n                                                        {/* <td>{request.Quantity}</td>\r\n                                        <td>{request.Duration}</td> */}\r\n\r\n                                                        <td>\r\n                                                            <Button onClick={() => OnReturn(request._id)} className=\"m-2 btn-success mr-1\">Returned</Button>\r\n                                                            <Button onClick={() => OnDissmiss(request._id)} className=\"m-2 mr-1 btn-danger\">Dissmiss</Button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    {/* </OverlayTrigger> */}\r\n\r\n                                                </>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                        {/* {\r\n                allissued.length === 0 && <h2>No Requests.</h2>\r\n            } */}\r\n                    </Tab>\r\n                    <Tab eventKey=\"Receive\" title=\"Receive Requests\">\r\n\r\n\r\n\r\n\r\n\r\n                        {allreceive.length > 0 &&\r\n                            <>\r\n                                {/* <h1>Receive Request</h1> */}\r\n\r\n                                <Table className=\"w-100 TableStyle\" responsive>\r\n                                    <thead>\r\n                                        <>\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                {arr.map((_, index) => (\r\n                                                    <th key={index}>{_}</th>\r\n                                                ))}\r\n                                                <th></th>\r\n                                            </tr>\r\n                                        </>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {allreceive.map((request, index) => {\r\n                                            return (\r\n                                                <>\r\n                                                    {/* <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"button-tooltip-2\">Click to see Details</Tooltip>} > */}\r\n                                                    {/* <tr key={index} onClick={() => { onIssue(request._id) }}> */}\r\n                                                    <tr>\r\n                                                        <td>{index + 1}</td>\r\n                                                        <td>{request.Order_ID}<br /></td>\r\n                                                        <td>{request.R_Emp_Name}<br /></td>\r\n                                                        <td>{request.R_Emp_Email}</td>\r\n                                                        <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                                                        <td className=\"new-line\">{request.Item}</td>\r\n                                                        {/* <td>{request.Quantity}</td>\r\n                                        <td>{request.Duration}</td> */}\r\n\r\n                                                        <td>\r\n                                                            <Button onClick={() => OnReceived(request._id)} className=\"m-2 btn-success mr-1\">Received</Button>\r\n                                                            <Button onClick={() => OnDissmiss(request._id)} className=\"m-2 mr-1 btn-danger\">Dissmiss</Button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    {/* </OverlayTrigger> */}\r\n\r\n                                                </>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                        {/* {\r\n                        allreceive.length === 0 && <h2>No Requests.</h2>\r\n                    } */}\r\n\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default RequestTable\r\n\r\n// const TableStyle = styled(Table)`\r\n// th {background: #1F386B; color:white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n// const Btn = styled(Button)`\r\n// &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n\r\n// `;\r\n\r\n// const ModalBody = styled(Modal.Body)`\r\n\r\n// li{\r\n//     padding:5px;\r\n// }\r\n\r\n// `;"]},"metadata":{},"sourceType":"module"}