{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\ManagerRequestTable\\\\ManagerRequestTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Table, Container, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport moment from 'moment'; // import styled from 'styled-components';\n\nimport { useHistory } from 'react-router';\nimport { API_URL } from '../../utils/constant'; // import Cookie from 'universal-cookie';\n\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminRequestTable = () => {\n  _s();\n\n  // const cookie = new Cookie();\n  const arr = ['Request ID', 'Requested By', 'Email', 'Date Requested', 'Department', 'Item'];\n  const [allrequest, setrequests] = useState([]);\n  const interval_id = useRef(null);\n\n  async function fetch() {\n    await axios.get(`${API_URL}/get_accounts_requests`, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n      setrequests(res.data);\n    });\n  }\n\n  useEffect(() => {\n    fetch();\n    interval_id.current = setInterval(() => {\n      fetch();\n    }, 3000);\n    return function cleanup() {\n      clearInterval(interval_id.current);\n    };\n  }, []);\n  const history = useHistory();\n\n  const OpenNewPage = id => {\n    var Role = localStorage.getItem('user'); // var Role = cookie.get('user');\n\n    if (Role === 'Admin') history.push('/' + id + '/admin');else if (Role === 'Director') history.push('/' + id + '/director');else history.push('/' + id + '/accounts');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [allrequest.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"TableStyle\",\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: _\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allrequest.map((request, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                placement: \"bottom\",\n                overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  id: \"button-tooltip-2\",\n                  children: \"Click to see Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 65\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  onClick: () => {\n                    OpenNewPage(request._id);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [request.Order_ID, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [request.R_Emp_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: request.R_Emp_Email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: moment(request.Added).format('Do MMMM YYYY')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: request.R_Emp_Dept.Dept_Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: request.Item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), allrequest.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Requests.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AdminRequestTable, \"pQwgkwIfDDm4lACARmThj0xeFn0=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminRequestTable;\nexport default AdminRequestTable; // const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n// const Btn = styled(Button)`\n// &:hover{\n//     background: #0e8ccc;\n// }\n// `;\n// const ModalBody = styled(Modal.Body)`\n// li{\n//     padding:5px;\n// }\n// `;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRequestTable\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/ManagerRequestTable/ManagerRequestTable.js"],"names":["React","useEffect","useState","useRef","axios","Table","Container","OverlayTrigger","Tooltip","moment","useHistory","API_URL","AdminRequestTable","arr","allrequest","setrequests","interval_id","fetch","get","withCredentials","then","res","console","log","data","current","setInterval","cleanup","clearInterval","history","OpenNewPage","id","Role","localStorage","getItem","push","length","map","_","index","request","_id","Order_ID","R_Emp_Name","R_Emp_Email","Added","format","R_Emp_Dept","Dept_Name","Item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,cAA3B,EAA2CC,OAA3C,QAA0D,iBAA1D;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,sBAAxB,C,CACA;;AACA,OAAO,cAAP;;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B;AACA,QAAMC,GAAG,GAAG,CAAC,YAAD,EAAe,cAAf,EAA+B,OAA/B,EAAwC,gBAAxC,EAA0D,YAA1D,EAAwE,MAAxE,CAAZ;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMc,WAAW,GAAGb,MAAM,CAAC,IAAD,CAA1B;;AAGA,iBAAec,KAAf,GAAuB;AACrB,UAAMb,KAAK,CAACc,GAAN,CAAW,GAAEP,OAAQ,wBAArB,EAA8C;AAClDQ,MAAAA,eAAe,EAAE;AADiC,KAA9C,EAEHC,IAFG,CAEGC,GAAD,IAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AAEAT,MAAAA,WAAW,CAACM,GAAG,CAACG,IAAL,CAAX;AAED,KAPK,CAAN;AAQD;;AACDvB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK;AAELD,IAAAA,WAAW,CAACS,OAAZ,GAAsBC,WAAW,CAAC,MAAM;AAAET,MAAAA,KAAK;AAAI,KAAlB,EAAoB,IAApB,CAAjC;AACA,WAAO,SAASU,OAAT,GAAmB;AACxBC,MAAAA,aAAa,CAACZ,WAAW,CAACS,OAAb,CAAb;AACD,KAFD;AAID,GARQ,EAQN,EARM,CAAT;AAUA,QAAMI,OAAO,GAAGnB,UAAU,EAA1B;;AACA,QAAMoB,WAAW,GAAIC,EAAD,IAAQ;AAE1B,QAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAF0B,CAG1B;;AACA,QAAIF,IAAI,KAAK,OAAb,EACEH,OAAO,CAACM,IAAR,CAAa,MAAMJ,EAAN,GAAW,QAAxB,EADF,KAEK,IAAIC,IAAI,KAAK,UAAb,EACHH,OAAO,CAACM,IAAR,CAAa,MAAMJ,EAAN,GAAW,WAAxB,EADG,KAGHF,OAAO,CAACM,IAAR,CAAa,MAAMJ,EAAN,GAAW,WAAxB;AAEH,GAXD;;AAcA,sBACE;AAAA,2BAGE,QAAC,SAAD;AAAA,iBACGjB,UAAU,CAACsB,MAAX,GAAoB,CAApB,iBACC,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,UAAU,MAAxC;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGvB,GAAG,CAACwB,GAAJ,CAAQ,CAACC,CAAD,EAAIC,KAAJ,kBACP;AAAA,wBAAiBD;AAAjB,eAASC,KAAT;AAAA;AAAA;AAAA;AAAA,oBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA,oBACGzB,UAAU,CAACuB,GAAX,CAAe,CAACG,OAAD,EAAUD,KAAV,KAAoB;AAClC,gCACE;AAAA,qCACE,QAAC,cAAD;AAAgB,gBAAA,SAAS,EAAC,QAA1B;AAAmC,gBAAA,OAAO,eAAE,QAAC,OAAD;AAAS,kBAAA,EAAE,EAAC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA5C;AAAA,uCAEE;AAAI,kBAAA,OAAO,EAAE,MAAM;AACjBT,oBAAAA,WAAW,CAACU,OAAO,CAACC,GAAT,CAAX;AAED,mBAHD;AAAA,0CAIE;AAAA,8BAAKF,KAAK,GAAG;AAAb;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE;AAAA,+BAAKC,OAAO,CAACE,QAAb,eAAsB;AAAA;AAAA;AAAA;AAAA,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,eAME;AAAA,+BAAKF,OAAO,CAACG,UAAb,eAAwB;AAAA;AAAA;AAAA;AAAA,4BAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF,eAOE;AAAA,8BAAKH,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,0BAPF,eAQE;AAAA,8BAAKnC,MAAM,CAAC+B,OAAO,CAACK,KAAT,CAAN,CAAsBC,MAAtB,CAA6B,cAA7B;AAAL;AAAA;AAAA;AAAA;AAAA,0BARF,eASE;AAAA,8BAAKN,OAAO,CAACO,UAAR,CAAmBC;AAAxB;AAAA;AAAA;AAAA;AAAA,0BATF,eAUE;AAAA,8BAAKR,OAAO,CAACS;AAAb;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF,6BADF;AAuBD,WAxBA;AADH;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EA2CInC,UAAU,CAACsB,MAAX,KAAsB,CAAtB,iBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3C/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF,mBADF;AAuDD,CAjGD;;GAAMxB,iB;UA2BYF,U;;;KA3BZE,iB;AAoGN,eAAeA,iBAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Container, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n// import styled from 'styled-components';\r\nimport { useHistory } from 'react-router';\r\nimport { API_URL } from '../../utils/constant';\r\n// import Cookie from 'universal-cookie';\r\nimport '../style.css'\r\n\r\nconst AdminRequestTable = () => {\r\n  // const cookie = new Cookie();\r\n  const arr = ['Request ID', 'Requested By', 'Email', 'Date Requested', 'Department', 'Item']\r\n  const [allrequest, setrequests] = useState([])\r\n  const interval_id = useRef(null);\r\n\r\n\r\n  async function fetch() {\r\n    await axios.get(`${API_URL}/get_accounts_requests`, {\r\n      withCredentials: true\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n\r\n      setrequests(res.data);\r\n\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    fetch()\r\n\r\n    interval_id.current = setInterval(() => { fetch() }, 3000);\r\n    return function cleanup() {\r\n      clearInterval(interval_id.current);\r\n    }\r\n\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n  const OpenNewPage = (id) => {\r\n\r\n    var Role = localStorage.getItem('user');\r\n    // var Role = cookie.get('user');\r\n    if (Role === 'Admin')\r\n      history.push('/' + id + '/admin')\r\n    else if (Role === 'Director')\r\n      history.push('/' + id + '/director')\r\n    else\r\n      history.push('/' + id + '/accounts')\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <Container>\r\n        {allrequest.length > 0 &&\r\n          <Table className=\"TableStyle\" responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                {arr.map((_, index) => (\r\n                  <th key={index}>{_}</th>\r\n                ))}\r\n\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {allrequest.map((request, index) => {\r\n                return (\r\n                  <>\r\n                    <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"button-tooltip-2\">Click to see Details</Tooltip>} >\r\n\r\n                      <tr onClick={() => {\r\n                        OpenNewPage(request._id)\r\n\r\n                      }}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{request.Order_ID}<br /></td>\r\n                        <td>{request.R_Emp_Name}<br /></td>\r\n                        <td>{request.R_Emp_Email}</td>\r\n                        <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\r\n                        <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                        <td>{request.Item}</td>\r\n                        {/* <td>{request.Quantity}</td>\r\n                <td>{request.Duration}</td> */}\r\n\r\n                      </tr>\r\n                    </OverlayTrigger>\r\n\r\n                  </>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n\r\n        }\r\n        {\r\n          allrequest.length === 0 && <h2>No Requests.</h2>\r\n        }\r\n\r\n      </Container>\r\n    </>\r\n  )\r\n\r\n\r\n}\r\n\r\n\r\nexport default AdminRequestTable\r\n\r\n// const TableStyle = styled(Table)`\r\n// th {background: #1F386B; color:white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n// const Btn = styled(Button)`\r\n// &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n\r\n// `;\r\n\r\n// const ModalBody = styled(Modal.Body)`\r\n\r\n// li{\r\n//     padding:5px;\r\n// }\r\n\r\n// `;"]},"metadata":{},"sourceType":"module"}