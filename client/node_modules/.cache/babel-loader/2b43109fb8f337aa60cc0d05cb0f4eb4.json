{"ast":null,"code":"var _jsxFileName = \"/home/amir/Desktop/New File/current/IMS/client/src/components/purchaseRequest/Purchase_request_table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Table, Button, Container, Modal, Form } from 'react-bootstrap';\nimport moment from 'moment';\nimport { API_URL } from '../../utils/constant';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RequestTable = () => {\n  _s();\n\n  const arr = ['Date Requested', 'Item Name', 'Quantity', 'Quotation'];\n  const [allrequest, setrequests] = useState([]);\n  const interval_id = useRef(null); // const [open, setOpen] = useState(false);\n\n  async function fetch() {\n    console.log('in fetch');\n    await axios.get(`${API_URL}/get_purchase_request`, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n      setrequests(res.data);\n    });\n  } // var requests = []\n\n\n  useEffect(() => {\n    fetch(); //   interval_id.current = setInterval(()=>{fetch()}, 3000);\n    //  return function cleanup() {\n    //     clearInterval(interval_id.current);\n    //     }\n  }, []);\n  const [showModal, setShow] = useState(false);\n  const [file, SetFile] = useState(null);\n  const [Info, SetInfo] = useState(\"\");\n\n  const SubmitFile = async e => {\n    e.preventDefault();\n    console.log('File ', file); // console.log(e.target.file)\n    // console.log('document', document.getElementById('file').value())\n\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      await axios.post(`${API_URL}/${Info}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        if (res.data.code == 200) {\n          window.flash('File Successfully Submitted');\n          fetch();\n        } else {\n          window.flash('Failed To Submit The File', 'danger');\n        }\n      });\n    } else {\n      window.flash('Please select a file to add.', 'danger');\n    }\n  };\n\n  let f = null;\n\n  const onChangeHandlerFile = event => {\n    event.preventDefault(); // console.log(files)\n\n    const [uploadedFile] = event.target.files;\n    console.log(uploadedFile);\n    f = uploadedFile;\n    SetFile(uploadedFile);\n  };\n\n  const ModalContent = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => {\n        setShow(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: SubmitFile,\n            children: [/*#__PURE__*/_jsxDEV(Form.File, {\n              name: \"file\",\n              onChange: onChangeHandlerFile,\n              value: f\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"Btn mt-2 btn btn-md\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"Btn float-right mb-2 \",\n        onClick: fetch,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 69\n        }, this), \"Refresh\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"TableStyle\",\n        responsive: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 14\n            }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: _\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allrequest.map((request, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                onClick: () => {\n                  SetInfo(request._id);\n                  setShow(true);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: moment(request.Added).format('Do MMMM YYYY')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: request.Item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: request.Quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 17\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 14\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RequestTable, \"RYOKEzN8rstWh2KZjg7KNEX8SzA=\");\n\n_c = RequestTable;\nexport default RequestTable; // const TableStyle = styled(Table)`\n// th {background: #1F386B;color : white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n// const Btn = styled(Button)`\n//     background :#EFBB20;\n//     border: none; \n//     &:hover{\n//     background: #0e8ccc;\n// }`;\n// const ModalBody = styled(Modal.Body)`\n// li{\n//     padding:5px;\n// }\n// `;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestTable\");","map":{"version":3,"sources":["/home/amir/Desktop/New File/current/IMS/client/src/components/purchaseRequest/Purchase_request_table.js"],"names":["React","useEffect","useState","useRef","axios","Table","Button","Container","Modal","Form","moment","API_URL","styled","RequestTable","arr","allrequest","setrequests","interval_id","fetch","console","log","get","withCredentials","then","res","data","showModal","setShow","file","SetFile","Info","SetInfo","SubmitFile","e","preventDefault","formData","FormData","append","post","headers","code","window","flash","f","onChangeHandlerFile","event","uploadedFile","target","files","ModalContent","map","_","index","request","_id","Added","format","Item","Quantity"],"mappings":"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","sourcesContent":["import React , { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport {Table,Button,Container, Modal, Form} from 'react-bootstrap';\nimport moment from 'moment';\nimport { API_URL } from '../../utils/constant';\n\nimport styled from 'styled-components';\n\nconst RequestTable = () => {\n    const arr = ['Date Requested','Item Name','Quantity','Quotation']\n    const [allrequest, setrequests] = useState([])\n    const interval_id = useRef(null);\n    // const [open, setOpen] = useState(false);\n    async function fetch(){\n      console.log('in fetch');\n        await axios.get(`${API_URL}/get_purchase_request`, {\n             withCredentials: true\n         }).then((res)=>{\n             console.log(res.data);\n             \n             setrequests(res.data);\n             \n         })\n     } \n    // var requests = []\n    useEffect( () =>{\n      fetch()\n     \n    //   interval_id.current = setInterval(()=>{fetch()}, 3000);\n    //  return function cleanup() {\n    //     clearInterval(interval_id.current);\n    //     }\n    },[])\n    \n    const [showModal, setShow] = useState(false)\n    const [file, SetFile] = useState(null)\n    const [Info, SetInfo] = useState(\"\")\n\n    \n    const SubmitFile = async (e)=>{\n            \n        e.preventDefault();            \n\n        console.log('File ' , file)\n        // console.log(e.target.file)\n\n\n        // console.log('document', document.getElementById('file').value())\n        \n        if (file) {\n            const formData = new FormData();\n            formData.append('file', file);\n            await axios.post(`${API_URL}/${Info}/upload`, formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }).then((res)=>{\n                if(res.data.code == 200)\n                {\n                    window.flash('File Successfully Submitted')\n                    fetch();\n                }\n                else\n                {\n                    window.flash('Failed To Submit The File', 'danger')\n                }\n            });\n          } else {\n            window.flash('Please select a file to add.', 'danger');\n          }\n        \n        \n        \n        \n        \n    \n    }\n\n    let f = null;\n    const onChangeHandlerFile=(event)=>{\n        event.preventDefault();  \n        // console.log(files)\n        const [uploadedFile] = event.target.files;\n        console.log(uploadedFile)\n        f = uploadedFile;\n        SetFile(uploadedFile)\n\n    }\n   \n\n   \n    const ModalContent = ()=>{\n       \n       \n        \n\n        return(\n            <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Details \n                    </Modal.Title>\n                    </Modal.Header>\n                    <Form>    \n\n                    <Modal.Body>\n                        \n                    <Form onSubmit = {SubmitFile}>\n                        <Form.File name = \"file\"  onChange = {  onChangeHandlerFile } value = {f}/>\n                        <Button type=\"submit\" className =\"Btn mt-2 btn btn-md\">Submit</Button>\n                    </Form>\n                    </Modal.Body>\n\n                \n                <Modal.Footer>\n                    {/* <Btn className = \"btn-success\" type = \"submit\">Submit</Btn> */}\n                </Modal.Footer>\n                </Form>\n\n            </Modal>\n        );\n        \n    \n    }\n    \n\n\n    return(\n        <>\n         {showModal?\n            <div>\n                <ModalContent/>\n            </div>\n        :null    }\n        \n\n\n\n     <Container>\n       <Button className = \"Btn float-right mb-2 \" onClick={fetch} ><i class=\"fa fa-refresh\"></i>Refresh</Button>\n        <Table className=\"TableStyle\" responsive=\"sm\">\n        <thead>\n            <tr>\n             <th>#</th>\n            {arr.map((_, index) => (\n              <th key={index}>{_}</th>\n            ))}\n            \n          </tr>\n        </thead>\n        <tbody>\n          {allrequest.map((request, index) =>{\n            return(\n            <>\n             <tr key= {index} onClick = {() => {SetInfo(request._id); setShow(true);} }>\n                <td>{index+1}</td>\n                {/* <td>{request.R_Emp_Name}<br/></td> */}\n                {/* <td>{request.R_Emp_Email}</td> */}\n                <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\n                <td>{request.Item}</td>\n                <td>{request.Quantity}</td>\n                {/* <td>{request.Duration}</td> */}\n                <td>\n\n\n                {/* <a href = \"http://localhost:5000/upload\"><Btn>Upload</Btn></a> */}\n\n                    {/* <Form onSubmit = {SubmitFile}>\n                        <Form.File name = \"file\" onChange = {  onChangeHandlerFile } />\n                        <Button type=\"submit\" className =\"Btn mt-2 btn btn-md\" onClick= {() => {SetInfo(request._id)}}>Submit</Button>\n                    </Form> */}\n                </td>\n            </tr>\n            \n            </>\n            )\n          })}\n        </tbody>\n      </Table>\n      </Container>\n      </>\n    )\n\n\n}\n\n\nexport default RequestTable\n\n// const TableStyle = styled(Table)`\n\n// th {background: #1F386B;color : white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n\n\n// const Btn = styled(Button)`\n//     background :#EFBB20;\n//     border: none; \n//     &:hover{\n//     background: #0e8ccc;\n// }`;\n\n// const ModalBody = styled(Modal.Body)`\n\n// li{\n//     padding:5px;\n// }\n\n// `;"]},"metadata":{},"sourceType":"module"}