{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\product_ledger\\\\Product_Ledger.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { Button, Table, Form, Col, Container } from 'react-bootstrap';\nimport '../style.css';\nimport HeaderPages from '../header/Header_pages';\nimport { useState } from 'react';\nimport { API_URL } from '../../utils/constant';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductLedger = () => {\n  _s();\n\n  const [start_Date, set_Start_Date] = useState();\n  const [Product, set_Product] = useState();\n  const [end_Date, set_End_Date] = useState();\n  const arr = ['Date', 'Quantity', 'Duration', 'Status'];\n  const [allRecords, setRecords] = useState([]);\n\n  const Pdf = async () => {\n    fetch(`${API_URL}/generateproductledger`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        start_date: start_Date,\n        product: Product,\n        end_date: end_Date\n      })\n    }).then(async res => {\n      if (res.status === 200) {\n        const blob = await res.blob();\n        const file = new Blob([blob], {\n          type: 'application/pdf'\n        }, {\n          name: 'report.pdf'\n        });\n        console.log(file); //Build a URL from the file\n\n        const fileURL = URL.createObjectURL(file); //Open the URL on new Window\n\n        console.log(fileURL); //   download(res.data, details.request.Item + '_report', 'pdf');\n\n        window.open(fileURL);\n      }\n    });\n  };\n\n  const Submit = event => {\n    event.preventDefault();\n    axios.post(`${API_URL}/generateproductledger`, {\n      start_date: start_Date,\n      product: Product,\n      end_date: end_Date\n    }).then(res => {\n      if (res.data.code == 200) {\n        setRecords(res.data.records);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderPages, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"Container_Date\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Product Ledger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: Submit,\n        children: /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"Date\",\n              value: start_Date,\n              onChange: e => {\n                set_Start_Date(e.target.value);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: Product,\n              onChange: e => {\n                set_Product(e.target.value);\n              },\n              placeholder: \"Product Name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"Date\",\n              value: end_Date,\n              onChange: e => {\n                set_End_Date(e.target.value);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"Btn Date_Button ml-2\",\n              type: \"Submit\",\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), allRecords.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      className: \"TableStyle\",\n      responsive: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: _\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: allRecords.map((record, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: moment(record[0]).format('Do MMMM YYYY')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [record[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record[3]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"Btn\",\n                  onClick: () => {\n                    clearInterval(interval_id.current);\n                    SetInfo(request);\n                    setShow(true);\n                  },\n                  children: \"Recieved\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), allRecords.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No Records.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductLedger, \"w012I1UUtQYlrv0yTqyKvHXx9PA=\");\n\n_c = ProductLedger;\nexport default ProductLedger;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductLedger\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/product_ledger/Product_Ledger.js"],"names":["axios","Button","Table","Form","Col","Container","HeaderPages","useState","API_URL","moment","ProductLedger","start_Date","set_Start_Date","Product","set_Product","end_Date","set_End_Date","arr","allRecords","setRecords","Pdf","fetch","method","headers","body","JSON","stringify","start_date","product","end_date","then","res","status","blob","file","Blob","type","name","console","log","fileURL","URL","createObjectURL","window","open","Submit","event","preventDefault","post","data","code","records","e","target","value","length","map","_","index","record","format","clearInterval","interval_id","current","SetInfo","request","setShow"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {Button, Table, Form, Col, Container} from 'react-bootstrap'\r\nimport '../style.css'\r\nimport HeaderPages from '../header/Header_pages';\r\nimport { useState } from 'react';\r\nimport { API_URL } from '../../utils/constant';\r\nimport moment from 'moment';\r\n\r\n\r\nconst ProductLedger = () =>{\r\n\r\nconst [start_Date , set_Start_Date] = useState();\r\nconst [Product , set_Product] = useState();\r\nconst [end_Date , set_End_Date] = useState();\r\nconst arr = ['Date', 'Quantity', 'Duration', 'Status']\r\n\r\nconst [allRecords, setRecords] = useState([]);\r\n\r\nconst Pdf = async()=>{\r\n\r\n    fetch(`${API_URL}/generateproductledger`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            start_date : start_Date, product : Product, end_date : end_Date\r\n        }),\r\n      }).then(async res => {\r\n        if (res.status === 200) {\r\n          const blob = await res.blob();\r\n          const file = new Blob(\r\n            [blob], \r\n            {type: 'application/pdf'},\r\n            {name : 'report.pdf'}\r\n          );\r\n          console.log(file)\r\n          \r\n          //Build a URL from the file\r\n          const fileURL = URL.createObjectURL(file);\r\n          //Open the URL on new Window\r\n          console.log(fileURL)\r\n        //   download(res.data, details.request.Item + '_report', 'pdf');\r\n          window.open(fileURL);  \r\n        }\r\n      })\r\n}\r\n\r\nconst Submit = (event) => {\r\n    event.preventDefault();\r\n    axios.post(`${API_URL}/generateproductledger`, { start_date : start_Date, product : Product, end_date : end_Date }).then((res)=>{\r\n        if(res.data.code == 200)\r\n        {\r\n            setRecords(res.data.records);\r\n        }\r\n})\r\n}\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <>\r\n    <HeaderPages />\r\n    <Container className='Container_Date'>\r\n        <h1>Product Ledger</h1>\r\n        <Form  onSubmit = {Submit}>\r\n            <Form.Row>\r\n                    <Form.Group as = {Col} className = \"mt-4\"  >\r\n                    <Form.Label>Start Date</Form.Label>\r\n                    <Form.Control type = \"Date\" value = {start_Date} onChange = {(e)=> {set_Start_Date(e.target.value)}} required />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as = {Col} className = \"mt-4\"  >\r\n                    <Form.Label>Product</Form.Label>\r\n                    <Form.Control type = \"text\" value = {Product} onChange = {(e)=> {set_Product(e.target.value)}} placeholder = \"Product Name\" required/>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as = {Col} className = \"mt-4\" >\r\n                    <Form.Label>End Date</Form.Label>\r\n                    <Form.Control type = \"Date\" value = {end_Date} onChange = {(e)=> {set_End_Date(e.target.value)}} required/>\r\n                    </Form.Group>\r\n                \r\n                <Form.Group as = {Col} className = \"mt-4\">\r\n                <Button className = \"Btn Date_Button ml-2\" type = 'Submit'>Generate</Button>\r\n                </Form.Group>\r\n\r\n            </Form.Row>\r\n        </Form>\r\n    </Container>\r\n\r\n\r\n    {allRecords.length > 0 &&\r\n        <Table className=\"TableStyle\" responsive>\r\n            <thead>\r\n                <>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        {arr.map((_, index) => (\r\n                            <th key={index}>{_}</th>\r\n                        ))}\r\n                        <th></th>\r\n                    </tr>\r\n                </>\r\n            </thead>\r\n            <tbody>\r\n                {allRecords.map((record, index) => {\r\n                        return (\r\n                            <>\r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{moment(record[0]).format('Do MMMM YYYY')}</td>\r\n                                    <td>{record[1]}<br /></td>\r\n                                    <td>{record[2]}</td>\r\n                                    <td>{record[3]}</td>\r\n                                    \r\n                                    <td><Button className=\"Btn\" onClick={() => { clearInterval(interval_id.current); SetInfo(request); setShow(true); }} >Recieved</Button></td>\r\n\r\n\r\n                                </tr>\r\n\r\n\r\n                            </>\r\n                        )\r\n                    \r\n\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n\r\n    }\r\n    {\r\n        allRecords.length === 0 && <h2>No Records.</h2>\r\n    }\r\n\r\n\r\n    </>\r\n\r\n)\r\n\r\n\r\n}\r\n\r\nexport default ProductLedger;\r\n\r\n"]},"metadata":{},"sourceType":"module"}