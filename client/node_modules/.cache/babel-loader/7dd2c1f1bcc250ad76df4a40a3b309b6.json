{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\storeTable\\\\Store_Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Table, Container, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { API_URL } from '../../utils/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RequestTable = () => {\n  _s();\n\n  const arr = ['Requested By', 'Email', 'Item Name', 'Quantity', 'Duration'];\n  const [allrequest, setrequests] = useState([]);\n  const interval_id = useRef(null);\n  const history = useHistory();\n\n  async function fetch() {\n    await axios.get(`${API_URL}/storerequests`, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n      setrequests(res.data);\n    });\n  }\n\n  const onIssue = id => {\n    console.log(\"STORE TABLE MAIN ID FOR PARAMS\", id);\n    history.push('/' + id + '/issue');\n  }; // const onPurchase = (id)=>{\n  //     axios.post(`${API_URL}/request_forward_purchase`, { id : id}).then(\n  //         (res)=>{\n  //             if(res.data)\n  //             { \n  //                 setShow(false)\n  //                 window.flash('Request Forwarded to Purchase Department')\n  //                 fetch();\n  //             }\n  //         }\n  //     )\n  // }\n  // const onCancel = (_id, email, name, item) => {\n  //     axios.post(`${API_URL}/request_cancel`, {id : _id, email : email, name : name, item : item}).then(\n  //         (res)=>{\n  //             if(res.data)\n  //             { \n  //                 window.flash('Request Cancelled');\n  //                 fetch();\n  //             }\n  //         }\n  //     )\n  // }\n  // var requests = []\n\n\n  useEffect(() => {\n    fetch();\n    interval_id.current = setInterval(() => {\n      fetch();\n    }, 3000);\n    return function cleanup() {\n      clearInterval(interval_id.current);\n    };\n  }, []); // const [showModal, setShow] = useState(false)\n  // const [ModalInfo, SetInfo] = useState({})\n  // const ModalContent = ()=>{\n  //     return(\n  //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n  //             <Modal.Header closeButton>\n  //                 <Modal.Title>\n  //                     Details \n  //                 </Modal.Title>\n  //                        </Modal.Header>\n  //                 <ModalBody>\n  //                     <ul className=\"list-unstyled\">\n  //                         <li><strong>Requested by:</strong> {ModalInfo.R_Emp_Name}</li>\n  //                         <li><strong>Email:</strong> {ModalInfo.R_Emp_Email}</li>\n  //                         <li><strong>Item:</strong> {ModalInfo.Item}</li>\n  //                         <li><strong>Quantity:</strong> {ModalInfo.Quantity}</li>\n  //                         <li><strong>Duration:</strong> {ModalInfo.Duration}</li>\n  //                         <li><strong>Reason:</strong> {ModalInfo.Reason}</li>\n  //                         <li className=\"mt-3\">\n  //                             <Form>\n  //                                 <Form.Group>\n  //                                     <Form.Control as=\"textarea\" placeholder = \"Additional Comments\" row={6}/>\n  //                                 </Form.Group>\n  //                             </Form>\n  //                         </li>\n  //                     </ul>\n  //                 </ModalBody>\n  //             <Modal.Footer>\n  //                 {/* <Btn className = \"btn-success\">Approve</Btn>\n  //                 <Btn className=\"btn-danger\">Reject</Btn> */}\n  //                 <Btn className=\"btn-success\" onClick= {() => {onPurchase()}}>Send To Purchase Department</Btn>\n  //             </Modal.Footer>\n  //         </Modal>\n  //     );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [allrequest.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"TableStyle\",\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 14\n              }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: _\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 15\n              }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allrequest.map((request, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                placement: \"bottom\",\n                overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  id: \"button-tooltip-2\",\n                  children: \"Click to see Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 57\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  onClick: () => {\n                    onIssue(request._id);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [request.R_Emp_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: request.R_Emp_Email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: request.R_Emp_Dept.Dept_Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: request.Item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: request.Quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: request.Duration\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 17\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 13\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), allrequest.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Requests.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(RequestTable, \"o7piD9pi+9QmJexbByNvHvJRWw4=\", false, function () {\n  return [useHistory];\n});\n\n_c = RequestTable;\nexport default RequestTable; // const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n// const Btn = styled(Button)`\n// &:hover{\n//     background: #0e8ccc;\n// }\n// `;\n// const ModalBody = styled(Modal.Body)`\n// li{\n//     padding:5px;\n// }\n// `;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestTable\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/storeTable/Store_Table.js"],"names":["React","useEffect","useState","useRef","axios","Table","Container","OverlayTrigger","Tooltip","styled","useHistory","API_URL","RequestTable","arr","allrequest","setrequests","interval_id","history","fetch","get","withCredentials","then","res","console","log","data","onIssue","id","push","current","setInterval","cleanup","clearInterval","length","map","_","index","request","_id","R_Emp_Name","R_Emp_Email","R_Emp_Dept","Dept_Name","Item","Quantity","Duration"],"mappings":"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","sourcesContent":["import React , { useEffect, useState, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport {Table,Container,OverlayTrigger,Tooltip} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { API_URL } from '../../utils/constant';\r\n\r\nconst RequestTable = () => {\r\n    const arr = ['Requested By','Email','Item Name','Quantity','Duration']\r\n    const [allrequest, setrequests] = useState([])\r\n    const interval_id = useRef(null);\r\n    const history = useHistory()\r\n    async function fetch(){\r\n        await axios.get(`${API_URL}/storerequests`, {\r\n            withCredentials: true\r\n        }).then((res)=>{\r\n            console.log(res.data);\r\n            setrequests(res.data);\r\n            \r\n        })\r\n    } \r\n    const onIssue = (id)=>{\r\n        \r\n        console.log(\"STORE TABLE MAIN ID FOR PARAMS\",id)\r\n        history.push('/'+id+'/issue')\r\n    }\r\n\r\n\r\n    // const onPurchase = (id)=>{\r\n    //     axios.post(`${API_URL}/request_forward_purchase`, { id : id}).then(\r\n    //         (res)=>{\r\n    //             if(res.data)\r\n    //             { \r\n    //                 setShow(false)\r\n    //                 window.flash('Request Forwarded to Purchase Department')\r\n    //                 fetch();\r\n    //             }\r\n    //         }\r\n    //     )\r\n\r\n    // }\r\n        \r\n    // const onCancel = (_id, email, name, item) => {\r\n    //     axios.post(`${API_URL}/request_cancel`, {id : _id, email : email, name : name, item : item}).then(\r\n    //         (res)=>{\r\n    //             if(res.data)\r\n    //             { \r\n    //                 window.flash('Request Cancelled');\r\n    //                 fetch();\r\n\r\n    //             }\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    \r\n\r\n    // var requests = []\r\n    useEffect( () =>{\r\n        fetch()\r\n     \r\n        interval_id.current = setInterval(()=>{fetch()}, 3000);\r\n       return function cleanup() {\r\n          clearInterval(interval_id.current);\r\n          }\r\n    },[])\r\n\r\n\r\n    // const [showModal, setShow] = useState(false)\r\n    // const [ModalInfo, SetInfo] = useState({})\r\n    // const ModalContent = ()=>{\r\n       \r\n    //     return(\r\n    //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\r\n    //             <Modal.Header closeButton>\r\n    //                 <Modal.Title>\r\n    //                     Details \r\n    //                 </Modal.Title>\r\n    //                        </Modal.Header>\r\n    //                 <ModalBody>\r\n    //                     <ul className=\"list-unstyled\">\r\n    //                         <li><strong>Requested by:</strong> {ModalInfo.R_Emp_Name}</li>\r\n    //                         <li><strong>Email:</strong> {ModalInfo.R_Emp_Email}</li>\r\n    //                         <li><strong>Item:</strong> {ModalInfo.Item}</li>\r\n    //                         <li><strong>Quantity:</strong> {ModalInfo.Quantity}</li>\r\n    //                         <li><strong>Duration:</strong> {ModalInfo.Duration}</li>\r\n    //                         <li><strong>Reason:</strong> {ModalInfo.Reason}</li>\r\n    //                         <li className=\"mt-3\">\r\n    //                             <Form>\r\n    //                                 <Form.Group>\r\n    //                                     <Form.Control as=\"textarea\" placeholder = \"Additional Comments\" row={6}/>\r\n    //                                 </Form.Group>\r\n    //                             </Form>\r\n    //                         </li>\r\n    //                     </ul>\r\n    //                 </ModalBody>\r\n\r\n                \r\n    //             <Modal.Footer>\r\n    //                 {/* <Btn className = \"btn-success\">Approve</Btn>\r\n    //                 <Btn className=\"btn-danger\">Reject</Btn> */}\r\n    //                 <Btn className=\"btn-success\" onClick= {() => {onPurchase()}}>Send To Purchase Department</Btn>\r\n                        \r\n    //             </Modal.Footer>\r\n    //         </Modal>\r\n    //     );\r\n        \r\n\r\n    // }\r\n    \r\n\r\n\r\n    return(\r\n        <>\r\n        {/* {showModal?\r\n            <div>\r\n                <ModalContent/>\r\n            </div>\r\n        :null   \r\n        } */}\r\n\r\n     <Container>\r\n         { allrequest.length > 0 &&\r\n        <Table className=\"TableStyle\" responsive>\r\n        <thead>\r\n            <>\r\n            <tr>\r\n             <th>#</th>\r\n            {arr.map((_, index) => (\r\n              <th key={index}>{_}</th>\r\n            ))}\r\n            <th></th>\r\n          </tr>\r\n</>\r\n        </thead>\r\n        <tbody>\r\n          {allrequest.map((request, index) =>{\r\n            return(\r\n            <>\r\n            <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"button-tooltip-2\">Click to see Details</Tooltip>} >\r\n            <tr key={index} onClick = {() => {onIssue(request._id)} }>\r\n                <td>{index+1}</td>\r\n                <td>{request.R_Emp_Name}<br/></td>\r\n                <td>{request.R_Emp_Email}</td>\r\n                <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                <td>{request.Item}</td>\r\n                <td>{request.Quantity}</td>\r\n                <td>{request.Duration}</td>\r\n                    \r\n                {/* <td>\r\n                    <Btn onClick = {() => {SetInfo(request); setShow(true);} } className = \"mr-1\"> Details </Btn>\r\n                    <Btn onClick={()=>onIssue(request._id)} className = \"btn-success mr-1\">Issue</Btn>\r\n                <Btn onClick={()=>onCancel(request._id, request.R_Emp_Email, request.R_Emp_Name, request.Item)} className=\"btn-danger\">Cancel</Btn>\r\n                </td> */}\r\n            </tr>\r\n            </OverlayTrigger>\r\n           \r\n            </>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      \r\n      }\r\n      {\r\n          allrequest.length === 0 && <h2>No Requests.</h2>\r\n      }\r\n        \r\n      </Container>\r\n      </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default RequestTable\r\n\r\n// const TableStyle = styled(Table)`\r\n// th {background: #1F386B; color:white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n// const Btn = styled(Button)`\r\n// &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n\r\n// `;\r\n\r\n// const ModalBody = styled(Modal.Body)`\r\n\r\n// li{\r\n//     padding:5px;\r\n// }\r\n\r\n// `;"]},"metadata":{},"sourceType":"module"}