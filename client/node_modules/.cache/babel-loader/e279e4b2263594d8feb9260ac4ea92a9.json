{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\ManagerRequestTable\\\\ManagerRequestTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Table, Container, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport moment from 'moment'; // import styled from 'styled-components';\n\nimport { useHistory } from 'react-router';\nimport { API_URL } from '../../utils/constant'; // import Cookie from 'universal-cookie';\n\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminRequestTable = () => {\n  _s();\n\n  // const cookie = new Cookie();\n  const arr = ['Requested By', 'Email', 'Date Requested', 'Item Name', 'Quantity', 'Duration'];\n  const [allrequest, setrequests] = useState([]);\n  const interval_id = useRef(null);\n\n  async function fetch() {\n    await axios.get(`${API_URL}/get_accounts_requests`, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n      setrequests(res.data);\n    });\n  }\n\n  useEffect(() => {\n    fetch();\n    interval_id.current = setInterval(() => {\n      fetch();\n    }, 3000);\n    return function cleanup() {\n      clearInterval(interval_id.current);\n    };\n  }, []);\n  const history = useHistory();\n\n  const OpenNewPage = id => {\n    var Role = localStorage.getItem('user'); // var Role = cookie.get('user');\n\n    if (Role === 'Admin') history.push('/' + id + '/admin');else if (Role === 'Director') history.push('/' + id + '/director');else history.push('/' + id + '/accounts');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [allrequest.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"TableStyle\",\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 14\n            }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: _\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allrequest.map((request, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                placement: \"bottom\",\n                overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  id: \"button-tooltip-2\",\n                  children: \"Click to see Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 57\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  onClick: () => {\n                    OpenNewPage(request._id);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [request.R_Emp_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: request.R_Emp_Email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: moment(request.Added).format('Do MMMM YYYY')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: request.Item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: request.Quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: request.Duration\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 13\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), allrequest.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Requests.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(AdminRequestTable, \"pQwgkwIfDDm4lACARmThj0xeFn0=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminRequestTable;\nexport default AdminRequestTable; // const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n// const Btn = styled(Button)`\n// &:hover{\n//     background: #0e8ccc;\n// }\n// `;\n// const ModalBody = styled(Modal.Body)`\n// li{\n//     padding:5px;\n// }\n// `;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRequestTable\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/ManagerRequestTable/ManagerRequestTable.js"],"names":["React","useEffect","useState","useRef","axios","Table","Container","OverlayTrigger","Tooltip","moment","useHistory","API_URL","AdminRequestTable","arr","allrequest","setrequests","interval_id","fetch","get","withCredentials","then","res","console","log","data","current","setInterval","cleanup","clearInterval","history","OpenNewPage","id","Role","localStorage","getItem","push","length","map","_","index","request","_id","R_Emp_Name","R_Emp_Email","Added","format","Item","Quantity","Duration"],"mappings":"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","sourcesContent":["import React , { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport {Table,Container,OverlayTrigger,Tooltip} from 'react-bootstrap';\r\nimport moment from 'moment';\r\n// import styled from 'styled-components';\r\nimport {useHistory} from 'react-router';\r\nimport { API_URL } from '../../utils/constant';\r\n// import Cookie from 'universal-cookie';\r\nimport '../style.css' \r\n\r\nconst AdminRequestTable = () => {\r\n    // const cookie = new Cookie();\r\n    const arr = ['Requested By','Email','Date Requested','Item Name','Quantity','Duration']\r\n    const [allrequest, setrequests] = useState([])\r\n    const interval_id = useRef(null);\r\n\r\n\r\n    async function fetch(){\r\n        await axios.get(`${API_URL}/get_accounts_requests`, {\r\n             withCredentials: true\r\n         }).then((res)=>{\r\n             console.log(res.data);\r\n             \r\n             setrequests(res.data);\r\n             \r\n         })\r\n    }\r\n    useEffect( () =>{\r\n      fetch()\r\n     \r\n      interval_id.current = setInterval(()=>{fetch()}, 3000);\r\n     return function cleanup() {\r\n        clearInterval(interval_id.current);\r\n        }\r\n     \r\n    },[])\r\n \r\n    const history = useHistory() \r\n    const OpenNewPage = (id) => {\r\n        \r\n        var Role = localStorage.getItem('user');\r\n        // var Role = cookie.get('user');\r\n        if (Role === 'Admin')\r\n        history.push('/' + id + '/admin')\r\n        else if (Role === 'Director')\r\n        history.push('/' + id + '/director')\r\n        else\r\n        history.push('/' + id + '/accounts')\r\n      \r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n     \r\n\r\n     <Container>\r\n         { allrequest.length > 0 &&\r\n        <Table className=\"TableStyle\" responsive>\r\n        <thead>\r\n            <tr>\r\n             <th>#</th>\r\n            {arr.map((_, index) => (\r\n              <th key={index}>{_}</th>\r\n            ))}\r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allrequest.map((request, index) =>{\r\n            return(\r\n            <>\r\n            <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"button-tooltip-2\">Click to see Details</Tooltip>} >\r\n            \r\n            <tr onClick =  {()=>{ \r\n                OpenNewPage(request._id)\r\n\r\n            }}>\r\n                <td>{index+1}</td>\r\n                <td>{request.R_Emp_Name}<br/></td>\r\n                <td>{request.R_Emp_Email}</td>\r\n                <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\r\n                <td>{request.Item}</td>\r\n                <td>{request.Quantity}</td>\r\n                <td>{request.Duration}</td>\r\n                \r\n            </tr>\r\n            </OverlayTrigger>\r\n           \r\n            </>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      \r\n      }\r\n      {\r\n          allrequest.length === 0 && <h2>No Requests.</h2>\r\n      }\r\n        \r\n      </Container>\r\n      </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default AdminRequestTable\r\n\r\n// const TableStyle = styled(Table)`\r\n// th {background: #1F386B; color:white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n// const Btn = styled(Button)`\r\n// &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n\r\n// `;\r\n\r\n// const ModalBody = styled(Modal.Body)`\r\n\r\n// li{\r\n//     padding:5px;\r\n// }\r\n\r\n// `;"]},"metadata":{},"sourceType":"module"}