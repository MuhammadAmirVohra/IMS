{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\issue\\\\issue_note.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Row, Table, Button, Container, Modal, Form, Card } from \"react-bootstrap\"; // import styled from 'styled-components';\n\nimport MainHeader from \"../header/Header_pages\";\nimport { useParams, useHistory } from \"react-router\";\nimport { API_URL } from \"../../utils/constant\";\nimport \"../style.css\"; // import { func } from 'prop-types';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IssueNote = () => {\n  _s();\n\n  function formatDate(date, format) {\n    const map = {\n      mm: date.getMonth() + 1,\n      dd: date.getDate(),\n      yy: date.getFullYear().toString().slice(-2),\n      yyyy: date.getFullYear()\n    };\n    return format.replace(/mm|dd|yy|yyy/gi, matched => map[matched]);\n  }\n\n  const [date, setdate] = useState(new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  }).format(Date.now));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      ClassName: \"Container1\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"Container1 FormStyle\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          value: date,\n          defaultValue: Date.now().toLocaleString(),\n          onChange: e => {\n            setdate(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IssueNote, \"X83mlgZoL2vzJZAzbHEXO5N10LQ=\");\n\n_c = IssueNote;\nexport default IssueNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"IssueNote\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/issue/issue_note.js"],"names":["React","useEffect","useState","axios","Row","Table","Button","Container","Modal","Form","Card","MainHeader","useParams","useHistory","API_URL","IssueNote","formatDate","date","format","map","mm","getMonth","dd","getDate","yy","getFullYear","toString","slice","yyyy","replace","matched","setdate","Intl","DateTimeFormat","year","month","day","Date","now","toLocaleString","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,GADJ,EAEIC,KAFJ,EAGIC,MAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,IANJ,EAOIC,IAPJ,QAQO,iBARP,C,CASA;;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,cAAtC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAO,cAAP,C,CACA;;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,WAASC,UAAT,CAAoBC,IAApB,EAA0BC,MAA1B,EAAkC;AAC9B,UAAMC,GAAG,GAAG;AACRC,MAAAA,EAAE,EAAEH,IAAI,CAACI,QAAL,KAAkB,CADd;AAERC,MAAAA,EAAE,EAAEL,IAAI,CAACM,OAAL,EAFI;AAGRC,MAAAA,EAAE,EAAEP,IAAI,CAACQ,WAAL,GAAmBC,QAAnB,GAA8BC,KAA9B,CAAoC,CAAC,CAArC,CAHI;AAIRC,MAAAA,IAAI,EAAEX,IAAI,CAACQ,WAAL;AAJE,KAAZ;AAOA,WAAOP,MAAM,CAACW,OAAP,CAAe,gBAAf,EAAiCC,OAAO,IAAIX,GAAG,CAACW,OAAD,CAA/C,CAAP;AACH;;AACD,QAAM,CAACb,IAAD,EAAOc,OAAP,IAAkB7B,QAAQ,CAAC,IAAI8B,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,KAAK,EAAE,SAA1B;AAAqCC,IAAAA,GAAG,EAAE;AAA1C,GAAjC,EAAwFlB,MAAxF,CAA+FmB,IAAI,CAACC,GAApG,CAAD,CAAhC;AAEA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAErB,IAFX;AAGI,UAAA,YAAY,EAAEoB,IAAI,CAACC,GAAL,GAAWC,cAAX,EAHlB;AAII,UAAA,QAAQ,EAAGC,CAAD,IAAO;AAAET,YAAAA,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAyB;AAJhD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAiBH,CA9BD;;GAAM3B,S;;KAAAA,S;AAgCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Row,\r\n    Table,\r\n    Button,\r\n    Container,\r\n    Modal,\r\n    Form,\r\n    Card,\r\n} from \"react-bootstrap\";\r\n// import styled from 'styled-components';\r\nimport MainHeader from \"../header/Header_pages\";\r\nimport { useParams, useHistory } from \"react-router\";\r\nimport { API_URL } from \"../../utils/constant\";\r\nimport \"../style.css\";\r\n// import { func } from 'prop-types';\r\n\r\nconst IssueNote = () => {\r\n    function formatDate(date, format) {\r\n        const map = {\r\n            mm: date.getMonth() + 1,\r\n            dd: date.getDate(),\r\n            yy: date.getFullYear().toString().slice(-2),\r\n            yyyy: date.getFullYear()\r\n        }\r\n\r\n        return format.replace(/mm|dd|yy|yyy/gi, matched => map[matched])\r\n    }\r\n    const [date, setdate] = useState(new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' }).format(Date.now));\r\n\r\n    return (\r\n        <>\r\n            <MainHeader />\r\n            <Container ClassName=\"Container1\">\r\n                <Form className=\"Container1 FormStyle\">\r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control\r\n                        type=\"date\"\r\n                        value={date}\r\n                        defaultValue={Date.now().toLocaleString()}\r\n                        onChange={(e) => { setdate(e.target.value) }}\r\n                    />\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default IssueNote;\r\n"]},"metadata":{},"sourceType":"module"}