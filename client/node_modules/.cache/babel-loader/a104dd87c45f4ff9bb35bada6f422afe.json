{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\storeTable\\\\Store_Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Table, Container, OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { API_URL } from '../../utils/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RequestTable = () => {\n  _s();\n\n  const arr = ['Requested By', 'Email', 'Department', 'Item Name', 'Quantity', 'Duration', ' ', ' '];\n  const [allrequest, setrequests] = useState([]);\n  const interval_id = useRef(null);\n  const history = useHistory();\n\n  async function fetch() {\n    await axios.get(`${API_URL}/storerequests`, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n      setrequests(res.data);\n    });\n  }\n\n  const onIssue = id => {\n    console.log(\"STORE TABLE MAIN ID FOR PARAMS\", id); // history.push('/'+id+'/issue')\n\n    history.push('/issuenote');\n  };\n\n  const onPurchase = id => {\n    axios.post(`${API_URL}/request_forward_purchase`, {\n      id: id\n    }).then(res => {\n      if (res.data) {\n        // setShow(false)\n        window.flash('Request Forwarded to Purchase Department');\n        fetch();\n      }\n    });\n  };\n\n  const onCancel = (_id, email, name, item) => {\n    axios.post(`${API_URL}/request_cancel`, {\n      id: _id,\n      email: email,\n      name: name,\n      item: item\n    }).then(res => {\n      if (res.data) {\n        window.flash('Request Cancelled');\n        fetch();\n      }\n    });\n  };\n\n  const SenttoPurchase = () => {}; // var requests = []\n\n\n  useEffect(() => {\n    fetch();\n    interval_id.current = setInterval(() => {\n      fetch();\n    }, 3000);\n    return function cleanup() {\n      clearInterval(interval_id.current);\n    };\n  }, []); // const [showModal, setShow] = useState(false)\n  // const [ModalInfo, SetInfo] = useState({})\n  // const ModalContent = ()=>{\n  //     return(\n  //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n  //             <Modal.Header closeButton>\n  //                 <Modal.Title>\n  //                     Details\n  //                 </Modal.Title>\n  //                        </Modal.Header>\n  //                 <ModalBody>\n  //                     <ul className=\"list-unstyled\">\n  //                         <li><strong>Requested by:</strong> {ModalInfo.R_Emp_Name}</li>\n  //                         <li><strong>Email:</strong> {ModalInfo.R_Emp_Email}</li>\n  //                         <li><strong>Item:</strong> {ModalInfo.Item}</li>\n  //                         <li><strong>Quantity:</strong> {ModalInfo.Quantity}</li>\n  //                         <li><strong>Duration:</strong> {ModalInfo.Duration}</li>\n  //                         <li><strong>Reason:</strong> {ModalInfo.Reason}</li>\n  //                         <li className=\"mt-3\">\n  //                             <Form>\n  //                                 <Form.Group>\n  //                                     <Form.Control as=\"textarea\" placeholder = \"Additional Comments\" row={6}/>\n  //                                 </Form.Group>\n  //                             </Form>\n  //                         </li>\n  //                     </ul>\n  //                 </ModalBody>\n  //             <Modal.Footer>\n  //                 {/* <Btn className = \"btn-success\">Approve</Btn>\n  //                 <Btn className=\"btn-danger\">Reject</Btn> */}\n  //                 <Btn className=\"btn-success\" onClick= {() => {onPurchase()}}>Send To Purchase Department</Btn>\n  //             </Modal.Footer>\n  //         </Modal>\n  //     );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [allrequest.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"w-100 TableStyle\",\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: _\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allrequest.map((request, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [request.R_Emp_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 69\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: request.R_Emp_Email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: request.R_Emp_Dept.Dept_Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: request.Item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: request.Quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: request.Duration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      SenttoPurchase(request);\n                    },\n                    className: \"Btn m-2\",\n                    children: \" Send to Purchase \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => onIssue(request._id),\n                    className: \"m-2 btn-success mr-1\",\n                    children: \"Issue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => onCancel(request._id, request.R_Emp_Email, request.R_Emp_Name, request.Item),\n                    className: \"btn-danger\",\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 41\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), allrequest.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Requests.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(RequestTable, \"o7piD9pi+9QmJexbByNvHvJRWw4=\", false, function () {\n  return [useHistory];\n});\n\n_c = RequestTable;\nexport default RequestTable; // const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n// const Btn = styled(Button)`\n// &:hover{\n//     background: #0e8ccc;\n// }\n// `;\n// const ModalBody = styled(Modal.Body)`\n// li{\n//     padding:5px;\n// }\n// `;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestTable\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/storeTable/Store_Table.js"],"names":["React","useEffect","useState","useRef","axios","Table","Container","OverlayTrigger","Tooltip","Button","styled","useHistory","API_URL","RequestTable","arr","allrequest","setrequests","interval_id","history","fetch","get","withCredentials","then","res","console","log","data","onIssue","id","push","onPurchase","post","window","flash","onCancel","_id","email","name","item","SenttoPurchase","current","setInterval","cleanup","clearInterval","length","map","_","index","request","R_Emp_Name","R_Emp_Email","R_Emp_Dept","Dept_Name","Item","Quantity","Duration"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Container, OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { API_URL } from '../../utils/constant';\r\n\r\nconst RequestTable = () => {\r\n    const arr = ['Requested By', 'Email', 'Department', 'Item Name', 'Quantity', 'Duration', ' ', ' ']\r\n    const [allrequest, setrequests] = useState([])\r\n    const interval_id = useRef(null);\r\n    const history = useHistory()\r\n    async function fetch() {\r\n        await axios.get(`${API_URL}/storerequests`, {\r\n            withCredentials: true\r\n        }).then((res) => {\r\n            console.log(res.data);\r\n            setrequests(res.data);\r\n\r\n        })\r\n    }\r\n    const onIssue = (id) => {\r\n\r\n        console.log(\"STORE TABLE MAIN ID FOR PARAMS\", id)\r\n        // history.push('/'+id+'/issue')\r\n        history.push('/issuenote');\r\n    }\r\n\r\n\r\n    const onPurchase = (id) => {\r\n        axios.post(`${API_URL}/request_forward_purchase`, { id: id }).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    // setShow(false)\r\n                    window.flash('Request Forwarded to Purchase Department')\r\n                    fetch();\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const onCancel = (_id, email, name, item) => {\r\n        axios.post(`${API_URL}/request_cancel`, { id: _id, email: email, name: name, item: item }).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    window.flash('Request Cancelled');\r\n                    fetch();\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const SenttoPurchase = () => {\r\n\r\n    }\r\n\r\n\r\n    // var requests = []\r\n    useEffect(() => {\r\n        fetch()\r\n\r\n        interval_id.current = setInterval(() => { fetch() }, 3000);\r\n        return function cleanup() {\r\n            clearInterval(interval_id.current);\r\n        }\r\n    }, [])\r\n\r\n\r\n    // const [showModal, setShow] = useState(false)\r\n    // const [ModalInfo, SetInfo] = useState({})\r\n    // const ModalContent = ()=>{\r\n\r\n    //     return(\r\n    //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\r\n    //             <Modal.Header closeButton>\r\n    //                 <Modal.Title>\r\n    //                     Details\r\n    //                 </Modal.Title>\r\n    //                        </Modal.Header>\r\n    //                 <ModalBody>\r\n    //                     <ul className=\"list-unstyled\">\r\n    //                         <li><strong>Requested by:</strong> {ModalInfo.R_Emp_Name}</li>\r\n    //                         <li><strong>Email:</strong> {ModalInfo.R_Emp_Email}</li>\r\n    //                         <li><strong>Item:</strong> {ModalInfo.Item}</li>\r\n    //                         <li><strong>Quantity:</strong> {ModalInfo.Quantity}</li>\r\n    //                         <li><strong>Duration:</strong> {ModalInfo.Duration}</li>\r\n    //                         <li><strong>Reason:</strong> {ModalInfo.Reason}</li>\r\n    //                         <li className=\"mt-3\">\r\n    //                             <Form>\r\n    //                                 <Form.Group>\r\n    //                                     <Form.Control as=\"textarea\" placeholder = \"Additional Comments\" row={6}/>\r\n    //                                 </Form.Group>\r\n    //                             </Form>\r\n    //                         </li>\r\n    //                     </ul>\r\n    //                 </ModalBody>\r\n\r\n\r\n    //             <Modal.Footer>\r\n    //                 {/* <Btn className = \"btn-success\">Approve</Btn>\r\n    //                 <Btn className=\"btn-danger\">Reject</Btn> */}\r\n    //                 <Btn className=\"btn-success\" onClick= {() => {onPurchase()}}>Send To Purchase Department</Btn>\r\n\r\n    //             </Modal.Footer>\r\n    //         </Modal>\r\n    //     );\r\n\r\n\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* {showModal?\r\n            <div>\r\n                <ModalContent/>\r\n            </div>\r\n        :null\r\n        } */}\r\n\r\n            <Container>\r\n                {allrequest.length > 0 &&\r\n                    <Table className=\"w-100 TableStyle\" responsive>\r\n                        <thead>\r\n                            <>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    {arr.map((_, index) => (\r\n                                        <th key={index}>{_}</th>\r\n                                    ))}\r\n                                    <th></th>\r\n                                </tr>\r\n                            </>\r\n                        </thead>\r\n                        <tbody>\r\n                            {allrequest.map((request, index) => {\r\n                                return (\r\n                                    <>\r\n                                        {/* <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"button-tooltip-2\">Click to see Details</Tooltip>} > */}\r\n                                        {/* <tr key={index} onClick={() => { onIssue(request._id) }}> */}\r\n                                        <tr>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{request.R_Emp_Name}<br /></td>\r\n                                            <td>{request.R_Emp_Email}</td>\r\n                                            <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                                            <td>{request.Item}</td>\r\n                                            <td>{request.Quantity}</td>\r\n                                            <td>{request.Duration}</td>\r\n\r\n                                            <td>\r\n                                                <Button onClick={() => { SenttoPurchase(request); }} className=\"Btn m-2\"> Send to Purchase </Button>\r\n                                                <Button onClick={() => onIssue(request._id)} className=\"m-2 btn-success mr-1\">Issue</Button>\r\n                                                <Button onClick={() => onCancel(request._id, request.R_Emp_Email, request.R_Emp_Name, request.Item)} className=\"btn-danger\">Cancel</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                        {/* </OverlayTrigger> */}\r\n\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                }\r\n                {\r\n                    allrequest.length === 0 && <h2>No Requests.</h2>\r\n                }\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default RequestTable\r\n\r\n// const TableStyle = styled(Table)`\r\n// th {background: #1F386B; color:white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n// const Btn = styled(Button)`\r\n// &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n\r\n// `;\r\n\r\n// const ModalBody = styled(Modal.Body)`\r\n\r\n// li{\r\n//     padding:5px;\r\n// }\r\n\r\n// `;"]},"metadata":{},"sourceType":"module"}