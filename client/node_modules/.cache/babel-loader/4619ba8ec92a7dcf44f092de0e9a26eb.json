{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\product_ledger\\\\Product_Ledger.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { Button, Card, Form, Col, Container } from 'react-bootstrap';\nimport '../style.css';\nimport HeaderPages from '../header/Header_pages';\nimport { useState } from 'react';\nimport { API_URL } from '../../utils/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductLedger = () => {\n  _s();\n\n  const [start_Date, set_Start_Date] = useState();\n  const [Product, set_Product] = useState();\n  const [end_Date, set_End_Date] = useState();\n\n  const Submit = async () => {\n    fetch(`${API_URL}/${id}/pdf`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        start_date: start_Date,\n        product: Product,\n        end_date: end_Date\n      })\n    }).then(async res => {\n      if (res.status === 200) {\n        const blob = await res.blob();\n        const file = new Blob([blob], {\n          type: 'application/pdf'\n        }, {\n          name: 'report.pdf'\n        });\n        console.log(file); //Build a URL from the file\n\n        const fileURL = URL.createObjectURL(file); //Open the URL on new Window\n\n        console.log(fileURL); //   download(res.data, details.request.Item + '_report', 'pdf');\n\n        window.open(fileURL);\n      }\n    });\n  }; // const Submit = (event) => {\n  //     event.preventDefault();\n  //     axios.post(`${API_URL}/generateproductledger`, { start_date : start_Date, product : Product, end_date : end_Date }).then((res)=>{\n  //         console.log(res.data);\n  // })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderPages, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"Container_Date\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Product Ledger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: Submit,\n        children: /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"Date\",\n              value: start_Date,\n              onChange: e => {\n                set_Start_Date(e.target.value);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: Product,\n              onChange: e => {\n                set_Product(e.target.value);\n              },\n              placeholder: \"Product Name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"Date\",\n              value: end_Date,\n              onChange: e => {\n                set_End_Date(e.target.value);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"Btn Date_Button ml-2\",\n              type: \"Submit\",\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductLedger, \"HQl89druntvO44/uxdt/Cq7TfOw=\");\n\n_c = ProductLedger;\nexport default ProductLedger;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductLedger\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/product_ledger/Product_Ledger.js"],"names":["axios","Button","Card","Form","Col","Container","HeaderPages","useState","API_URL","ProductLedger","start_Date","set_Start_Date","Product","set_Product","end_Date","set_End_Date","Submit","fetch","id","method","headers","body","JSON","stringify","start_date","product","end_date","then","res","status","blob","file","Blob","type","name","console","log","fileURL","URL","createObjectURL","window","open","e","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {Button, Card, Form, Col, Container} from 'react-bootstrap'\r\nimport '../style.css'\r\nimport HeaderPages from '../header/Header_pages';\r\nimport { useState } from 'react';\r\nimport { API_URL } from '../../utils/constant';\r\n\r\nconst ProductLedger = () =>{\r\n\r\nconst [start_Date , set_Start_Date] = useState();\r\nconst [Product , set_Product] = useState();\r\nconst [end_Date , set_End_Date] = useState();\r\n\r\n\r\n\r\nconst Submit = async()=>{\r\n    fetch(`${API_URL}/${id}/pdf`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            start_date : start_Date, product : Product, end_date : end_Date\r\n        }),\r\n      }).then(async res => {\r\n        if (res.status === 200) {\r\n          const blob = await res.blob();\r\n          const file = new Blob(\r\n            [blob], \r\n            {type: 'application/pdf'},\r\n            {name : 'report.pdf'}\r\n          );\r\n          console.log(file)\r\n          \r\n          //Build a URL from the file\r\n          const fileURL = URL.createObjectURL(file);\r\n          //Open the URL on new Window\r\n          console.log(fileURL)\r\n        //   download(res.data, details.request.Item + '_report', 'pdf');\r\n          window.open(fileURL);  \r\n        }\r\n      })\r\n}\r\n\r\n// const Submit = (event) => {\r\n//     event.preventDefault();\r\n//     axios.post(`${API_URL}/generateproductledger`, { start_date : start_Date, product : Product, end_date : end_Date }).then((res)=>{\r\n//         console.log(res.data);\r\n// })\r\n// }\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <>\r\n    <HeaderPages />\r\n    <Container className='Container_Date'>\r\n        <h1>Product Ledger</h1>\r\n        <Form  onSubmit = {Submit}>\r\n            <Form.Row>\r\n                    <Form.Group as = {Col} className = \"mt-4\"  >\r\n                    <Form.Label>Start Date</Form.Label>\r\n                    <Form.Control type = \"Date\" value = {start_Date} onChange = {(e)=> {set_Start_Date(e.target.value)}} required />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as = {Col} className = \"mt-4\"  >\r\n                    <Form.Label>Product</Form.Label>\r\n                    <Form.Control type = \"text\" value = {Product} onChange = {(e)=> {set_Product(e.target.value)}} placeholder = \"Product Name\" required/>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as = {Col} className = \"mt-4\" >\r\n                    <Form.Label>End Date</Form.Label>\r\n                    <Form.Control type = \"Date\" value = {end_Date} onChange = {(e)=> {set_End_Date(e.target.value)}} required/>\r\n                    </Form.Group>\r\n                \r\n                <Form.Group as = {Col} className = \"mt-4\">\r\n                <Button className = \"Btn Date_Button ml-2\" type = 'Submit'>Generate</Button>\r\n                </Form.Group>\r\n\r\n            </Form.Row>\r\n        </Form>\r\n    </Container>\r\n\r\n    </>\r\n\r\n)\r\n\r\n\r\n}\r\n\r\nexport default ProductLedger;\r\n\r\n"]},"metadata":{},"sourceType":"module"}