{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\purchaseRequest\\\\Purchase_request_table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Table, Button, Container, Form } from 'react-bootstrap';\nimport moment from 'moment';\nimport { API_URL } from '../../utils/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RequestTable = () => {\n  _s();\n\n  const arr = ['Request ID', 'Department', 'Date Requested', 'Item Name', 'Quotation'];\n  const [allrequest, setrequests] = useState([]);\n  const interval_id = useRef(null); // const [open, setOpen] = useState(false);\n\n  async function fetch() {\n    console.log('in fetch');\n    await axios.get(`${API_URL}/get_purchase_request`, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n      setrequests(res.data);\n    });\n  } // var requests = []\n\n\n  useEffect(() => {\n    fetch();\n    interval_id.current = setInterval(() => {\n      fetch();\n    }, 3000);\n    return function cleanup() {\n      clearInterval(interval_id.current);\n    };\n  }, []); // const [showModal, setShow] = useState(false)\n\n  const [file, SetFile] = useState(null);\n  const [Info, SetInfo] = useState(\"\");\n\n  const SubmitFile = async e => {\n    e.preventDefault();\n    console.log('File ', file); // console.log(e.target.file)\n    // console.log('document', document.getElementById('file').value())\n\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      await axios.post(`${API_URL}/${Info}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        if (res.data.code === 200) {\n          SetFile(null);\n          window.flash('File Successfully Submitted');\n          fetch();\n        } else {\n          window.flash('Failed To Submit The File', 'danger');\n        }\n      });\n    } else {\n      window.flash('Please select a file to add.', 'danger');\n    }\n  };\n\n  const onChangeHandlerFile = files => {\n    console.log(files);\n    const [uploadedFile] = files.target.files;\n    console.log(uploadedFile);\n    SetFile(uploadedFile);\n  }; // const ModalContent = ()=>{\n  //    function getBase64(e) {\n  //         var file = e.target.files[0]\n  //         let reader = new FileReader()\n  //         reader.readAsDataURL(file)\n  //         reader.onload = () => {\n  //             console.log(reader.result)\n  //             SetFile(reader.result)\n  //         //   this.setState({\n  //         //     imgUpload: reader.result\n  //         //   })\n  //         };\n  //         reader.onerror = function (error) {\n  //           console.log('Error: ', error);\n  //         }\n  //       }\n  //     return(\n  //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n  //             <Modal.Header closeButton>\n  //                 <Modal.Title>\n  //                     Details\n  //                 </Modal.Title>\n  //                 </Modal.Header>\n  //                 <Form>\n  //                 <ModalBody>\n  //                 <input\n  //                 type = 'file'\n  //                 id=\"file\"\n  //                 name = \"file\"\n  //                 value={FileInfo}\n  //                 onChange={(e) => { e.preventDefault();\n  //                     SetFile(e.target.files[0])\n  //                     // getBase64(e);\n  //                 }}\n  //                 />\n  //                 </ModalBody>\n  //             <Modal.Footer>\n  //                 <Btn className = \"btn-success\" type = \"submit\">Submit</Btn>\n  //             </Modal.Footer>\n  //             </Form>\n  //         </Modal>\n  //     );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"float-left mt-4 btn-dark\",\n        onClick: fetch,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"TableStyle\",\n        responsive: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: _\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allrequest.map((request, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [request.Order_ID, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 43\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: request.R_Emp_Dept.Dept_Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: moment(request.Added).format('Do MMMM YYYY')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"new-line\",\n                  children: request.Item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form, {\n                    onSubmit: SubmitFile,\n                    children: [/*#__PURE__*/_jsxDEV(Form.File, {\n                      name: \"file\",\n                      onChange: onChangeHandlerFile\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      className: \"Btn mt-2 btn btn-md\",\n                      onClick: () => {\n                        SetInfo(request._id);\n                      },\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RequestTable, \"bQqD4iUCpLKTZ8I3KfNW2f9CaDs=\");\n\n_c = RequestTable;\nexport default RequestTable; // const TableStyle = styled(Table)`\n// th {background: #1F386B;color : white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n// const Btn = styled(Button)`\n//     background :#EFBB20;\n//     border: none;\n//     &:hover{\n//     background: #0e8ccc;\n// }`;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestTable\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/purchaseRequest/Purchase_request_table.js"],"names":["React","useEffect","useState","useRef","axios","Table","Button","Container","Form","moment","API_URL","RequestTable","arr","allrequest","setrequests","interval_id","fetch","console","log","get","withCredentials","then","res","data","current","setInterval","cleanup","clearInterval","file","SetFile","Info","SetInfo","SubmitFile","e","preventDefault","formData","FormData","append","post","headers","code","window","flash","onChangeHandlerFile","files","uploadedFile","target","map","_","index","request","Order_ID","R_Emp_Dept","Dept_Name","Added","format","Item","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Button, Container, Form } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { API_URL } from '../../utils/constant';\r\n\r\nconst RequestTable = () => {\r\n  const arr = ['Request ID', 'Department', 'Date Requested', 'Item Name', 'Quotation']\r\n  const [allrequest, setrequests] = useState([])\r\n  const interval_id = useRef(null);\r\n  // const [open, setOpen] = useState(false);\r\n  async function fetch() {\r\n    console.log('in fetch');\r\n    await axios.get(`${API_URL}/get_purchase_request`, {\r\n      withCredentials: true\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n\r\n      setrequests(res.data);\r\n\r\n    })\r\n  }\r\n  // var requests = []\r\n  useEffect(() => {\r\n    fetch()\r\n\r\n    interval_id.current = setInterval(() => { fetch() }, 3000);\r\n    return function cleanup() {\r\n      clearInterval(interval_id.current);\r\n    }\r\n  }, [])\r\n\r\n  // const [showModal, setShow] = useState(false)\r\n  const [file, SetFile] = useState(null)\r\n  const [Info, SetInfo] = useState(\"\")\r\n\r\n\r\n  const SubmitFile = async (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    console.log('File ', file)\r\n    // console.log(e.target.file)\r\n\r\n\r\n    // console.log('document', document.getElementById('file').value())\r\n\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      await axios.post(`${API_URL}/${Info}/upload`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      }).then((res) => {\r\n        if (res.data.code === 200) {\r\n          SetFile(null);\r\n          window.flash('File Successfully Submitted')\r\n          fetch();\r\n        }\r\n        else {\r\n          window.flash('Failed To Submit The File', 'danger')\r\n        }\r\n      });\r\n    } else {\r\n      window.flash('Please select a file to add.', 'danger');\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const onChangeHandlerFile = (files) => {\r\n    console.log(files)\r\n    const [uploadedFile] = files.target.files;\r\n    console.log(uploadedFile)\r\n    SetFile(uploadedFile)\r\n\r\n  }\r\n\r\n\r\n\r\n  // const ModalContent = ()=>{\r\n\r\n  //    function getBase64(e) {\r\n  //         var file = e.target.files[0]\r\n  //         let reader = new FileReader()\r\n  //         reader.readAsDataURL(file)\r\n  //         reader.onload = () => {\r\n  //             console.log(reader.result)\r\n  //             SetFile(reader.result)\r\n  //         //   this.setState({\r\n  //         //     imgUpload: reader.result\r\n  //         //   })\r\n  //         };\r\n  //         reader.onerror = function (error) {\r\n  //           console.log('Error: ', error);\r\n  //         }\r\n  //       }\r\n\r\n\r\n  //     return(\r\n  //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\r\n  //             <Modal.Header closeButton>\r\n  //                 <Modal.Title>\r\n  //                     Details\r\n  //                 </Modal.Title>\r\n  //                 </Modal.Header>\r\n  //                 <Form>\r\n\r\n  //                 <ModalBody>\r\n\r\n  //                 <input\r\n  //                 type = 'file'\r\n  //                 id=\"file\"\r\n  //                 name = \"file\"\r\n  //                 value={FileInfo}\r\n  //                 onChange={(e) => { e.preventDefault();\r\n  //                     SetFile(e.target.files[0])\r\n  //                     // getBase64(e);\r\n  //                 }}\r\n  //                 />\r\n  //                 </ModalBody>\r\n\r\n\r\n  //             <Modal.Footer>\r\n  //                 <Btn className = \"btn-success\" type = \"submit\">Submit</Btn>\r\n  //             </Modal.Footer>\r\n  //             </Form>\r\n\r\n  //         </Modal>\r\n  //     );\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* {showModal?\r\n            <div>\r\n                <ModalContent/>\r\n            </div>\r\n        :null    */}\r\n\r\n\r\n\r\n\r\n      <Container>\r\n        <Button className=\"float-left mt-4 btn-dark\" onClick={fetch} >Refresh</Button>\r\n        <Table className=\"TableStyle\" responsive=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              {arr.map((_, index) => (\r\n                <th key={index}>{_}</th>\r\n              ))}\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {allrequest.map((request, index) => {\r\n              return (\r\n                <>\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{request.Order_ID}<br /></td>\r\n                    {/* <td>{request.R_Emp_Name}<br /></td>\r\n                    <td>{request.R_Emp_Email}</td> */}\r\n                    <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                    <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\r\n                    <td className=\"new-line\">{request.Item}</td>\r\n                    {/* <td>{request.Quantity}</td> */}\r\n                    {/* <td>{request.Duration}</td> */}\r\n                    <td>\r\n\r\n\r\n                      {/* <a href = \"http://localhost:5000/upload\"><Btn>Upload</Btn></a> */}\r\n\r\n                      <Form onSubmit={SubmitFile}>\r\n                        <Form.File name=\"file\" onChange={onChangeHandlerFile} />\r\n                        <Button type=\"submit\" className=\"Btn mt-2 btn btn-md\" onClick={() => { SetInfo(request._id) }}>Submit</Button>\r\n                      </Form>\r\n                    </td>\r\n                  </tr>\r\n\r\n                </>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </>\r\n  )\r\n\r\n\r\n}\r\n\r\n\r\nexport default RequestTable\r\n\r\n// const TableStyle = styled(Table)`\r\n\r\n// th {background: #1F386B;color : white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n\r\n// const Btn = styled(Button)`\r\n//     background :#EFBB20;\r\n//     border: none;\r\n//     &:hover{\r\n//     background: #0e8ccc;\r\n// }`;\r\n"]},"metadata":{},"sourceType":"module"}