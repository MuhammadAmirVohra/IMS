{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\Website\\\\IMS\\\\client\\\\src\\\\components\\\\storeTable\\\\Store_Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, Tab, Tabs, Container, Row } from \"react-bootstrap\"; // import { Tabs, Tab } from 'react-bootstrap-tabs';\n// import { useHistory } from 'react-router-dom';\n\nimport { API_URL } from \"../../utils/constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RequestTable = () => {\n  _s();\n\n  const arr = [\"Request ID\", \"Requested By\", \"Email\", \"Department\", \"Item Name\", \"Options\", \" \"];\n  const [allrequest, setrequests] = useState([]);\n  const [allissued, setissued] = useState([]);\n  const [allreceive, setreceive] = useState([]);\n  const interval_id = useRef(null); // const history = useHistory()\n\n  async function fetch() {\n    await axios.get(`${API_URL}/storerequests`, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n      setrequests(res.data.requests);\n      setissued(res.data.issued);\n      setreceive(res.data.receive);\n    });\n  }\n\n  const onIssue = id => {\n    console.log(\"STORE TABLE MAIN ID FOR PARAMS\", id);\n    axios.post(`${API_URL}/request_issued`, {\n      id: id\n    }).then(res => {\n      if (res.data) {\n        // setShow(false)\n        window.flash(\"Request Issued\");\n        fetch();\n      }\n    }); // history.push('/issuenote');\n  };\n\n  const onPurchase = id => {\n    axios.post(`${API_URL}/request_forward_purchase`, {\n      id: id\n    }).then(res => {\n      if (res.data) {\n        // setShow(false)\n        window.flash(\"Request Forwarded to Purchase Department\");\n        fetch();\n      }\n    });\n  };\n\n  const onCancel = (_id, email, name, item) => {\n    axios.post(`${API_URL}/request_cancel`, {\n      id: _id,\n      email: email,\n      name: name,\n      item: item\n    }).then(res => {\n      if (res.data) {\n        window.flash(\"Request Cancelled\");\n        fetch();\n      }\n    });\n  };\n\n  const OnReturn = (_id, email, name, item) => {\n    axios.post(`${API_URL}/return_this_item`, {\n      id: _id,\n      email: email,\n      name: name,\n      item: item\n    }).then(res => {\n      if (res.data) {\n        window.flash(\"Request Returned\");\n        fetch();\n      }\n    });\n  };\n\n  const OnReceived = (_id, email, name, item) => {\n    axios.post(`${API_URL}/receive_this_item`, {\n      id: _id,\n      email: email,\n      name: name,\n      item: item\n    }).then(res => {\n      if (res.data) {\n        window.flash(\"Request Recieved\");\n        fetch();\n      }\n    });\n  };\n\n  const OnDissmiss = (_id, email, name, item) => {\n    axios.post(`${API_URL}/dissmiss_this_item`, {\n      id: _id,\n      email: email,\n      name: name,\n      item: item\n    }).then(res => {\n      if (res.data) {\n        window.flash(\"Request Dissmissed\");\n        fetch();\n      }\n    });\n  }; // var requests = []\n\n\n  useEffect(() => {\n    fetch();\n    interval_id.current = setInterval(() => {\n      fetch();\n    }, 3000);\n    return function cleanup() {\n      clearInterval(interval_id.current);\n    };\n  }, []); // const [showModal, setShow] = useState(false)\n  // const [ModalInfo, SetInfo] = useState({})\n  // const ModalContent = ()=>{\n  //     return(\n  //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n  //             <Modal.Header closeButton>\n  //                 <Modal.Title>\n  //                     Details\n  //                 </Modal.Title>\n  //                        </Modal.Header>\n  //                 <ModalBody>\n  //                     <ul className=\"list-unstyled\">\n  //                         <li><strong>Requested by:</strong> {ModalInfo.R_Emp_Name}</li>\n  //                         <li><strong>Email:</strong> {ModalInfo.R_Emp_Email}</li>\n  //                         <li><strong>Item:</strong> {ModalInfo.Item}</li>\n  //                         <li><strong>Quantity:</strong> {ModalInfo.Quantity}</li>\n  //                         <li><strong>Duration:</strong> {ModalInfo.Duration}</li>\n  //                         <li><strong>Reason:</strong> {ModalInfo.Reason}</li>\n  //                         <li className=\"mt-3\">\n  //                             <Form>\n  //                                 <Form.Group>\n  //                                     <Form.Control as=\"textarea\" placeholder = \"Additional Comments\" row={6}/>\n  //                                 </Form.Group>\n  //                             </Form>\n  //                         </li>\n  //                     </ul>\n  //                 </ModalBody>\n  //             <Modal.Footer>\n  //                 {/* <Btn className = \"btn-success\">Approve</Btn>\n  //                 <Btn className=\"btn-danger\">Reject</Btn> */}\n  //                 <Btn className=\"btn-success\" onClick= {() => {onPurchase()}}>Send To Purchase Department</Btn>\n  //             </Modal.Footer>\n  //         </Modal>\n  //     );\n  // }\n\n  const [key, setkey] = useState(\"Issue\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"MainContainer\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        id: \"controlled-tab-example\",\n        activeKey: key,\n        className: \"tab-style\",\n        onSelect: key => setkey(key),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"Issue\",\n          title: \"Issue Requests (\" + allrequest.length + \")\",\n          children: allrequest.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"w-100 TableStyle\",\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 25\n                    }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: _\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 27\n                    }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: allrequest.map((request, index) => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [request.Order_ID, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 219,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [request.R_Emp_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 223,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: request.R_Emp_Email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: request.R_Emp_Dept.Dept_Name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"new-line\",\n                        children: request.Item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            onClick: () => {\n                              onPurchase(request);\n                            },\n                            className: \"Btn m-2\",\n                            children: [\" \", \"Send to Purchase\", \" \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 233,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 232,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Button, {\n                            onClick: () => onIssue(request._id),\n                            className: \"m-2 btn-success mr-1\",\n                            children: \"Issue\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 244,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Button, {\n                            onClick: () => onCancel(request._id, request.R_Emp_Email, request.R_Emp_Name, request.Item),\n                            className: \"m-2 btn-danger\",\n                            children: \"Cancel\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 250,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 243,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"Return\",\n          title: \"Return Requests (\" + allissued.length + \")\",\n          children: allissued.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"w-100 TableStyle\",\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 25\n                    }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: _\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 27\n                    }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: allissued.map((request, index) => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [request.Order_ID, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 308,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 306,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [request.R_Emp_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 312,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 310,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: request.R_Emp_Email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: request.R_Emp_Dept.Dept_Name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"new-line\",\n                        children: request.Item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => OnReturn(request._id),\n                          className: \"m-2 btn-success mr-1\",\n                          children: \"Returned\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 321,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => OnDissmiss(request._id),\n                          className: \"m-2 mr-1 btn-danger\",\n                          children: \"Dissmiss\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 327,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 320,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"Receive\",\n          title: \"Receive Requests (\" + allreceive.length + \")\",\n          children: allreceive.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"w-100 TableStyle\",\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 25\n                    }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: _\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 27\n                    }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: allreceive.map((request, index) => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 374,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [request.Order_ID, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 377,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 375,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [request.R_Emp_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 381,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 379,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: request.R_Emp_Email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: request.R_Emp_Dept.Dept_Name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 384,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"new-line\",\n                        children: request.Item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 385,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => OnReceived(request._id),\n                          className: \"m-2 btn-success mr-1\",\n                          children: \"Received\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 390,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => OnDissmiss(request._id),\n                          className: \"m-2 mr-1 btn-danger\",\n                          children: \"Dissmiss\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 396,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 389,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RequestTable, \"MyuKwj8zMJII48UKFxjNcjeIsxM=\");\n\n_c = RequestTable;\nexport default RequestTable; // const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n// const Btn = styled(Button)`\n// &:hover{\n//     background: #0e8ccc;\n// }\n// `;\n// const ModalBody = styled(Modal.Body)`\n// li{\n//     padding:5px;\n// }\n// `;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestTable\");","map":{"version":3,"sources":["D:/Studies/Website/IMS/client/src/components/storeTable/Store_Table.js"],"names":["React","useEffect","useState","useRef","axios","Table","Button","Tab","Tabs","Container","Row","API_URL","RequestTable","arr","allrequest","setrequests","allissued","setissued","allreceive","setreceive","interval_id","fetch","get","withCredentials","then","res","console","log","data","requests","issued","receive","onIssue","id","post","window","flash","onPurchase","onCancel","_id","email","name","item","OnReturn","OnReceived","OnDissmiss","current","setInterval","cleanup","clearInterval","key","setkey","length","map","_","index","request","Order_ID","R_Emp_Name","R_Emp_Email","R_Emp_Dept","Dept_Name","Item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, Tab, Tabs, Container, Row } from \"react-bootstrap\";\r\n// import { Tabs, Tab } from 'react-bootstrap-tabs';\r\n// import { useHistory } from 'react-router-dom';\r\nimport { API_URL } from \"../../utils/constant\";\r\n\r\nconst RequestTable = () => {\r\n  const arr = [\r\n    \"Request ID\",\r\n    \"Requested By\",\r\n    \"Email\",\r\n    \"Department\",\r\n    \"Item Name\",\r\n    \"Options\",\r\n    \" \",\r\n  ];\r\n  const [allrequest, setrequests] = useState([]);\r\n  const [allissued, setissued] = useState([]);\r\n  const [allreceive, setreceive] = useState([]);\r\n\r\n  const interval_id = useRef(null);\r\n  // const history = useHistory()\r\n  async function fetch() {\r\n    await axios\r\n      .get(`${API_URL}/storerequests`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setrequests(res.data.requests);\r\n        setissued(res.data.issued);\r\n        setreceive(res.data.receive);\r\n      });\r\n  }\r\n  const onIssue = (id) => {\r\n    console.log(\"STORE TABLE MAIN ID FOR PARAMS\", id);\r\n    axios.post(`${API_URL}/request_issued`, { id: id }).then((res) => {\r\n      if (res.data) {\r\n        // setShow(false)\r\n        window.flash(\"Request Issued\");\r\n        fetch();\r\n      }\r\n    });\r\n    // history.push('/issuenote');\r\n  };\r\n\r\n  const onPurchase = (id) => {\r\n    axios\r\n      .post(`${API_URL}/request_forward_purchase`, { id: id })\r\n      .then((res) => {\r\n        if (res.data) {\r\n          // setShow(false)\r\n          window.flash(\"Request Forwarded to Purchase Department\");\r\n          fetch();\r\n        }\r\n      });\r\n  };\r\n\r\n  const onCancel = (_id, email, name, item) => {\r\n    axios\r\n      .post(`${API_URL}/request_cancel`, {\r\n        id: _id,\r\n        email: email,\r\n        name: name,\r\n        item: item,\r\n      })\r\n      .then((res) => {\r\n        if (res.data) {\r\n          window.flash(\"Request Cancelled\");\r\n          fetch();\r\n        }\r\n      });\r\n  };\r\n\r\n  const OnReturn = (_id, email, name, item) => {\r\n    axios\r\n      .post(`${API_URL}/return_this_item`, {\r\n        id: _id,\r\n        email: email,\r\n        name: name,\r\n        item: item,\r\n      })\r\n      .then((res) => {\r\n        if (res.data) {\r\n          window.flash(\"Request Returned\");\r\n          fetch();\r\n        }\r\n      });\r\n  };\r\n  const OnReceived = (_id, email, name, item) => {\r\n    axios\r\n      .post(`${API_URL}/receive_this_item`, {\r\n        id: _id,\r\n        email: email,\r\n        name: name,\r\n        item: item,\r\n      })\r\n      .then((res) => {\r\n        if (res.data) {\r\n          window.flash(\"Request Recieved\");\r\n          fetch();\r\n        }\r\n      });\r\n  };\r\n\r\n  const OnDissmiss = (_id, email, name, item) => {\r\n    axios\r\n      .post(`${API_URL}/dissmiss_this_item`, {\r\n        id: _id,\r\n        email: email,\r\n        name: name,\r\n        item: item,\r\n      })\r\n      .then((res) => {\r\n        if (res.data) {\r\n          window.flash(\"Request Dissmissed\");\r\n          fetch();\r\n        }\r\n      });\r\n  };\r\n  // var requests = []\r\n  useEffect(() => {\r\n    fetch();\r\n\r\n    interval_id.current = setInterval(() => {\r\n      fetch();\r\n    }, 3000);\r\n    return function cleanup() {\r\n      clearInterval(interval_id.current);\r\n    };\r\n  }, []);\r\n\r\n  // const [showModal, setShow] = useState(false)\r\n  // const [ModalInfo, SetInfo] = useState({})\r\n  // const ModalContent = ()=>{\r\n\r\n  //     return(\r\n  //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\r\n  //             <Modal.Header closeButton>\r\n  //                 <Modal.Title>\r\n  //                     Details\r\n  //                 </Modal.Title>\r\n  //                        </Modal.Header>\r\n  //                 <ModalBody>\r\n  //                     <ul className=\"list-unstyled\">\r\n  //                         <li><strong>Requested by:</strong> {ModalInfo.R_Emp_Name}</li>\r\n  //                         <li><strong>Email:</strong> {ModalInfo.R_Emp_Email}</li>\r\n  //                         <li><strong>Item:</strong> {ModalInfo.Item}</li>\r\n  //                         <li><strong>Quantity:</strong> {ModalInfo.Quantity}</li>\r\n  //                         <li><strong>Duration:</strong> {ModalInfo.Duration}</li>\r\n  //                         <li><strong>Reason:</strong> {ModalInfo.Reason}</li>\r\n  //                         <li className=\"mt-3\">\r\n  //                             <Form>\r\n  //                                 <Form.Group>\r\n  //                                     <Form.Control as=\"textarea\" placeholder = \"Additional Comments\" row={6}/>\r\n  //                                 </Form.Group>\r\n  //                             </Form>\r\n  //                         </li>\r\n  //                     </ul>\r\n  //                 </ModalBody>\r\n\r\n  //             <Modal.Footer>\r\n  //                 {/* <Btn className = \"btn-success\">Approve</Btn>\r\n  //                 <Btn className=\"btn-danger\">Reject</Btn> */}\r\n  //                 <Btn className=\"btn-success\" onClick= {() => {onPurchase()}}>Send To Purchase Department</Btn>\r\n\r\n  //             </Modal.Footer>\r\n  //         </Modal>\r\n  //     );\r\n\r\n  // }\r\n  const [key, setkey] = useState(\"Issue\");\r\n\r\n  return (\r\n    <>\r\n      {/* {showModal?\r\n            <div>\r\n                <ModalContent/>\r\n            </div>\r\n        :null\r\n        } */}\r\n      <Container className=\"MainContainer\">\r\n        <Tabs\r\n          id=\"controlled-tab-example\"\r\n          activeKey={key}\r\n          className=\"tab-style\"\r\n          onSelect={(key) => setkey(key)}\r\n        >\r\n          <Tab\r\n            eventKey=\"Issue\"\r\n            title={\"Issue Requests (\" + allrequest.length + \")\"}\r\n          >\r\n            {allrequest.length > 0 && (\r\n              <>\r\n                {/* <h1>Issue Request</h1> */}\r\n                <Table className=\"w-100 TableStyle\" responsive>\r\n                  <thead>\r\n                    <>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        {arr.map((_, index) => (\r\n                          <th key={index}>{_}</th>\r\n                        ))}\r\n                        <th></th>\r\n                      </tr>\r\n                    </>\r\n                  </thead>\r\n                  <tbody>\r\n                    {allrequest.map((request, index) => {\r\n                      return (\r\n                        <>\r\n                          {/* <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"button-tooltip-2\">Click to see Details</Tooltip>} > */}\r\n                          {/* <tr key={index} onClick={() => { onIssue(request._id) }}> */}\r\n                          <tr>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                              {request.Order_ID}\r\n                              <br />\r\n                            </td>\r\n                            <td>\r\n                              {request.R_Emp_Name}\r\n                              <br />\r\n                            </td>\r\n                            <td>{request.R_Emp_Email}</td>\r\n                            <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                            <td className=\"new-line\">{request.Item}</td>\r\n                            {/* <td>{request.Quantity}</td>\r\n                                        <td>{request.Duration}</td> */}\r\n\r\n                            <td>\r\n                              <Row>\r\n                                <Button\r\n                                  onClick={() => {\r\n                                    onPurchase(request);\r\n                                  }}\r\n                                  className=\"Btn m-2\"\r\n                                >\r\n                                  {\" \"}\r\n                                  Send to Purchase{\" \"}\r\n                                </Button>\r\n                              </Row>\r\n                              <Row>\r\n                                <Button\r\n                                  onClick={() => onIssue(request._id)}\r\n                                  className=\"m-2 btn-success mr-1\"\r\n                                >\r\n                                  Issue\r\n                                </Button>\r\n                                <Button\r\n                                  onClick={() =>\r\n                                    onCancel(\r\n                                      request._id,\r\n                                      request.R_Emp_Email,\r\n                                      request.R_Emp_Name,\r\n                                      request.Item\r\n                                    )\r\n                                  }\r\n                                  className=\"m-2 btn-danger\"\r\n                                >\r\n                                  Cancel\r\n                                </Button>\r\n                              </Row>\r\n                            </td>\r\n                          </tr>\r\n                          {/* </OverlayTrigger> */}\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </>\r\n            )}\r\n            {/* {\r\n                allrequest.length === 0 && <h2>No Requests.</h2>\r\n            } */}\r\n          </Tab>\r\n          <Tab\r\n            eventKey=\"Return\"\r\n            title={\"Return Requests (\" + allissued.length + \")\"}\r\n          >\r\n            {allissued.length > 0 && (\r\n              <>\r\n                {/* <h1>Return Request</h1> */}\r\n\r\n                <Table className=\"w-100 TableStyle\" responsive>\r\n                  <thead>\r\n                    <>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        {arr.map((_, index) => (\r\n                          <th key={index}>{_}</th>\r\n                        ))}\r\n                        <th></th>\r\n                      </tr>\r\n                    </>\r\n                  </thead>\r\n                  <tbody>\r\n                    {allissued.map((request, index) => {\r\n                      return (\r\n                        <>\r\n                          {/* <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"button-tooltip-2\">Click to see Details</Tooltip>} > */}\r\n                          {/* <tr key={index} onClick={() => { onIssue(request._id) }}> */}\r\n                          <tr>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                              {request.Order_ID}\r\n                              <br />\r\n                            </td>\r\n                            <td>\r\n                              {request.R_Emp_Name}\r\n                              <br />\r\n                            </td>\r\n                            <td>{request.R_Emp_Email}</td>\r\n                            <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                            <td className=\"new-line\">{request.Item}</td>\r\n                            {/* <td>{request.Quantity}</td>\r\n                                        <td>{request.Duration}</td> */}\r\n\r\n                            <td>\r\n                              <Button\r\n                                onClick={() => OnReturn(request._id)}\r\n                                className=\"m-2 btn-success mr-1\"\r\n                              >\r\n                                Returned\r\n                              </Button>\r\n                              <Button\r\n                                onClick={() => OnDissmiss(request._id)}\r\n                                className=\"m-2 mr-1 btn-danger\"\r\n                              >\r\n                                Dissmiss\r\n                              </Button>\r\n                            </td>\r\n                          </tr>\r\n                          {/* </OverlayTrigger> */}\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </>\r\n            )}\r\n            {/* {\r\n                allissued.length === 0 && <h2>No Requests.</h2>\r\n            } */}\r\n          </Tab>\r\n          <Tab\r\n            eventKey=\"Receive\"\r\n            title={\"Receive Requests (\" + allreceive.length + \")\"}\r\n          >\r\n            {allreceive.length > 0 && (\r\n              <>\r\n                {/* <h1>Receive Request</h1> */}\r\n\r\n                <Table className=\"w-100 TableStyle\" responsive>\r\n                  <thead>\r\n                    <>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        {arr.map((_, index) => (\r\n                          <th key={index}>{_}</th>\r\n                        ))}\r\n                        <th></th>\r\n                      </tr>\r\n                    </>\r\n                  </thead>\r\n                  <tbody>\r\n                    {allreceive.map((request, index) => {\r\n                      return (\r\n                        <>\r\n                          {/* <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"button-tooltip-2\">Click to see Details</Tooltip>} > */}\r\n                          {/* <tr key={index} onClick={() => { onIssue(request._id) }}> */}\r\n                          <tr>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                              {request.Order_ID}\r\n                              <br />\r\n                            </td>\r\n                            <td>\r\n                              {request.R_Emp_Name}\r\n                              <br />\r\n                            </td>\r\n                            <td>{request.R_Emp_Email}</td>\r\n                            <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                            <td className=\"new-line\">{request.Item}</td>\r\n                            {/* <td>{request.Quantity}</td>\r\n                                        <td>{request.Duration}</td> */}\r\n\r\n                            <td>\r\n                              <Button\r\n                                onClick={() => OnReceived(request._id)}\r\n                                className=\"m-2 btn-success mr-1\"\r\n                              >\r\n                                Received\r\n                              </Button>\r\n                              <Button\r\n                                onClick={() => OnDissmiss(request._id)}\r\n                                className=\"m-2 mr-1 btn-danger\"\r\n                              >\r\n                                Dissmiss\r\n                              </Button>\r\n                            </td>\r\n                          </tr>\r\n                          {/* </OverlayTrigger> */}\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </>\r\n            )}\r\n            {/* {\r\n                        allreceive.length === 0 && <h2>No Requests.</h2>\r\n                    } */}\r\n          </Tab>\r\n        </Tabs>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestTable;\r\n\r\n// const TableStyle = styled(Table)`\r\n// th {background: #1F386B; color:white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n// const Btn = styled(Button)`\r\n// &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n\r\n// `;\r\n\r\n// const ModalBody = styled(Modal.Body)`\r\n\r\n// li{\r\n//     padding:5px;\r\n// }\r\n\r\n// `;\r\n"]},"metadata":{},"sourceType":"module"}