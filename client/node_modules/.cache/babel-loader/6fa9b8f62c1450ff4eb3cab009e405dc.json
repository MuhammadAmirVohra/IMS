{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\inventory\\\\Inventory.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Row, Table, Button, Container, Modal, Form } from 'react-bootstrap';\nimport MainHeader from '../header/Header_pages';\nimport { API_URL } from '../../utils/constant';\nimport \"../style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Inventory = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const arr = ['Name', 'Type', 'Description', 'Quantity'];\n  const [items, setitems] = useState([]);\n  useEffect(() => {\n    async function fetch() {\n      await axios.get(`${API_URL}/storeitem`, {\n        withCredentials: true\n      }).then(res => {\n        console.log(res.data);\n        setitems(res.data);\n      });\n    }\n\n    fetch();\n  }, []);\n  const [showModal, setShow] = useState(false);\n  const [ModalInfo, SetInfo] = useState({});\n\n  const ModalContent = () => {\n    _s();\n\n    const [name, setname] = useState(ModalInfo.Item_ID.Item_Name);\n    const [quantity, setquantity] = useState(ModalInfo.Quantity);\n    const [description, setdescription] = useState(ModalInfo.Item_ID.Item_Description);\n    const [type, settype] = useState(ModalInfo.Item_ID.Item_Type);\n\n    const UpdateRecord = event => {\n      event.preventDefault();\n      axios.post(`${API_URL}/` + ModalInfo.Item_ID._id + '/updateitem', {\n        id: ModalInfo.Item_ID._id,\n        name: name,\n        quantity: quantity,\n        description: description,\n        type: type\n      }).then(res => {\n        setShow(false);\n        console.log(res);\n        window.flash('Record Updated');\n        setitems(res.data);\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => {\n        setShow(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: UpdateRecord,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"ModalBody\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: name,\n              placeholder: \"Item Name\",\n              onChange: event => {\n                setname(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              value: quantity,\n              placeholder: \"Item Quantity\",\n              onChange: event => {\n                setquantity(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: type,\n              placeholder: \"Item Type\",\n              onChange: event => {\n                settype(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: description,\n              placeholder: \"Item Description\",\n              onChange: event => {\n                setdescription(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"Btn btn-success\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(ModalContent, \"r5ToViK4FojnbWc0pNA8VyXGjo8=\");\n\n  const [itemName, setItemName] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"Row1\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Store Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"Row1 float-right\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"FormGroup\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Search\",\n              name: \"searchbar\",\n              value: itemName,\n              onChange: event => {\n                setItemName(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"TableStyle\",\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: _\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map((item, index) => {\n            if (item.Item_ID.Item_Name.toLowerCase().includes(itemName.toLowerCase()) || item.Item_ID.Item_Description.toLowerCase().includes(itemName.toLowerCase())) return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [item.Item_ID.Item_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 77\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.Item_ID.Item_Type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.Item_ID.Item_Description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.Quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"Btn\",\n                    onClick: () => {\n                      SetInfo(item);\n                      setShow(true);\n                    },\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 45\n              }, this)\n            }, void 0, false);else return /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 46\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this), items.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Items.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Inventory, \"2dNnAshifD9PkBURgt7natr//FU=\");\n\n_c = Inventory;\nexport default Inventory; // const Row1 = styled(Row)`\n//     padding:100px 16px 0px 0px;\n// `;\n// const MainContainer = styled(Container)`\n//     width: 100%;\n//   height: auto;\n//   min-height: 100%;\n//   min-height: 100vh;\n// `;\n// const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n// const Btn = styled(Button)`\n// background :#EFBB20;\n// margin-left : 10px;\n// border: none;\n// &:hover{\n// background: #0e8ccc;\n// }\n// `;\n// const ModalBody = styled(Modal.Body)`\n// li{\n//     padding:5px;\n// }\n// `;\n// const FormGroup = styled(Form.Group)`\n// display : flex\n// `;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/inventory/Inventory.js"],"names":["React","useEffect","useState","axios","Row","Table","Button","Container","Modal","Form","MainHeader","API_URL","Inventory","arr","items","setitems","fetch","get","withCredentials","then","res","console","log","data","showModal","setShow","ModalInfo","SetInfo","ModalContent","name","setname","Item_ID","Item_Name","quantity","setquantity","Quantity","description","setdescription","Item_Description","type","settype","Item_Type","UpdateRecord","event","preventDefault","post","_id","id","window","flash","target","value","itemName","setItemName","length","map","_","index","item","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Table, Button, Container, Modal, Form } from 'react-bootstrap';\r\nimport MainHeader from '../header/Header_pages'\r\nimport { API_URL } from '../../utils/constant';\r\nimport \"../style.css\"\r\n\r\n\r\nconst Inventory = () => {\r\n    const arr = ['Name', 'Type', 'Description', 'Quantity']\r\n    const [items, setitems] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        async function fetch() {\r\n            await axios.get(`${API_URL}/storeitem`, {\r\n                withCredentials: true\r\n            }).then((res) => {\r\n                console.log(res.data);\r\n\r\n                setitems(res.data);\r\n\r\n            })\r\n        }\r\n        fetch()\r\n    }, [])\r\n\r\n\r\n    const [showModal, setShow] = useState(false)\r\n    const [ModalInfo, SetInfo] = useState({})\r\n    const ModalContent = () => {\r\n\r\n        const [name, setname] = useState(ModalInfo.Item_ID.Item_Name)\r\n        const [quantity, setquantity] = useState(ModalInfo.Quantity)\r\n        const [description, setdescription] = useState(ModalInfo.Item_ID.Item_Description)\r\n        const [type, settype] = useState(ModalInfo.Item_ID.Item_Type)\r\n\r\n        const UpdateRecord = (event) => {\r\n            event.preventDefault()\r\n\r\n            axios.post(`${API_URL}/` + ModalInfo.Item_ID._id + '/updateitem'\r\n                , { id: ModalInfo.Item_ID._id, name: name, quantity: quantity, description: description, type: type })\r\n                .then(\r\n                    (res) => {\r\n                        setShow(false);\r\n                        console.log(res)\r\n                        window.flash('Record Updated')\r\n                        setitems(res.data);\r\n                    }\r\n                )\r\n\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <Modal show={showModal} onHide={() => { setShow(false) }}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Details\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Form onSubmit={UpdateRecord}>\r\n\r\n                    <Modal.Body className=\"ModalBody\">\r\n\r\n                        <Form.Group>\r\n                            <Form.Control type=\"text\" value={name} placeholder=\"Item Name\" onChange={(event) => { setname(event.target.value) }} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Control type=\"number\" value={quantity} placeholder=\"Item Quantity\" onChange={(event) => { setquantity(event.target.value) }} />\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group>\r\n                            <Form.Control type=\"text\" value={type} placeholder=\"Item Type\" onChange={(event) => { settype(event.target.value) }} />\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group>\r\n                            <Form.Control type=\"text\" value={description} placeholder=\"Item Description\" onChange={(event) => { setdescription(event.target.value) }} />\r\n                        </Form.Group>\r\n\r\n                    </Modal.Body>\r\n\r\n\r\n                    <Modal.Footer>\r\n                        <Button type=\"submit\" className=\"Btn btn-success\">Update</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const [itemName, setItemName] = useState(\"\")\r\n    return (\r\n        <>\r\n            {showModal ?\r\n                <div>\r\n                    <ModalContent />\r\n                </div>\r\n                : null\r\n            }\r\n\r\n\r\n\r\n            <MainHeader />\r\n\r\n\r\n            <Container className=\"MainContainer\">\r\n                <Row className=\"Row1\">\r\n                    <h1>Store Inventory</h1>\r\n\r\n                </Row>\r\n                <Row className=\"Row1 float-right\" >\r\n\r\n                    <Form>\r\n\r\n                        <Form.Group className=\"FormGroup\">\r\n\r\n                            <Form.Control type=\"text\" placeholder=\"Search\" name=\"searchbar\" value={itemName} onChange={(event) => { setItemName(event.target.value) }} >\r\n\r\n\r\n                            </Form.Control>\r\n\r\n                        </Form.Group>\r\n\r\n                    </Form>\r\n\r\n\r\n\r\n\r\n\r\n                </Row>\r\n\r\n\r\n                {items.length > 0 &&\r\n                    <Table className=\"TableStyle\" responsive>\r\n                        <thead>\r\n                            <>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    {arr.map((_, index) => (\r\n                                        <th key={index}>{_}</th>\r\n                                    ))}\r\n                                    <th></th>\r\n                                </tr>\r\n                            </>\r\n                        </thead>\r\n                        <tbody>\r\n                            {items.map((item, index) => {\r\n                                if (item.Item_ID.Item_Name.toLowerCase().includes(itemName.toLowerCase()) || item.Item_ID.Item_Description.toLowerCase().includes(itemName.toLowerCase()))\r\n                                    return (\r\n                                        <>\r\n                                            <tr>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.Item_ID.Item_Name}<br /></td>\r\n                                                <td>{item.Item_ID.Item_Type}</td>\r\n                                                <td>{item.Item_ID.Item_Description}</td>\r\n                                                <td>{item.Quantity}</td>\r\n                                                <td><Button className=\"Btn\" onClick={() => { SetInfo(item); setShow(true); }} >Update</Button></td>\r\n\r\n\r\n                                            </tr>\r\n\r\n\r\n                                        </>\r\n                                    )\r\n                                else return (<tr></tr>)\r\n\r\n\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                }\r\n                {\r\n                    items.length === 0 && <h2>No Items.</h2>\r\n                }\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Inventory;\r\n\r\n// const Row1 = styled(Row)`\r\n//     padding:100px 16px 0px 0px;\r\n\r\n\r\n\r\n// `;\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//   height: auto;\r\n//   min-height: 100%;\r\n//   min-height: 100vh;\r\n// `;\r\n// const TableStyle = styled(Table)`\r\n// th {background: #1F386B; color:white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n// const Btn = styled(Button)`\r\n// background :#EFBB20;\r\n// margin-left : 10px;\r\n// border: none;\r\n// &:hover{\r\n// background: #0e8ccc;\r\n// }\r\n// `;\r\n\r\n// const ModalBody = styled(Modal.Body)`\r\n\r\n// li{\r\n//     padding:5px;\r\n// }\r\n\r\n// `;\r\n\r\n\r\n// const FormGroup = styled(Form.Group)`\r\n// display : flex\r\n\r\n// `;"]},"metadata":{},"sourceType":"module"}