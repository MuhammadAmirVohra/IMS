{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\return_items\\\\Return_items.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Row, Table, Button, Container, Modal, Form } from 'react-bootstrap';\nimport MainHeader from '../header/Header_pages';\nimport { API_URL } from '../../utils/constant';\nimport \"../style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReturnItems = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const arr = ['Name', 'Quantity', 'Duration', 'Date'];\n  const [items, setitems] = useState([]);\n  useEffect(() => {\n    async function fetch() {\n      await axios.get(`${API_URL}/get_issued_records`, {\n        withCredentials: true\n      }).then(res => {\n        console.log(res.data);\n        setitems(res.data);\n      });\n    }\n\n    fetch();\n  }, []);\n  const [showModal, setShow] = useState(false);\n  const [ModalInfo, SetInfo] = useState({});\n\n  const ModalContent = () => {\n    _s();\n\n    const [quantity, setquantity] = useState(ModalInfo.Quantity);\n\n    const UpdateRecord = event => {\n      event.preventDefault();\n      axios.post(`${API_URL}/` + 'return_this_item', {\n        id: ModalInfo._id,\n        quantity: quantity\n      }).then(res => {\n        setShow(false);\n        console.log(res);\n        window.flash('Record Updated');\n        setitems(res.data);\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => {\n        setShow(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: UpdateRecord,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"ModalBody\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              value: quantity,\n              placeholder: \"Returned Quantity\",\n              onChange: event => {\n                setquantity(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"Btn btn-success\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this);\n  };\n\n  _s(ModalContent, \"d5VFThPBHKOKdkd1gc7V3npZPZs=\");\n\n  const [itemName, setItemName] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"Row1\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Issue Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"Row1 float-right\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"FormGroup\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Search\",\n              name: \"searchbar\",\n              value: itemName,\n              onChange: event => {\n                setItemName(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"TableStyle\",\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 14\n              }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: _\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map((item, index) => {\n            if (item.Item_ID.Item_Name.toLowerCase().includes(itemName.toLowerCase())) return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [item.Item_ID.Item_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.Quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.Duration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.Date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"Btn\",\n                    onClick: () => {\n                      SetInfo(item);\n                      setShow(true);\n                    },\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 12\n              }, this)\n            }, void 0, false);else return /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), items.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Items.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(ReturnItems, \"2dNnAshifD9PkBURgt7natr//FU=\");\n\n_c = ReturnItems;\nexport default ReturnItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReturnItems\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/return_items/Return_items.js"],"names":["React","useEffect","useState","axios","Row","Table","Button","Container","Modal","Form","MainHeader","API_URL","ReturnItems","arr","items","setitems","fetch","get","withCredentials","then","res","console","log","data","showModal","setShow","ModalInfo","SetInfo","ModalContent","quantity","setquantity","Quantity","UpdateRecord","event","preventDefault","post","id","_id","window","flash","target","value","itemName","setItemName","length","map","_","index","item","Item_ID","Item_Name","toLowerCase","includes","Duration","Date"],"mappings":"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","sourcesContent":["import React , { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {Row,Table,Button,Container, Modal, Form} from 'react-bootstrap';\r\nimport MainHeader from '../header/Header_pages'\r\nimport { API_URL } from '../../utils/constant';\r\nimport \"../style.css\"\r\n\r\n\r\nconst ReturnItems = () => {\r\n    const arr = ['Name','Quantity','Duration','Date']\r\n    const [items, setitems] = useState([])\r\n\r\n    useEffect( () =>{\r\n       \r\n        async function fetch(){\r\n       await axios.get(`${API_URL}/get_issued_records`, {\r\n            withCredentials: true\r\n        }).then((res)=>{\r\n            console.log(res.data);\r\n            \r\n            setitems(res.data);\r\n            \r\n        })\r\n    } \r\n    fetch()\r\n    },[])\r\n\r\n\r\n    const [showModal, setShow] = useState(false)\r\n    const [ModalInfo, SetInfo] = useState({})\r\n    const ModalContent = ()=>{\r\n       \r\n        const [quantity, setquantity] = useState(ModalInfo.Quantity)\r\n        \r\n        const UpdateRecord = (event)=>{\r\n            event.preventDefault()\r\n            \r\n         axios.post(`${API_URL}/` + 'return_this_item'\r\n         ,{ id : ModalInfo._id,  quantity : quantity })\r\n             .then(\r\n             (res) => {\r\n                 setShow(false);\r\n                 console.log(res) \r\n                 window.flash('Record Updated')\r\n                 setitems(res.data);\r\n             } \r\n         )\r\n         \r\n        }\r\n \r\n \r\n \r\n         return(\r\n             <Modal show = {showModal} onHide ={() => {setShow(false)}}>\r\n                 <Modal.Header closeButton>\r\n                     <Modal.Title>\r\n                         Details \r\n                     </Modal.Title>\r\n                     </Modal.Header>\r\n                   <Form onSubmit = {UpdateRecord}>  \r\n \r\n                     <Modal.Body className=\"ModalBody\">\r\n \r\n                 {/* <Form.Group>\r\n                     <Form.Control type=\"text\" value={name} placeholder = \"Item Name\" onChange={(event)=>{ setname(event.target.value)}} />\r\n                 </Form.Group> */}\r\n \r\n                 <Form.Group>\r\n                     <Form.Control type=\"number\" value={quantity} placeholder = \"Returned Quantity\" onChange={(event)=>{ setquantity(event.target.value) }} />\r\n                 </Form.Group>\r\n{/*                  \r\n \r\n                 <Form.Group>\r\n                     <Form.Control type=\"text\" value={type} placeholder = \"Item Type\" onChange={ (event)=>{ settype(event.target.value) }} />\r\n                 </Form.Group>\r\n                 \r\n \r\n                 <Form.Group>\r\n                     <Form.Control type=\"text\" value={description} placeholder = \"Item Description\" onChange={ (event)=>{ setdescription(event.target.value) }} />\r\n                 </Form.Group>\r\n*/}                 \r\n                 </Modal.Body>\r\n\r\n                  \r\n                <Modal.Footer>\r\n                    <Button type =\"submit\" className = \"Btn btn-success\">Update</Button>              \r\n                </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n        \r\n\r\n    }\r\n    \r\n\r\n    \r\n    const [itemName, setItemName] = useState(\"\")\r\n    return(\r\n        <>\r\n        {showModal?\r\n            <div>\r\n                <ModalContent/>\r\n            </div>\r\n        :null   \r\n        }\r\n\r\n        \r\n   \r\n    <MainHeader/>\r\n    \r\n     \r\n    <Container className=\"MainContainer\">\r\n        <Row className = \"Row1\">\r\n     <h1>Issue Records</h1>\r\n\r\n        </Row>\r\n     <Row className=\"Row1 float-right\" >\r\n        \r\n    <Form>\r\n         \r\n         <Form.Group className=\"FormGroup\">\r\n           \r\n             <Form.Control type=\"text\" placeholder=\"Search\" name=\"searchbar\" value={itemName} onChange={(event)=>{ setItemName(event.target.value)}} >\r\n                 \r\n            \r\n             </Form.Control>\r\n            \r\n         </Form.Group>\r\n         \r\n    </Form>       \r\n        \r\n            \r\n      \r\n     \r\n     \r\n     </Row>\r\n \r\n        \r\n         { items.length > 0 &&\r\n        <Table className=\"TableStyle\" responsive>\r\n        <thead>\r\n            <>\r\n            <tr>\r\n             <th>#</th>\r\n            {arr.map((_, index) => (\r\n              <th key={index}>{_}</th>\r\n            ))}\r\n            <th></th>\r\n          </tr>\r\n</>\r\n        </thead>\r\n        <tbody>\r\n          {items.map((item, index) =>{\r\n            if (item.Item_ID.Item_Name.toLowerCase().includes(itemName.toLowerCase()) )\r\n            return(\r\n            <>\r\n           <tr>\r\n                <td>{index+1}</td>\r\n                <td>{item.Item_ID.Item_Name}<br/></td>\r\n                <td>{item.Quantity}</td>\r\n                <td>{item.Duration}</td>\r\n                <td>{item.Date}</td>\r\n                <td><Button className=\"Btn\" onClick = {()=>{ SetInfo(item); setShow(true); }} >Update</Button></td>\r\n                    \r\n               \r\n            </tr>\r\n            \r\n           \r\n            </>\r\n            )\r\n          else return(<tr></tr>)\r\n          \r\n          \r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      \r\n      }\r\n      {\r\n          items.length === 0 && <h2>No Items.</h2>\r\n      }\r\n        \r\n      </Container>\r\n      </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ReturnItems;\r\n"]},"metadata":{},"sourceType":"module"}