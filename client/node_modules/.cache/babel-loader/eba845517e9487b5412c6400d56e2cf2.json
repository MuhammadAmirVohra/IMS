{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\Website\\\\IMS\\\\client\\\\src\\\\components\\\\product_ledger\\\\Product_Ledger.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { Button, Table, Form, Col, Container } from 'react-bootstrap';\nimport '../style.css';\nimport HeaderPages from '../header/Header_pages';\nimport { useState, useEffect } from 'react';\nimport { API_URL } from '../../utils/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductLedger = () => {\n  _s();\n\n  const [start_Date, set_Start_Date] = useState();\n  const [Product, set_Product] = useState();\n  const [end_Date, set_End_Date] = useState();\n  const [allitems, setallitems] = useState([]);\n  const arr = ['Date', 'Quantity', 'Status', 'Department', 'Reason'];\n  useEffect(() => {\n    axios.get(`${API_URL}/retreive-items`).then(res => {\n      if (res.data.code === 200) {\n        setallitems(res.data.items);\n        console.log(res.data.items);\n      } else {\n        setallitems([]);\n      }\n    });\n  }, []);\n  const [allRecords, setRecords] = useState();\n\n  const Pdf = async () => {\n    fetch(`${API_URL}/productledgerpdf`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        product: Product,\n        data: allRecords,\n        start: start_Date,\n        end: end_Date,\n        product_name: allitems[allitems.map(e => e._id).indexOf(Product)].Item_Name\n      })\n    }).then(async res => {\n      if (res.status === 200) {\n        const blob = await res.blob();\n        const file = new Blob([blob], {\n          type: 'application/pdf'\n        }, {\n          name: 'report.pdf'\n        });\n        console.log(file); //Build a URL from the file\n\n        const fileURL = URL.createObjectURL(file); //Open the URL on new Window\n\n        console.log(fileURL); //   download(res.data, details.request.Item + '_report', 'pdf');\n\n        window.open(fileURL);\n      }\n    });\n  };\n\n  const Submit = event => {\n    event.preventDefault();\n    axios.post(`${API_URL}/generateproductledger`, {\n      start_date: start_Date,\n      product: Product,\n      end_date: end_Date,\n      product_name: allitems[allitems.map(e => e._id).indexOf(Product)].Item_Name\n    }).then(res => {\n      if (res.data.code === 200) {\n        setRecords(res.data.records);\n      } else {\n        setRecords([]);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderPages, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"Container_Date text-center align-items-center justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Product Ledger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: Submit,\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"Date\",\n              value: start_Date,\n              onChange: e => {\n                set_Start_Date(e.target.value);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              className: \"selectstyle\",\n              onChange: e => {\n                set_Product(e.target.value);\n              },\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                disabled: true,\n                selected: true,\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), allitems.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item._id,\n                  children: item.Item_Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 45\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"Date\",\n              value: end_Date,\n              onChange: e => {\n                set_End_Date(e.target.value);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"Btn Date_Button ml-2\",\n              type: \"Submit\",\n              children: \"Find\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), allRecords && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [allRecords.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Item ID : \", allitems[allitems.map(e => e._id).indexOf(Product)].Item_ID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"Btn Date_Button ml-2\",\n            onClick: Pdf,\n            children: \"Generate PDF Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            className: \"TableStyle mt-3 justify-content-center\",\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 45\n                  }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: _\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 49\n                  }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: allRecords.map((record, index) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: record[0]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [record[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 68\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: record[2]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: record[3]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: record[4]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: record[5]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), allRecords.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No Records.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductLedger, \"hb3/2ElRFN68rZvDLXc8Ow3xc1Y=\");\n\n_c = ProductLedger;\nexport default ProductLedger;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductLedger\");","map":{"version":3,"sources":["D:/Studies/Website/IMS/client/src/components/product_ledger/Product_Ledger.js"],"names":["axios","Button","Table","Form","Col","Container","HeaderPages","useState","useEffect","API_URL","ProductLedger","start_Date","set_Start_Date","Product","set_Product","end_Date","set_End_Date","allitems","setallitems","arr","get","then","res","data","code","items","console","log","allRecords","setRecords","Pdf","fetch","method","headers","body","JSON","stringify","product","start","end","product_name","map","e","_id","indexOf","Item_Name","status","blob","file","Blob","type","name","fileURL","URL","createObjectURL","window","open","Submit","event","preventDefault","post","start_date","end_date","records","target","value","item","index","length","Item_ID","_","record"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { Button, Table, Form, Col, Container } from 'react-bootstrap'\r\nimport '../style.css'\r\nimport HeaderPages from '../header/Header_pages';\r\nimport { useState, useEffect } from 'react';\r\nimport { API_URL } from '../../utils/constant';\r\n\r\n\r\nconst ProductLedger = () => {\r\n\r\n    const [start_Date, set_Start_Date] = useState();\r\n    const [Product, set_Product] = useState();\r\n    const [end_Date, set_End_Date] = useState();\r\n    const [allitems, setallitems] = useState([]);\r\n\r\n    const arr = ['Date', 'Quantity', 'Status', 'Department', 'Reason']\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${API_URL}/retreive-items`).then((res) => {\r\n            if (res.data.code === 200) {\r\n                setallitems(res.data.items)\r\n                console.log(res.data.items)\r\n            }\r\n            else {\r\n                setallitems([])\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [allRecords, setRecords] = useState();\r\n\r\n    const Pdf = async () => {\r\n\r\n        fetch(`${API_URL}/productledgerpdf`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                product: Product,\r\n                data: allRecords,\r\n                start: start_Date,\r\n                end: end_Date,\r\n                product_name: allitems[allitems.map(e => e._id).indexOf(Product)].Item_Name\r\n            }),\r\n        }).then(async res => {\r\n            if (res.status === 200) {\r\n                const blob = await res.blob();\r\n                const file = new Blob(\r\n                    [blob],\r\n                    { type: 'application/pdf' },\r\n                    { name: 'report.pdf' }\r\n                );\r\n                console.log(file)\r\n\r\n                //Build a URL from the file\r\n                const fileURL = URL.createObjectURL(file);\r\n                //Open the URL on new Window\r\n                console.log(fileURL)\r\n                //   download(res.data, details.request.Item + '_report', 'pdf');\r\n                window.open(fileURL);\r\n            }\r\n        })\r\n    }\r\n\r\n    const Submit = (event) => {\r\n        event.preventDefault();\r\n        axios.post(`${API_URL}/generateproductledger`, { start_date: start_Date, product: Product, end_date: end_Date, product_name: allitems[allitems.map(e => e._id).indexOf(Product)].Item_Name }).then((res) => {\r\n            if (res.data.code === 200) {\r\n                setRecords(res.data.records);\r\n            }\r\n            else {\r\n                setRecords([]);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <HeaderPages />\r\n            <Container fluid className='Container_Date text-center align-items-center justify-content-center'>\r\n                <h1>Product Ledger</h1>\r\n                <Form onSubmit={Submit} className=\"d-flex justify-content-center\">\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} className=\"mt-4\"  >\r\n                            <Form.Label>Start Date</Form.Label>\r\n                            <Form.Control type=\"Date\" value={start_Date} onChange={(e) => { set_Start_Date(e.target.value) }} required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"mt-4\"  >\r\n                            <Form.Label>Product</Form.Label>\r\n                            <Form.Control as=\"select\" className=\"selectstyle\" onChange={(e) => { set_Product(e.target.value) }} required>\r\n                                <option disabled selected>-</option>\r\n                                {\r\n                                    allitems.map((item, index) => {\r\n                                        return (\r\n                                            <option value={item._id}>{item.Item_Name}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"mt-4\" >\r\n                            <Form.Label>End Date</Form.Label>\r\n                            <Form.Control type=\"Date\" value={end_Date} onChange={(e) => { set_End_Date(e.target.value) }} required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"mt-4\">\r\n                            <Button className=\"Btn Date_Button ml-2\" type='Submit'>Find</Button>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                </Form>\r\n\r\n\r\n                {allRecords && <>\r\n                    {allRecords.length > 0 &&\r\n                        <>\r\n                            <h2>Item ID : {allitems[allitems.map(e => e._id).indexOf(Product)].Item_ID}</h2>\r\n                            <Button className=\"Btn Date_Button ml-2\" onClick={Pdf}>Generate PDF Report</Button>\r\n                            <Table className=\"TableStyle mt-3 justify-content-center\" responsive>\r\n                                <thead>\r\n                                    <>\r\n                                        <tr>\r\n                                            <th>#</th>\r\n                                            {arr.map((_, index) => (\r\n                                                <th key={index}>{_}</th>\r\n                                            ))}\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {allRecords.map((record, index) => {\r\n                                        return (\r\n                                            <>\r\n                                                <tr>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>{record[0]}</td>\r\n                                                    <td>{record[1]}<br /></td>\r\n                                                    <td>{record[2]}</td>\r\n                                                    <td>{record[3]}</td>\r\n                                                    <td>{record[4]}</td>\r\n                                                    <td>{record[5]}</td>\r\n\r\n\r\n\r\n                                                </tr>\r\n\r\n\r\n                                            </>\r\n                                        )\r\n\r\n\r\n                                    })}\r\n                                </tbody>\r\n                            </Table>\r\n                        </>\r\n                    }\r\n                    {\r\n                        allRecords.length === 0 && <h2>No Records.</h2>\r\n                    }\r\n                </>}\r\n\r\n            </Container>\r\n        </>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ProductLedger;\r\n\r\n"]},"metadata":{},"sourceType":"module"}