{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\Desktop\\\\IMS\\\\client\\\\src\\\\components\\\\issue\\\\Issue_items.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Row, Table, Button, Container, Modal, Form, Card } from \"react-bootstrap\"; // import styled from 'styled-components';\n\nimport MainHeader from \"../header/Header_pages\";\nimport { useParams, useHistory } from \"react-router\";\nimport { API_URL } from \"../../utils/constant\";\nimport \"../style.css\"; // import { func } from 'prop-types';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IssueItems = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const history = useHistory();\n  const arr = [\"Name\", \"Type\", \"Description\", \"Quantity\"]; // const [items, setitems] = useState([])\n\n  const {\n    id\n  } = useParams();\n  const [requested, setRequested] = useState({});\n  const [iName, setItemName] = useState(\"\");\n  const [inventory, setInventory] = useState([]);\n  const [department, setDepartment] = useState([]);\n\n  async function fetch() {\n    await axios.get(`${API_URL}/` + id + \"/issuerequest\", {\n      withCredentials: true\n    }).then(res => {\n      console.log(\"IN ISSUE_ITEMS.JS\", res.data);\n\n      if (res.data.code === 404) {\n        history.push(\"/storedashboard\");\n      } else if (res.data.code === 200) {\n        console.log(res.data);\n        setRequested(res.data.requested_item);\n        setInventory(res.data.inventory_items); // setItemName(res.data.requested_item.Item);\n\n        setDepartment(res.data.department);\n      }\n    });\n  }\n\n  const onPurchase = () => {\n    axios.post(`${API_URL}/request_forward_purchase`, {\n      id: id\n    }).then(res => {\n      if (res.data) {\n        setShow(false);\n        console.log(\"Request Forwarded to Purchase Department\");\n        window.flash(\"Request Forwarded to Purchase Department\");\n        history.push(\"/storedashboard\");\n      }\n    });\n  };\n\n  const onCancel = (_id, email, name, item) => {\n    axios.post(`${API_URL}/request_cancel`, {\n      id: _id,\n      email: email,\n      name: name,\n      item: item\n    }).then(res => {\n      if (res.data) {\n        window.flash(\"Request Cancelled\");\n        fetch();\n        history.push(\"/storedashboard\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetch(); // axios\n    //   .get(`${API_URL}/` + id + \"/issuerequest\", {\n    //     withCredentials: true,\n    //   })\n    //   .then((res) => {\n    //     console.log(\"IN ISSUE_ITEMS.JS\", res.data);\n    //     if (res.data.code === 404) {\n    //       history.push(\"/storedashboard\");\n    //     } else if (res.data.code === 200) {\n    //       console.log(res.data);\n    //       setRequested(res.data.requested_item);\n    //       setInventory(res.data.inventory_items);\n    //       setItemName(res.data.requested_item.Item);\n    //     }\n    //   });\n  }, []); // /////////////////////////////////////////////////\n\n  const [showModal, setShow] = useState(false);\n  const [ModalInfo, SetInfo] = useState({});\n  const [item_id, set_item_id] = useState(\"\");\n\n  const ModalContent = () => {\n    _s();\n\n    // const [name, setname] = useState(ModalInfo.Item_Name);\n    // const [quantity, setquantity] = useState(ModalInfo.Item_Quantity);\n    // const [description, setdescription] = useState(ModalInfo.Item_Description);\n    // const [type, settype] = useState(ModalInfo.Item_Type);\n    const [Quantity, setQuantity] = useState();\n    const [Duration, setDuration] = useState();\n    const [Department, setDepartment] = useState();\n\n    const UpdateRecord = (event, q) => {\n      console.log(\"Quantity : \", ModalInfo.Item_Quantity - Quantity);\n      axios.post(`${API_URL}/issued_item`, {\n        quantity: Quantity,\n        duration: Duration,\n        department: Department,\n        request_id: requested._id,\n        item_id: item_id,\n        id: requested._id\n      }).then(res => {\n        setShow(false);\n        console.log(res);\n\n        if (res.data.code === 404) {\n          window.scrollTo(0, 0);\n          window.flash(\"Item Quantity Invalid\", \"danger\");\n        } else if (res.data.code === 200) {\n          window.scrollTo(0, 0);\n          history.push(\"/storedashboard\");\n          setTimeout(() => {\n            window.flash(\"Item Successfully Issued \");\n          }, 1000); // fetch();\n        } //  setRequested(res.data);\n\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => {\n        setShow(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"ModalBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Requested Item Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Item Name: \", requested.Item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity Requested: \", requested.Quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Duration of Request: \", requested.Duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Request from Department: \", department]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Inventory Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Item Name: \", ModalInfo.Item_ID.Item_Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity Available: \", ModalInfo.Quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: Department,\n            placeholder: \"Department\",\n            onChange: event => {\n              setDepartment(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: Duration,\n            placeholder: \"Duration\",\n            onChange: event => {\n              setDuration(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            value: Quantity,\n            placeholder: \"Quantity\",\n            onChange: event => {\n              setQuantity(event.target.value);\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => UpdateRecord(ModalInfo.Item_Quantity - Quantity),\n          type: \"submit\",\n          className: \"Btn btn-success\",\n          children: \"Issue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(ModalContent, \"5Mz1v7c0Udngkd5noUOl1nom7i4=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"Row1\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Store Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"Row1\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Requested Item Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"Item Name: \", requested.Item]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"Quantity Requested: \", requested.Quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"Duration of Request: \", requested.Duration]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"Request from Department: \", department]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"Btn btn-success mr-4\",\n              onClick: () => {\n                onPurchase();\n              },\n              children: \"Send To Purchase Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \" btn-danger\",\n              onClick: () => onCancel(requested._id, requested.R_Emp_Email, requested.R_Emp_Name, requested.Item),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"Row1 float-right\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"FormGroup\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"mt-auto mr-2\",\n              children: \"Search: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Search\",\n              name: \"searchbar\",\n              value: iName,\n              onChange: event => {\n                setItemName(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), inventory.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"TableStyle\",\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), arr.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: _\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: inventory.map((item, index) => {\n            if (item.Item_ID.Item_Name.toLowerCase().includes(iName.toLowerCase()) || item.Item_ID.Item_Description.toLowerCase().includes(iName.toLowerCase())) return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [item.Item_ID.Item_Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.Item_ID.Item_Type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.Item_ID.Item_Description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.Quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"Btn\",\n                    onClick: () => {\n                      SetInfo(item);\n                      set_item_id(item.Item_ID._id);\n                      setShow(true);\n                    },\n                    children: \"Confirm Issue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 23\n              }, this)\n            }, void 0, false); // else return(<tr></tr>)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), inventory.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-2\",\n        children: \"No Items.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(IssueItems, \"XWNKohTxT3awt6bcXh5Ftp6lsUI=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = IssueItems;\nexport default IssueItems; // const Row1 = styled(Row)`\n//     padding:100px 16px 0px 0px;\n// `;\n// const MainContainer = styled(Container)`\n//     width: 100%;\n//   height: auto;\n//   min-height: 100%;\n//   min-height: 100vh;\n// `;\n// const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n// const Btn = styled(Button)`\n// background :#EFBB20;\n// margin-left : 10px;\n// border: none;\n// &:hover{\n// background: #0e8ccc;\n// }\n// `;\n// const ModalBody = styled(Modal.Body)`\n// li{\n//     padding:10px;\n// }\n// `;\n// const FormGroup = styled(Form.Group)`\n// display : flex\n// `;\n// const FormLabel = styled(Form.Label)`\n// font-size : 25px\n// `;\n\nvar _c;\n\n$RefreshReg$(_c, \"IssueItems\");","map":{"version":3,"sources":["C:/Users/amira/Desktop/IMS/client/src/components/issue/Issue_items.js"],"names":["React","useEffect","useState","axios","Row","Table","Button","Container","Modal","Form","Card","MainHeader","useParams","useHistory","API_URL","IssueItems","history","arr","id","requested","setRequested","iName","setItemName","inventory","setInventory","department","setDepartment","fetch","get","withCredentials","then","res","console","log","data","code","push","requested_item","inventory_items","onPurchase","post","setShow","window","flash","onCancel","_id","email","name","item","showModal","ModalInfo","SetInfo","item_id","set_item_id","ModalContent","Quantity","setQuantity","Duration","setDuration","Department","UpdateRecord","event","q","Item_Quantity","quantity","duration","request_id","scrollTo","setTimeout","Item","Item_ID","Item_Name","target","value","R_Emp_Email","R_Emp_Name","length","map","_","index","toLowerCase","includes","Item_Description","Item_Type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Row,\r\n  Table,\r\n  Button,\r\n  Container,\r\n  Modal,\r\n  Form,\r\n  Card,\r\n} from \"react-bootstrap\";\r\n// import styled from 'styled-components';\r\nimport MainHeader from \"../header/Header_pages\";\r\nimport { useParams, useHistory } from \"react-router\";\r\nimport { API_URL } from \"../../utils/constant\";\r\nimport \"../style.css\";\r\n// import { func } from 'prop-types';\r\n\r\nconst IssueItems = () => {\r\n  const history = useHistory();\r\n  const arr = [\"Name\", \"Type\", \"Description\", \"Quantity\"];\r\n  // const [items, setitems] = useState([])\r\n\r\n  const { id } = useParams();\r\n\r\n  const [requested, setRequested] = useState({});\r\n  const [iName, setItemName] = useState(\"\");\r\n  const [inventory, setInventory] = useState([]);\r\n  const [department, setDepartment] = useState([]);\r\n\r\n  async function fetch() {\r\n    await axios\r\n      .get(`${API_URL}/` + id + \"/issuerequest\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        console.log(\"IN ISSUE_ITEMS.JS\", res.data);\r\n        if (res.data.code === 404) {\r\n          history.push(\"/storedashboard\");\r\n        } else if (res.data.code === 200) {\r\n          console.log(res.data);\r\n          setRequested(res.data.requested_item);\r\n          setInventory(res.data.inventory_items);\r\n          // setItemName(res.data.requested_item.Item);\r\n          setDepartment(res.data.department);\r\n\r\n        }\r\n\r\n      });\r\n  } \r\n\r\n  const onPurchase = () => {\r\n    axios\r\n      .post(`${API_URL}/request_forward_purchase`, { id: id })\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setShow(false);\r\n          console.log(\"Request Forwarded to Purchase Department\");\r\n          window.flash(\"Request Forwarded to Purchase Department\");\r\n          history.push(\"/storedashboard\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const onCancel = (_id, email, name, item) => {\r\n    axios\r\n      .post(`${API_URL}/request_cancel`, {\r\n        id: _id,\r\n        email: email,\r\n        name: name,\r\n        item: item,\r\n      })\r\n      .then((res) => {\r\n        if (res.data) {\r\n          window.flash(\"Request Cancelled\");\r\n          fetch();\r\n          history.push(\"/storedashboard\");\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch();\r\n    // axios\r\n    //   .get(`${API_URL}/` + id + \"/issuerequest\", {\r\n    //     withCredentials: true,\r\n    //   })\r\n    //   .then((res) => {\r\n    //     console.log(\"IN ISSUE_ITEMS.JS\", res.data);\r\n    //     if (res.data.code === 404) {\r\n    //       history.push(\"/storedashboard\");\r\n    //     } else if (res.data.code === 200) {\r\n    //       console.log(res.data);\r\n    //       setRequested(res.data.requested_item);\r\n    //       setInventory(res.data.inventory_items);\r\n    //       setItemName(res.data.requested_item.Item);\r\n    //     }\r\n\r\n    //   });\r\n  }, []);\r\n  // /////////////////////////////////////////////////\r\n  const [showModal, setShow] = useState(false);\r\n  const [ModalInfo, SetInfo] = useState({});\r\n  const [item_id, set_item_id] = useState(\"\");\r\n  const ModalContent = () => {\r\n    // const [name, setname] = useState(ModalInfo.Item_Name);\r\n    // const [quantity, setquantity] = useState(ModalInfo.Item_Quantity);\r\n    // const [description, setdescription] = useState(ModalInfo.Item_Description);\r\n    // const [type, settype] = useState(ModalInfo.Item_Type);\r\n    const [Quantity, setQuantity] = useState();\r\n    const [Duration, setDuration] = useState();\r\n    const [Department, setDepartment] = useState();\r\n    const UpdateRecord = (event, q) => {\r\n\r\n      console.log(\"Quantity : \", ModalInfo.Item_Quantity - Quantity);\r\n      axios\r\n        .post(`${API_URL}/issued_item`, {\r\n          quantity: Quantity,\r\n          duration : Duration,\r\n          department : Department,\r\n          request_id: requested._id,\r\n          item_id: item_id,\r\n          id : requested._id\r\n        })\r\n        .then((res) => {\r\n          setShow(false);\r\n          console.log(res);\r\n          if (res.data.code === 404) {\r\n            window.scrollTo(0, 0);\r\n            window.flash(\"Item Quantity Invalid\", \"danger\");\r\n          } else if (res.data.code === 200) {\r\n            window.scrollTo(0, 0);\r\n            history.push(\"/storedashboard\");\r\n            setTimeout(()=>{\r\n            window.flash(\"Item Successfully Issued \");\r\n            }, 1000) \r\n            // fetch();\r\n          }\r\n          //  setRequested(res.data);\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n      <Modal\r\n        show={showModal}\r\n        onHide={() => {\r\n          setShow(false);\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"ModalBody\">\r\n          <h5>\r\n            <strong>Requested Item Information</strong>\r\n          </h5>\r\n          <p>Item Name: {requested.Item}</p>\r\n          <p>Quantity Requested: {requested.Quantity}</p>\r\n          <p>Duration of Request: {requested.Duration}</p>\r\n          <p>Request from Department: {department}</p>\r\n\r\n          <h5>\r\n            <strong>Inventory Information</strong>\r\n          </h5>\r\n          <p>Item Name: {ModalInfo.Item_ID.Item_Name}</p>\r\n          <p>Quantity Available: {ModalInfo.Quantity}</p>\r\n{/*\r\n          <p>\r\n            <strong>Set Issue Quantity</strong>\r\n          </p> */}\r\n\r\n          <Form>\r\n          <Form.Control\r\n              type=\"text\"\r\n              value={Department}\r\n              placeholder = \"Department\"\r\n              onChange={(event) => {\r\n                setDepartment(event.target.value);\r\n              }}\r\n            />\r\n          <Form.Control\r\n              type=\"text\"\r\n              value={Duration}\r\n              placeholder = \"Duration\"\r\n              onChange={(event) => {\r\n                setDuration(event.target.value);\r\n              }}\r\n            />\r\n\r\n          <Form.Control\r\n              type=\"number\"\r\n              value={Quantity}\r\n              placeholder = \"Quantity\"\r\n              onChange={(event) => {\r\n                setQuantity(event.target.value);\r\n              }}\r\n            required\r\n            />\r\n\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => UpdateRecord(ModalInfo.Item_Quantity - Quantity)}\r\n            type=\"submit\"\r\n            className=\"Btn btn-success\"\r\n          >\r\n            Issue\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal ? (\r\n        <div>\r\n          <ModalContent />\r\n        </div>\r\n      ) : null}\r\n\r\n      <MainHeader />\r\n\r\n      <Container className=\"MainContainer\">\r\n        <Row className=\"Row1\">\r\n          <h1>Store Inventory</h1>\r\n        </Row>\r\n        <Row className=\"Row1\">\r\n          <Card>\r\n            <Card.Header>Requested Item Information</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Item Name: {requested.Item}</Card.Title>\r\n              <Card.Title>Quantity Requested: {requested.Quantity}</Card.Title>\r\n              <Card.Title>Duration of Request: {requested.Duration}</Card.Title>\r\n              <Card.Title>Request from Department: {department}</Card.Title>\r\n\r\n            </Card.Body>\r\n            {/* <Btn onClick = {() => {SetInfo(request); setShow(true);} } className = \"mr-1\"> Details </Btn> */}\r\n            {/* <Btn onClick={()=>onIssue(request._id)} className = \"btn-success mr-1\">Issue</Btn> */}\r\n            <Card.Footer>\r\n              <Button\r\n                className=\"Btn btn-success mr-4\"\r\n                onClick={() => {\r\n                  onPurchase();\r\n                }}\r\n              >\r\n                Send To Purchase Department\r\n              </Button>\r\n              <Button\r\n                className=\" btn-danger\"\r\n                onClick={() =>\r\n                  onCancel(\r\n                    requested._id,\r\n                    requested.R_Emp_Email,\r\n                    requested.R_Emp_Name,\r\n                    requested.Item\r\n                  )\r\n                }\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Row>\r\n        <Row className=\"Row1 float-right\">\r\n          <Form>\r\n            <Form.Group className=\"FormGroup\">\r\n              <Form.Label className=\"mt-auto mr-2\">Search: </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                name=\"searchbar\"\r\n                value={iName}\r\n                onChange={(event) => {\r\n                  setItemName(event.target.value);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Row>\r\n\r\n        {inventory.length > 0 && (\r\n          <Table className=\"TableStyle\" responsive>\r\n            <thead>\r\n              <>\r\n                <tr>\r\n                  <th>#</th>\r\n                  {arr.map((_, index) => (\r\n                    <th key={index}>{_}</th>\r\n                  ))}\r\n\r\n                  <th></th>\r\n                </tr>\r\n              </>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {inventory.map((item, index) => {\r\n                if (\r\n                  item.Item_ID.Item_Name.toLowerCase().includes(iName.toLowerCase()) ||\r\n                  item.Item_ID.Item_Description.toLowerCase().includes(\r\n                    iName.toLowerCase()\r\n                  )\r\n                )\r\n                  return (\r\n                    <>\r\n                      <tr>\r\n                        <td>{index + 1}</td>\r\n                        <td>\r\n                          {item.Item_ID.Item_Name}\r\n                          <br />\r\n                        </td>\r\n                        <td>{item.Item_ID.Item_Type}</td>\r\n                        <td>{item.Item_ID.Item_Description}</td>\r\n                        <td>{item.Quantity}</td>\r\n                        <td>\r\n                          <Button\r\n                            className=\"Btn\"\r\n                            onClick={() => {\r\n                              SetInfo(item);\r\n                              set_item_id(item.Item_ID._id);\r\n                              setShow(true);\r\n                            }}\r\n                          >\r\n                            Confirm Issue\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    </>\r\n                  );\r\n                // else return(<tr></tr>)\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n\r\n        {inventory.length === 0 && <h2 className=\"mt-2\">No Items.</h2>}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IssueItems;\r\n\r\n// const Row1 = styled(Row)`\r\n//     padding:100px 16px 0px 0px;\r\n\r\n// `;\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//   height: auto;\r\n//   min-height: 100%;\r\n//   min-height: 100vh;\r\n// `;\r\n// const TableStyle = styled(Table)`\r\n// th {background: #1F386B; color:white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n// const Btn = styled(Button)`\r\n// background :#EFBB20;\r\n// margin-left : 10px;\r\n// border: none;\r\n// &:hover{\r\n// background: #0e8ccc;\r\n// }\r\n// `;\r\n\r\n// const ModalBody = styled(Modal.Body)`\r\n\r\n// li{\r\n//     padding:10px;\r\n// }\r\n\r\n// `;\r\n\r\n// const FormGroup = styled(Form.Group)`\r\n// display : flex\r\n\r\n// `;\r\n\r\n// const FormLabel = styled(Form.Label)`\r\n// font-size : 25px\r\n\r\n// `;\r\n"]},"metadata":{},"sourceType":"module"}