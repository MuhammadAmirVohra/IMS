[{"/home/amir/Desktop/New File/IMS/client/src/index.js":"1","/home/amir/Desktop/New File/IMS/client/src/App.js":"2","/home/amir/Desktop/New File/IMS/client/src/components/Bus.js":"3","/home/amir/Desktop/New File/IMS/client/src/components/Authapi.js":"4","/home/amir/Desktop/New File/IMS/client/src/components/logout/Logout.js":"5","/home/amir/Desktop/New File/IMS/client/src/components/dashboard/Dashboard.js":"6","/home/amir/Desktop/New File/IMS/client/src/components/login/Login_Form.js":"7","/home/amir/Desktop/New File/IMS/client/src/components/hod_dashboard/Hod_dashboard.js":"8","/home/amir/Desktop/New File/IMS/client/src/components/purchaseDashboard/Purchase_dashboard.js":"9","/home/amir/Desktop/New File/IMS/client/src/components/managerDashboard/Manager_dashboard.js":"10","/home/amir/Desktop/New File/IMS/client/src/components/RequestDetails/Accounts_manager.js":"11","/home/amir/Desktop/New File/IMS/client/src/components/RequestDetails/Manager_admin.js":"12","/home/amir/Desktop/New File/IMS/client/src/components/StoreDashboard/Store_Dashboard.js":"13","/home/amir/Desktop/New File/IMS/client/src/components/RequestDetails/Director.js":"14","/home/amir/Desktop/New File/IMS/client/src/components/inventory/Inventory.js":"15","/home/amir/Desktop/New File/IMS/client/src/components/issue/Issue_items.js":"16","/home/amir/Desktop/New File/IMS/client/src/components/recieve_items/Recieve_Items.js":"17","/home/amir/Desktop/New File/IMS/client/src/components/Request_Form/Request_Form.js":"18","/home/amir/Desktop/New File/IMS/client/src/components/userInformation/User_information.js":"19","/home/amir/Desktop/New File/IMS/client/src/utils/constant.js":"20","/home/amir/Desktop/New File/IMS/client/src/components/header/Header_pages.js":"21","/home/amir/Desktop/New File/IMS/client/src/components/header/Header.js":"22","/home/amir/Desktop/New File/IMS/client/src/components/track/Track_request.js":"23","/home/amir/Desktop/New File/IMS/client/src/components/Request_Table/RequestTable.js":"24","/home/amir/Desktop/New File/IMS/client/src/components/purchaseRequest/Purchase_request_table.js":"25","/home/amir/Desktop/New File/IMS/client/src/components/ManagerRequestTable/ManagerRequestTable.js":"26","/home/amir/Desktop/New File/IMS/client/src/components/storeTable/Store_Table.js":"27","/home/amir/Desktop/New File/IMS/client/src/components/Flash/flashmessage.js":"28"},{"size":316,"mtime":1620372446329,"results":"29","hashOfConfig":"30"},{"size":12501,"mtime":1620373613199,"results":"31","hashOfConfig":"30"},{"size":69,"mtime":1620372446329,"results":"32","hashOfConfig":"30"},{"size":89,"mtime":1620372446329,"results":"33","hashOfConfig":"30"},{"size":750,"mtime":1620373341219,"results":"34","hashOfConfig":"30"},{"size":969,"mtime":1620372446329,"results":"35","hashOfConfig":"30"},{"size":6878,"mtime":1620374857649,"results":"36","hashOfConfig":"30"},{"size":918,"mtime":1620372446329,"results":"37","hashOfConfig":"30"},{"size":844,"mtime":1620372446329,"results":"38","hashOfConfig":"30"},{"size":836,"mtime":1620372446329,"results":"39","hashOfConfig":"30"},{"size":3738,"mtime":1620374296289,"results":"40","hashOfConfig":"30"},{"size":3836,"mtime":1620374322399,"results":"41","hashOfConfig":"30"},{"size":1034,"mtime":1620372446329,"results":"42","hashOfConfig":"30"},{"size":4921,"mtime":1620372446329,"results":"43","hashOfConfig":"30"},{"size":5785,"mtime":1620372446329,"results":"44","hashOfConfig":"30"},{"size":9772,"mtime":1620372446329,"results":"45","hashOfConfig":"30"},{"size":5693,"mtime":1620372446329,"results":"46","hashOfConfig":"30"},{"size":4743,"mtime":1620372446329,"results":"47","hashOfConfig":"30"},{"size":4716,"mtime":1620372446329,"results":"48","hashOfConfig":"30"},{"size":27,"mtime":1620372446329,"results":"49","hashOfConfig":"30"},{"size":857,"mtime":1620372446329,"results":"50","hashOfConfig":"30"},{"size":841,"mtime":1620372446329,"results":"51","hashOfConfig":"30"},{"size":2885,"mtime":1620372446329,"results":"52","hashOfConfig":"30"},{"size":5275,"mtime":1620372446329,"results":"53","hashOfConfig":"30"},{"size":5693,"mtime":1620372446329,"results":"54","hashOfConfig":"30"},{"size":2935,"mtime":1620373351659,"results":"55","hashOfConfig":"30"},{"size":5805,"mtime":1620372446329,"results":"56","hashOfConfig":"30"},{"size":1113,"mtime":1620372446329,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1y8repy",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/home/amir/Desktop/New File/IMS/client/src/index.js",[],["119","120"],"/home/amir/Desktop/New File/IMS/client/src/App.js",["121"],"import Login from './components/login/Login_Form';\nimport React, { useState } from 'react';\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\nimport { createGlobalStyle } from \"styled-components\";\nimport Dashboard from './components/dashboard/Dashboard';\nimport LogOut from './components/logout/Logout'\n// import SepModal from './components/table/SepModal'\n// import Modal from './components/modal/modal'\nimport AuthApi from './components/Authapi'\n// import Cookies from 'js-cookie';\nimport HODDashboard from './components/hod_dashboard/Hod_dashboard'\n// import Request_Form from './components/Request_Form/Request_Form'\nimport PurchaseDashboard from './components/purchaseDashboard/Purchase_dashboard'\n// import axios from 'axios'\nimport MDashboard from './components/managerDashboard/Manager_dashboard'\nimport AccountsManagerDetails from './components/RequestDetails/Accounts_manager'\nimport ManagerAdminDetails from './components/RequestDetails/Manager_admin'\nimport DirectorDetails from './components/RequestDetails/Director'\nimport StoreDashboard from './components/StoreDashboard/Store_Dashboard'\nimport Inventory from './components/inventory/Inventory'\nimport RecieveItems from './components/recieve_items/Recieve_Items'\nimport IssueItems from './components/issue/Issue_items'\nimport Cookie from 'universal-cookie'\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Merriweather:wght@300;400;700&display=swap');\n    *{\n        font-family: 'Merriweather', sans-serif;\n   }\n    \n`; \nfunction App() \n{\n    const cookie = new Cookie()\n    const [token , settoken] = useState(false)\n    const [UserRole , setRole] = useState(false)\n\n    console.log(token)\n\n    function CheckUser()\n    {\n        // await  axios({\n        //     method: \"POST\",\n        //     withCredentials: true,\n        //     url: \"http://localhost:5000/loggedin_user\",\n        //   }).then((res) => {\n\n        //     if(res.data)\n        //     {\n        //         if(res.data.code === 404)\n        //         {\n                    // settoken(false);\n                    // setRole(\"\");\n        //         }\n        //         else\n        //         {\n        //             settoken(true);\n        //             setRole(res.data.user.user.Designation);\n        //         }\n        //     }\n            \n\n        // });\n\n            \n        // let tok = localStorage.getItem('token');\n        let tok = cookie.get('token');\n\n        if (tok) {\n\n            console.log('token found');\n            settoken(true); \n            var u = cookie.get('user');\n            // setRole(localStorage.getItem('user'));\n            setRole(u);\n        }\n        else\n        {\n            console.log('No token found');\n            settoken(false); setRole(\"\");\n        }\n\n\n\n\n\n\n    }\n\n\n\n    React.useEffect(()=> {\n        \n        CheckUser();\n\n        \n        // const user  = Cookies.get('user');\n        // if (user) {\n        //     settoken(true);\n        // }\n        // else\n        // {\n        //     settoken(false);\n        // }\n    },[])\n\n        return ( \n        <>\n        <GlobalStyle/>\n            <AuthApi.Provider value = {{token, settoken, UserRole, setRole, CheckUser}}>\n            <BrowserRouter>\n                <Routes />\n            </BrowserRouter>   \n            </AuthApi.Provider>    \n        </>\n    );\n}\n\nconst Routes = () =>{\n    const cookie = new Cookie()\n    const Auth = React.useContext(AuthApi);\n    return(         \n           \n           <Switch>\n                <Route exact path=\"/\" render={() => {\n                    // let tok = localStorage.getItem('token');\n                    let tok = cookie.get('token');\n                    if (tok) {\n            \n                        console.log('token found');\n                        Auth.settoken(true); \n                        // Auth.setRole(localStorage.getItem('user'));\n                        Auth.setRole(cookie.get('user'));\n\n                    }\n                    else\n                    {\n                        console.log('No token found');\n                        Auth.settoken(false); Auth.setRole(\"\");\n                    }\n            \n            \n                    console.log('Auth Token ', Auth.token);\n                    console.log('Auth User Role ', Auth.userRole);\n\n                    // Auth.token === null ? (<Login />) :  <Redirect to=\"/dashboard\"/>\n                        \n\n                    if (Auth.token === false)   \n                    {\n                        console.log(\"here\") ;\n                        return <Login /> \n                    }\n                    else if(Auth.token !== false && Auth.UserRole === 'General')   \n                    {\n                        return <Redirect to=\"/dashboard\"/>\n                    }\n                    else if(Auth.token !== false && Auth.UserRole === 'Purchase')   \n                    {\n                        return <Redirect to=\"/purchase\"/>\n                    }\n                    else if(Auth.token !== false && Auth.UserRole === 'Head')   \n                    {\n                        return <Redirect to=\"/hoddashboard\"/>\n                    }\n                    else if(Auth.token !== false && (Auth.UserRole === 'Accounts' || Auth.UserRole === \"Admin\" || Auth.UserRole === \"Director\") )\n                    {\n                        return <Redirect to=\"/managerdashboard\"/>\n                    }\n                    else if(Auth.token !== false && Auth.UserRole === 'Store'  )\n                    {\n                        return <Redirect to=\"/storedashboard\"/>\n                    }\n                    \n                    \n                    \n                       \n                       \n                }}>\n\n\n                    \n                </Route>  \n                {/* <ProtectLogin path = '/' exact components = {Login} token = {Auth.token} /> */}\n\n                <Route path =\"/inventory\"\n                render={() => {\n                    if (Auth.token !== false && (Auth.UserRole === \"Store\"))\n                    { return <Inventory/>}\n                    else\n                    { return <Redirect exact to=\"/\" ></Redirect>}\n\n\n                }}>\n                </Route>\n                {/* <Route path =\"/:itemName/issuerequest\"\n                render={() => {\n                    if (Auth.token !== false && (Auth.UserRole === \"Store\"))\n                    { return <IssueItems/>}\n                    else\n                    { return <Redirect exact to=\"/\" ></Redirect>}\n\n\n                }}>\n                </Route> */}\n                <Route path =\"/:id/issuerequest\"\n                render={() => {\n                    if (Auth.token !== false && (Auth.UserRole === \"Store\"))\n                    { return <IssueItems/>}\n                    else\n                    { return <Redirect exact to=\"/\" ></Redirect>}\n\n\n                }}>\n                </Route>\n\n                <Route path =\"/:id/accountsrequest\"\n                render={() => {\n                    if (Auth.token !== false && (Auth.UserRole === \"Accounts\"))\n                    { return <AccountsManagerDetails/>}\n                    else\n                    { return <Redirect exact to=\"/\" ></Redirect>}\n\n\n                }}>\n                </Route>\n\n                <Route path =\"/recieveitems\"\n                render={() => {\n                    if (Auth.token !== false && (Auth.UserRole === \"Store\"))\n                    { return <RecieveItems/>}\n                    else\n                    { return <Redirect exact to=\"/\" ></Redirect>}\n\n\n                }}>\n                </Route>\n                <Route path =\"/:id/adminrequest\"\n                render={() => {\n                    if (Auth.token !== false && (Auth.UserRole === \"Admin\"))\n                    { return <ManagerAdminDetails/>}\n                    else\n                    { return <Redirect exact to=\"/\" ></Redirect>}\n\n\n                }}> \n\n                </Route>\n                \n                <Route path =\"/:id/directorrequest\"\n                render={() => {\n                    if (Auth.token !== false && (Auth.UserRole === \"Director\"))\n                    { return <DirectorDetails/>}\n                    else\n                    { return <Redirect exact to=\"/\" ></Redirect>}\n\n\n                }}> \n\n                </Route>\n                \n                <Route  path=\"/dashboard\" \n                render={() => {\n                    console.log('Auth Token ', Auth.token);\n                    console.log('Auth User Role ', Auth.userRole);\n                    if (Auth.token !== false && (Auth.UserRole === 'General' || Auth.UserRole === 'Head'))   \n                        { return <Dashboard /> }\n                    else    \n                    {\n                        console.log('here');\n                        return <Redirect exact to=\"/\" />\n                    }\n                       \n                       \n                }}>\n                </Route>\n                {/* <ProtectRoute path = '/dashboard' exact comp = {Dashboard} token = {Auth.token} /> */}\n\n                <Route  path=\"/hoddashboard\" \n                render={() => {\n                    if (Auth.token !== false && (Auth.UserRole === 'Head'))   \n                        { return <HODDashboard/> }\n                    else    \n                    {\n                        return <Redirect to=\"/\"/>\n                    }\n                       \n                       \n                }}>\n                </Route>\n                    \n                <Route  path=\"/logout\" \n                render={() => {\n                    if (Auth.token !== false )   \n                        { return <LogOut/> }\n                    else    \n                    {\n                        return <Redirect to=\"/\"/>\n                    }\n                       \n                       \n                }}>\n                </Route>\n                    \n                <Route  path=\"/purchase\" \n                render={() => {\n                    if (Auth.token !== false && (Auth.UserRole === 'Purchase'))   \n                        { return <PurchaseDashboard/> }\n                    else    \n                    {\n                        return <Redirect to=\"/\"/>\n                    }\n                       \n                       \n                }}>\n                </Route>    \n                \n                <Route  path=\"/managerdashboard\" \n                render={() => {\n                    if (Auth.token !== false && (Auth.UserRole === 'Admin' || Auth.UserRole === \"Accounts\" || Auth.UserRole === \"Director\"))   \n                        { return <MDashboard /> }\n                    else    \n                    {\n                        return <Redirect to=\"/\"/>\n                    }\n                       \n                       \n                }}>\n                </Route>  \n\n               <Route  path=\"/storedashboard\" \n               render={() => {\n                   if (Auth.token !== false && Auth.UserRole === 'Store')   \n                       { return <StoreDashboard /> }\n                   else    \n                   {\n                       return <Redirect to=\"/\"/>\n                   }\n                      \n                      \n               }}>\n                </Route>\n                <Route  path=\"/*\" \n               render={() => {\n                       return <Redirect to=\"/\"/>   \n                      \n               }}>\n    \n               </Route> \n            </Switch>\n         \n    )\n}\n\n// const ProtectRoute = ({token, comp: Component, ...rest})=>{\n//     // const Auth = React.useContext(AuthApi);\n    \n//     return (\n\n//         <Route \n//         {...rest}\n//         render={() =>{ \n//          if (token)\n//             {\n//                 console.log(\"Token is true\")\n//                 return <Component />\n//             }\n        \n//         else\n//             {\n//                 console.log(\"Token is not true\")\n//                 return (<Redirect to='/' exact/>)\n//             }    \n//         }\n    \n    \n//     }\n        \n//         />\n//     )\n// }\n\n\n// const ProtectLogin = ({token, components: Component, ...rest})=>{\n//     return (\n        \n//         <Route \n//         {...rest}\n//         render={() => token ? (\n//             <Redirect to='/dashboard'/>    \n//         ):\n//         (\n//             <Component />\n//         )\n    \n    \n//     }\n        \n//         />\n//     )\n// }\n\nexport default App;\n","/home/amir/Desktop/New File/IMS/client/src/components/Bus.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/Authapi.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/logout/Logout.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/dashboard/Dashboard.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/login/Login_Form.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/hod_dashboard/Hod_dashboard.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/purchaseDashboard/Purchase_dashboard.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/managerDashboard/Manager_dashboard.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/RequestDetails/Accounts_manager.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/RequestDetails/Manager_admin.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/StoreDashboard/Store_Dashboard.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/RequestDetails/Director.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/inventory/Inventory.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/issue/Issue_items.js",["122","123","124","125","126","127","128","129","130","131"],"import React , { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {Row,Table,Button,Container, Modal, Form, Card} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport MainHeader from '../header/Header_pages';\nimport { useParams, useHistory } from 'react-router';\nimport { API_URL } from '../../utils/constant';\n\n// import { func } from 'prop-types';\n\n\nconst IssueItems = () => \n{\n    const history = useHistory();\n    const arr = ['Name','Type','Description','Quantity']\n    // const [items, setitems] = useState([])\n\n    const {id} = useParams();\n  \n        \n    const [requested,setRequested] = useState({\n    })\n    const [iName, setItemName] = useState(\"\")\n    const [inventory,setInventory] = useState([])\n    async function fetch()\n       { \n            await axios.get(`${API_URL}/` +id+ '/issuerequest', {\n                withCredentials: true\n        }).then((res)=>{\n            \n            console.log(\"IN ISSUE_ITEMS.JS BLABLA\",res.data); \n            if(res.data.code === 404)\n            {\n                history.push('/storedashboard')\n            }\n            else if (res.data.code === 200)\n            {   \n                console.log(res.data)\n                setRequested(res.data.requested_item);\n                setInventory(res.data.inventory_items);\n                setItemName(res.data.requested_item.Item);\n            }\n            \n           // // // // // // // check quantity update wali cheez main try kr rahi thi didnt get\n        })\n       }\n   \n\n    const onPurchase = ()=>{\n        axios.post(`${API_URL}/request_forward_purchase`, { id : id}).then(\n            (res)=>{\n                if(res.data)\n                { \n                    setShow(false)\n                    console.log(\"Request Forwarded to Purchase Department\")\n                    window.flash('Request Forwarded to Purchase Department')\n                    history.push('/storedashboard');\n                }\n            }\n        )\n\n    }\n        \n    const onCancel = (_id, email, name, item) => {\n        axios.post(`${API_URL}/request_cancel`, {id : _id, email : email, name : name, item : item}).then(\n            (res)=>{\n                if(res.data)\n                { \n                    window.flash('Request Cancelled');\n                    fetch();\n                    history.push('/storedashboard');\n                }\n            }\n        )\n    }\n\n    \n\n    useEffect( () =>{\n       fetch()\n  \n    },[])\n    // /////////////////////////////////////////////////\n    const [showModal, setShow] = useState(false)\n    const [ModalInfo, SetInfo] = useState({})\n    const [item_id, set_item_id] = useState(\"\")\n    const ModalContent = ()=>{\n       \n        const [name, setname] = useState(ModalInfo.Item_Name)\n        const [quantity, setquantity] = useState(ModalInfo.Item_Quantity)\n        const [description, setdescription] = useState(ModalInfo.Item_Description)\n        const [type, settype] = useState(ModalInfo.Item_Type)\n \n        const UpdateRecord = (event,q)=>{\n            // event.preventDefault() oyeeee abbb bass bhot hogaya ... commit karo aur so jao \n            console.log('Quantity : ', ModalInfo.Item_Quantity - Quantity)     \n         axios.post(`${API_URL}/issued_item`,\n         { quantity : Quantity, request_id : requested._id,  item_id: item_id})\n             .then(\n             (res) => {\n                 setShow(false);\n                 console.log(res);\n                 if (res.data.code === 404)\n                 {\n                    window.scrollTo(0, 0)\n                     window.flash('Item Quantity Invalid', 'danger')\n                 }\n                 else if (res.data.code === 200)\n                 { \n                    window.scrollTo(0, 0)\n                     window.flash('Item Successfully Issued ')\n                     history.push('/storedashboard');\n                 }  \n                //  setRequested(res.data);\n              \n             } \n         )\n         \n        }\n            \n        const [Quantity, setQuantity] = useState(0)\n\n        \n        \n         return(\n             <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n                 <Modal.Header closeButton>\n                     <Modal.Title>\n                         Details \n                     </Modal.Title>\n                     </Modal.Header>\n                <ModalBody>\n             \n                <h5><strong>Requested Item Information</strong></h5>\n                <p>Item Name: {requested.Item}</p>\n                <p>Quantity Requested: {requested.Quantity}</p>\n                <p>Duration of Request: {requested.Duration}</p>\n\n                <h5><strong>Inventory Information</strong></h5> \n                <p>Item Name: {ModalInfo.Item_Name}</p> \n                <p>Quantity Available: {ModalInfo.Item_Quantity}</p> \n                \n                <p><strong>Set Issue Quantity</strong></p> \n               \n                <Form>\n                    <Form.Control type=\"number\" value = {Quantity} onChange={(event)=>{setQuantity(event.target.value)}}  />    \n                </Form>\n\n                </ModalBody>\n                 <Modal.Footer>\n                    <Btn onClick={()=>UpdateRecord(ModalInfo.Item_Quantity - Quantity)} type =\"submit\" className = \"btn-success\">Issue</Btn>              \n                </Modal.Footer>\n               \n            </Modal>\n        );\n        \n\n    }\n    \n\n \n   \n\n    return(\n        <>\n        \n         {     showModal?\n                 <div>\n                     <ModalContent/>\n                 </div>\n             :null   \n         }\n        \n        <MainHeader/>  \n        \n\n        <MainContainer>\n            <Row1>\n                <h1>Store Inventory</h1>\n\n            </Row1>\n            <Row1>\n                <Card>\n                <Card.Header>Requested Item Information</Card.Header>\n                <Card.Body>\n                <Card.Title>Item Name: {requested.Item}</Card.Title>\n                <Card.Title>Quantity Requested: {requested.Quantity}</Card.Title>\n                <Card.Title>Duration of Request: {requested.Duration}</Card.Title>\n                </Card.Body>\n                {/* <Btn onClick = {() => {SetInfo(request); setShow(true);} } className = \"mr-1\"> Details </Btn> */}\n                {/* <Btn onClick={()=>onIssue(request._id)} className = \"btn-success mr-1\">Issue</Btn> */}\n                <Card.Footer>\n                <Btn className=\"btn-success\" onClick= {() => {onPurchase()}}>Send To Purchase Department</Btn>\n                <Btn onClick={()=>onCancel(requested._id, requested.R_Emp_Email, requested.R_Emp_Name, requested.Item)} className=\"btn-danger\">Cancel</Btn>\n                </Card.Footer></Card>\n            </Row1>\n            <Row1 className=\"float-right\" >\n        \n        <Form>\n             \n             <FormGroup>\n                    \n                <FormLabel>Search </FormLabel>  \n                 <Form.Control type=\"text\" placeholder=\"Search\" name=\"searchbar\" value={iName} onChange={(event)=>{ setItemName(event.target.value)}} />\n                 \n                \n              \n                \n             </FormGroup>\n             \n        </Form>       \n            \n                \n          \n         \n         \n         </Row1>\n     \n            { \n                inventory.length > 0 &&\n                <TableStyle responsive>\n            \n                <thead>\n                <>\n                    <tr>\n                        <th>#</th>\n                        {arr.map((_, index) => (\n                        <th key={index}>{_}</th>\n                        ))}\n                        \n                        \n                        <th></th>\n                    </tr>\n                </>\n                </thead>\n        \n            \n                <tbody>\n                {\n                    inventory.map((item, index) => {\n                        if (item.Item_Name.toLowerCase().includes(iName.toLowerCase()) || item.Item_Description.toLowerCase().includes(iName.toLowerCase()) )\n                        return(\n                        \n                        <>\n                        <tr>\n                            <td>{index+1}</td>\n                            <td>{item.Item_Name}<br/></td>\n                            <td>{item.Item_Type}</td>\n                            <td>{item.Item_Description}</td>\n                            <td>{item.Item_Quantity}</td> \n                            <td><Btn onClick = {()=>{ SetInfo(item); set_item_id(item._id); setShow(true); }} >Confirm Issue</Btn></td>\n                                \n               \n                        </tr>\n            \n           \n                        </>\n                    )\n                    // else return(<tr></tr>)\n\n                    }\n                    )\n                }\n            </tbody>\n      \n            </TableStyle>\n      \n            }\n\n            {\n                inventory.length === 0 && <h2 className=\"mt-2\">No Items.</h2>\n            }\n        \n            \n        </MainContainer>\n        \n        </>\n    )\n\n\n}\n\nexport default IssueItems;\n\nconst Row1 = styled(Row)`\n    padding:100px 16px 0px 0px;\n    \n\n\n`;\nconst MainContainer = styled(Container)`\n    width: 100%;\n  height: auto;\n  min-height: 100%;\n  min-height: 100vh;\n`;\nconst TableStyle = styled(Table)`\nth {background: #1F386B; color:white;}\ntr{\n    cursor:pointer;\n    &:hover{\n        background: lightgray;\n    }\n}\n`;\n\nconst Btn = styled(Button)`\nbackground :#EFBB20;\nmargin-left : 10px;\nborder: none; \n&:hover{\nbackground: #0e8ccc;\n}\n`;\n\nconst ModalBody = styled(Modal.Body)`\n\nli{\n    padding:10px;\n}\n\n`;\n\n\nconst FormGroup = styled(Form.Group)`\ndisplay : flex\n\n`;\n\n\nconst FormLabel = styled(Form.Label)`\nfont-size : 25px\n\n`;","/home/amir/Desktop/New File/IMS/client/src/components/recieve_items/Recieve_Items.js",["132"],"import React , { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {Row,Table,Button,Container, Modal, Form} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport MainHeader from '../header/Header_pages'\nimport moment from 'moment';\nimport { API_URL } from '../../utils/constant';\n\n\nconst RecieveItems = () => {\n    const arr = ['Person Name','Item Name','Quantity','Requested Date']\n    const [allRequests, setRequests] = useState([])\n  \n    \n    async function fetch(){\n        await axios.get(`${API_URL}/recieveitem`, {\n             withCredentials: true\n         }).then((res)=>{\n             console.log(res.data);\n             \n             setRequests(res.data);\n             \n         })\n    } \n    \n    useEffect( () =>{\n      \n    fetch()\n    },[])\n\n\n    const [showModal, setShow] = useState(false)\n    const [ModalInfo, SetInfo] = useState({})\n    const ModalContent = ()=>{\n       \n       const [name, setname] = useState(\"\")\n       const [quantity, setquantity] = useState(\"\")\n       const [description, setdescription] = useState(\"\")\n       const [type, settype] = useState(\"\")\n\n       const UpdateRecord = (event)=>{\n           event.preventDefault()\n           \n        axios.post(`${API_URL}/` + 'recieveitem'\n        ,{ id : ModalInfo._id, name : name, quantity : quantity, description : description, type : type })\n            .then(\n            (res) => {\n                setShow(false);\n                console.log(res) \n                window.flash('Record Updated')\n                // fetch()\n            } \n        )\n        \n       }\n\n\n\n        return(\n            <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Add Item \n                    </Modal.Title>\n                    </Modal.Header>\n                  <Form onSubmit = {UpdateRecord}>  \n\n                    <ModalBody>\n\n                <Form.Group>\n                    <Form.Control type=\"text\" value={name} placeholder = \"Item Name\" onChange={(event)=>{ setname(event.target.value)}} />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Control type=\"number\" value={quantity} placeholder = \"Item Quantity\" onChange={(event)=>{ setquantity(event.target.value) }} />\n                </Form.Group>\n                \n\n                <Form.Group>\n                    <Form.Control type=\"text\" value={type} placeholder = \"Item Type\" onChange={ (event)=>{ settype(event.target.value) }} />\n                </Form.Group>\n                \n\n                <Form.Group>\n                    <Form.Control type=\"text\" value={description} placeholder = \"Item Description\" onChange={ (event)=>{ setdescription(event.target.value) }} />\n                </Form.Group>\n                \n                </ModalBody>\n\n                \n                <Modal.Footer>\n                    <Btn type =\"submit\" className = \"btn-success\">Add to the Inventory</Btn>              \n                </Modal.Footer>\n                </Form>\n            </Modal>\n        );\n        \n\n    }\n    \n\n    \n    const [itemName, setItemName] = useState(\"\")\n    return(\n        <>\n        {showModal?\n            <div>\n                <ModalContent/>\n            </div>\n        :null   \n        }\n\n        \n   \n    <MainHeader/>\n    \n     \n    <MainContainer>\n        <Row1>\n            <h1>Recieve Items</h1>\n        </Row1>\n     <Row1 className=\"float-right\" >\n     \n    <Form>\n         \n         <FormGroup>\n           \n             <Form.Control type=\"text\" placeholder=\"Search\" name=\"searchbar\" value={itemName} onChange={(event)=>{ setItemName(event.target.value)}} >\n                 \n            \n             </Form.Control>\n            \n         </FormGroup>\n         \n    </Form>       \n        \n            \n      \n     \n     \n     </Row1>\n \n    \n         { allRequests.length > 0 &&\n        <TableStyle responsive>\n        <thead>\n            <>\n            <tr>\n             <th>#</th>\n            {arr.map((_, index) => (\n              <th key={index}>{_}</th>\n            ))}\n            <th></th>\n          </tr>\n</>\n        </thead>\n        <tbody>\n          {allRequests.map((request, index) =>{\n            if (request.Item.toLowerCase().includes(itemName.toLowerCase()) )\n            return(\n            <>\n           <tr>\n                <td>{index+1}</td>\n                <td>{request.R_Emp_Name}<br/></td>\n                <td>{request.Item}</td>\n                <td>{request.Quantity}</td>\n                <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\n                <td><Btn onClick = {()=>{ SetInfo(request); setShow(true); }} >Recieved</Btn></td>\n                    \n               \n            </tr>\n            \n           \n            </>\n            )\n          else return(<tr></tr>)\n          \n          \n          })}\n        </tbody>\n      </TableStyle>\n      \n      }\n      {\n          allRequests.length === 0 && <h2>No Requests.</h2>\n      }\n        \n      </MainContainer>\n      </>\n    )\n\n\n}\n\nexport default RecieveItems;\n\nconst Row1 = styled(Row)`\n    padding:100px 16px 0px 0px;\n    \n\n\n`;\nconst MainContainer = styled(Container)`\n    width: 100%;\n  height: auto;\n  min-height: 100%;\n  min-height: 100vh;\n`;\nconst TableStyle = styled(Table)`\nth {background: #1F386B; color:white;}\ntr{\n    cursor:pointer;\n    &:hover{\n        background: lightgray;\n    }\n}\n`;\n\nconst Btn = styled(Button)`\nbackground :#EFBB20;\nmargin-left : 10px;\nborder: none; \n&:hover{\nbackground: #0e8ccc;\n}\n`;\n\nconst ModalBody = styled(Modal.Body)`\n\nli{\n    padding:5px;\n}\n\n`;\n\n\nconst FormGroup = styled(Form.Group)`\ndisplay : flex\n\n`;","/home/amir/Desktop/New File/IMS/client/src/components/Request_Form/Request_Form.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/userInformation/User_information.js",[],"/home/amir/Desktop/New File/IMS/client/src/utils/constant.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/header/Header_pages.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/header/Header.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/track/Track_request.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/Request_Table/RequestTable.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/purchaseRequest/Purchase_request_table.js",["133","134","135","136"],"import React , { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {Table,Button,Container, Modal, Form} from 'react-bootstrap';\nimport moment from 'moment';\nimport { API_URL } from '../../utils/constant';\n\nimport styled from 'styled-components';\n\nconst RequestTable = () => {\n    const arr = ['Date Requested','Item Name','Quantity','Quotation']\n    const [allrequest, setrequests] = useState([])\n    // const [open, setOpen] = useState(false);\n    async function fetch(){\n        await axios.get(`${API_URL}/get_purchase_request`, {\n             withCredentials: true\n         }).then((res)=>{\n             console.log(res.data);\n             \n             setrequests(res.data);\n             \n         })\n     } \n    // var requests = []\n    useEffect( () =>{\n       \n        \n    fetch()\n    },[])\n    \n    const [showModal, setShow] = useState(false)\n    const [file, SetFile] = useState(null)\n    const [Info, SetInfo] = useState(\"\")\n\n    \n    const SubmitFile = async (e)=>{\n            \n        e.preventDefault();            \n\n        console.log('File ' , file)\n        // console.log(e.target.file)\n\n\n        // console.log('document', document.getElementById('file').value())\n        \n        if (file) {\n            const formData = new FormData();\n            formData.append('file', file);\n            await axios.post(`${API_URL}/${Info}/upload`, formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }).then((res)=>{\n                if(res.data.code == 200)\n                {\n                    window.flash('File Successfully Submitted')\n                    fetch();\n                }\n                else\n                {\n                    window.flash('Failed To Submit The File', 'danger')\n                }\n            });\n          } else {\n            window.flash('Please select a file to add.', 'danger');\n          }\n        \n        \n        \n        \n        \n    \n    }\n\n    const onChangeHandlerFile=(files)=>{\n        console.log(files)\n        const [uploadedFile] = files.target.files;\n        console.log(uploadedFile)\n        SetFile(uploadedFile)\n\n    }\n   \n\n   \n    // const ModalContent = ()=>{\n       \n    //    function getBase64(e) {\n    //         var file = e.target.files[0]\n    //         let reader = new FileReader()\n    //         reader.readAsDataURL(file)\n    //         reader.onload = () => {\n    //             console.log(reader.result)\n    //             SetFile(reader.result)\n    //         //   this.setState({\n    //         //     imgUpload: reader.result\n    //         //   })\n    //         };\n    //         reader.onerror = function (error) {\n    //           console.log('Error: ', error);\n    //         }\n    //       }\n        \n\n    //     return(\n    //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n    //             <Modal.Header closeButton>\n    //                 <Modal.Title>\n    //                     Details \n    //                 </Modal.Title>\n    //                 </Modal.Header>\n    //                 <Form>    \n\n    //                 <ModalBody>\n                        \n    //                 <input\n    //                 type = 'file'\n    //                 id=\"file\"\n    //                 name = \"file\"\n    //                 value={FileInfo}\n    //                 onChange={(e) => { e.preventDefault(); \n    //                     SetFile(e.target.files[0])\n    //                     // getBase64(e);\n    //                 }}\n    //                 />\n    //                 </ModalBody>\n\n                \n    //             <Modal.Footer>\n    //                 <Btn className = \"btn-success\" type = \"submit\">Submit</Btn>\n    //             </Modal.Footer>\n    //             </Form>\n\n    //         </Modal>\n    //     );\n        \n    \n    // }\n    \n\n\n    return(\n        <>\n         {/* {showModal?\n            <div>\n                <ModalContent/>\n            </div>\n        :null    */}\n        \n\n\n\n     <Container>\n        <TableStyle responsive=\"sm\">\n        <thead>\n            <tr>\n             <th>#</th>\n            {arr.map((_, index) => (\n              <th key={index}>{_}</th>\n            ))}\n            \n          </tr>\n        </thead>\n        <tbody>\n          {allrequest.map((request, index) =>{\n            return(\n            <>\n             <tr key= {index}>\n                <td>{index+1}</td>\n                {/* <td>{request.R_Emp_Name}<br/></td> */}\n                {/* <td>{request.R_Emp_Email}</td> */}\n                <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\n                <td>{request.Item}</td>\n                <td>{request.Quantity}</td>\n                {/* <td>{request.Duration}</td> */}\n                <td>\n\n\n                {/* <a href = \"http://localhost:5000/upload\"><Btn>Upload</Btn></a> */}\n\n                    <Form onSubmit = {SubmitFile}>\n                        <Form.File name = \"file\" onChange = {  onChangeHandlerFile } />\n                        <Btn type=\"submit\" className =\"mt-2 btn btn-md\" onClick= {() => {SetInfo(request._id)}}>Submit</Btn>\n                    </Form>\n                </td>\n            </tr>\n            \n            </>\n            )\n          })}\n        </tbody>\n      </TableStyle>\n      </Container>\n      </>\n    )\n\n\n}\n\n\nexport default RequestTable\n\nconst TableStyle = styled(Table)`\n\nth {background: #1F386B;color : white;}\ntr{\n    cursor:pointer;\n    &:hover{\n        background: lightgray;\n    }\n}\n`;\n\n\nconst Btn = styled(Button)`\n    background :#EFBB20;\n    border: none; \n    &:hover{\n    background: #0e8ccc;\n}`;\n\nconst ModalBody = styled(Modal.Body)`\n\nli{\n    padding:5px;\n}\n\n`;","/home/amir/Desktop/New File/IMS/client/src/components/ManagerRequestTable/ManagerRequestTable.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/storeTable/Store_Table.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/Flash/flashmessage.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":104,"column":7,"nodeType":"143","endLine":104,"endColumn":9,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":82,"column":7,"nodeType":"143","endLine":82,"endColumn":9,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":89,"column":16,"nodeType":"149","messageId":"150","endLine":89,"endColumn":20},{"ruleId":"147","severity":1,"message":"151","line":89,"column":22,"nodeType":"149","messageId":"150","endLine":89,"endColumn":29},{"ruleId":"147","severity":1,"message":"152","line":90,"column":16,"nodeType":"149","messageId":"150","endLine":90,"endColumn":24},{"ruleId":"147","severity":1,"message":"153","line":90,"column":26,"nodeType":"149","messageId":"150","endLine":90,"endColumn":37},{"ruleId":"147","severity":1,"message":"154","line":91,"column":16,"nodeType":"149","messageId":"150","endLine":91,"endColumn":27},{"ruleId":"147","severity":1,"message":"155","line":91,"column":29,"nodeType":"149","messageId":"150","endLine":91,"endColumn":43},{"ruleId":"147","severity":1,"message":"156","line":92,"column":16,"nodeType":"149","messageId":"150","endLine":92,"endColumn":20},{"ruleId":"147","severity":1,"message":"157","line":92,"column":22,"nodeType":"149","messageId":"150","endLine":92,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":240,"column":49,"nodeType":"160","messageId":"161","endLine":240,"endColumn":51},{"ruleId":"162","severity":1,"message":"163","line":44,"column":34,"nodeType":"164","messageId":"165","endLine":44,"endColumn":35},{"ruleId":"147","severity":1,"message":"166","line":30,"column":12,"nodeType":"149","messageId":"150","endLine":30,"endColumn":21},{"ruleId":"147","severity":1,"message":"167","line":30,"column":23,"nodeType":"149","messageId":"150","endLine":30,"endColumn":30},{"ruleId":"168","severity":1,"message":"169","line":53,"column":34,"nodeType":"164","messageId":"170","endLine":53,"endColumn":36},{"ruleId":"147","severity":1,"message":"171","line":220,"column":7,"nodeType":"149","messageId":"150","endLine":220,"endColumn":16},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'CheckUser'. Either include it or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.",["175"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'setname' is assigned a value but never used.","'quantity' is assigned a value but never used.","'setquantity' is assigned a value but never used.","'description' is assigned a value but never used.","'setdescription' is assigned a value but never used.","'type' is assigned a value but never used.","'settype' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'showModal' is assigned a value but never used.","'setShow' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'ModalBody' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [CheckUser]",{"range":"180","text":"181"},"Update the dependencies array to be: [fetch]",{"range":"182","text":"183"},[3082,3084],"[CheckUser]",[2461,2463],"[fetch]"]