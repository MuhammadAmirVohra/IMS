[{"C:\\Users\\amira\\Desktop\\IMS\\client\\src\\index.js":"1","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\Bus.js":"2","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\App.js":"3","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\Authapi.js":"4","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\login\\Login_Form.js":"5","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\logout\\Logout.js":"6","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\purchaseDashboard\\Purchase_dashboard.js":"7","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\managerDashboard\\Manager_dashboard.js":"8","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\hod_dashboard\\Hod_dashboard.js":"9","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\dashboard\\Dashboard.js":"10","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\RequestDetails\\Manager_admin.js":"11","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\RequestDetails\\Accounts_manager.js":"12","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\RequestDetails\\Director.js":"13","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\inventory\\Inventory.js":"14","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\StoreDashboard\\Store_Dashboard.js":"15","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\recieve_items\\Recieve_Items.js":"16","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\issue\\Issue_items.js":"17","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\userInformation\\User_information.js":"18","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\Request_Form\\Request_Form.js":"19","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\utils\\constant.js":"20","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\header\\Header.js":"21","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\header\\Header_pages.js":"22","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\purchaseRequest\\Purchase_request_table.js":"23","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\ManagerRequestTable\\ManagerRequestTable.js":"24","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\track\\Track_request.js":"25","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\Request_Table\\RequestTable.js":"26","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\storeTable\\Store_Table.js":"27","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\Flash\\flashmessage.js":"28","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\stock_report\\Stock_Report.js":"29","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\product_ledger\\Product_Ledger.js":"30","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\return_items\\Return_items.js":"31"},{"size":329,"mtime":1625841269150,"results":"32","hashOfConfig":"33"},{"size":70,"mtime":1626298880915,"results":"34","hashOfConfig":"33"},{"size":14136,"mtime":1626021616347,"results":"35","hashOfConfig":"33"},{"size":91,"mtime":1625841269121,"results":"36","hashOfConfig":"33"},{"size":7280,"mtime":1625841269143,"results":"37","hashOfConfig":"33"},{"size":805,"mtime":1625841269144,"results":"38","hashOfConfig":"33"},{"size":943,"mtime":1625841269145,"results":"39","hashOfConfig":"33"},{"size":961,"mtime":1625843358481,"results":"40","hashOfConfig":"33"},{"size":736,"mtime":1625841269141,"results":"41","hashOfConfig":"33"},{"size":1112,"mtime":1625841269130,"results":"42","hashOfConfig":"33"},{"size":4216,"mtime":1626250019219,"results":"43","hashOfConfig":"33"},{"size":5048,"mtime":1626250579539,"results":"44","hashOfConfig":"33"},{"size":6591,"mtime":1626250168678,"results":"45","hashOfConfig":"33"},{"size":6347,"mtime":1626247549888,"results":"46","hashOfConfig":"33"},{"size":1556,"mtime":1626020332068,"results":"47","hashOfConfig":"33"},{"size":7432,"mtime":1626036432687,"results":"48","hashOfConfig":"33"},{"size":11511,"mtime":1626333443547,"results":"49","hashOfConfig":"33"},{"size":4771,"mtime":1625841269149,"results":"50","hashOfConfig":"33"},{"size":4995,"mtime":1625841269129,"results":"51","hashOfConfig":"33"},{"size":80,"mtime":1626332075963,"results":"52","hashOfConfig":"33"},{"size":942,"mtime":1625841269140,"results":"53","hashOfConfig":"33"},{"size":1149,"mtime":1626333149788,"results":"54","hashOfConfig":"33"},{"size":6398,"mtime":1626249303350,"results":"55","hashOfConfig":"33"},{"size":3375,"mtime":1626248646581,"results":"56","hashOfConfig":"33"},{"size":3087,"mtime":1625841269149,"results":"57","hashOfConfig":"33"},{"size":6110,"mtime":1626248088536,"results":"58","hashOfConfig":"33"},{"size":6286,"mtime":1626249136309,"results":"59","hashOfConfig":"33"},{"size":1107,"mtime":1626299862697,"results":"60","hashOfConfig":"33"},{"size":4416,"mtime":1626085054751,"results":"61","hashOfConfig":"33"},{"size":5522,"mtime":1626079587943,"results":"62","hashOfConfig":"33"},{"size":5828,"mtime":1626297227401,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1ul5s94",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"66"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"66"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"66"},"C:\\Users\\amira\\Desktop\\IMS\\client\\src\\index.js",[],["148","149"],"C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\Bus.js",[],"C:\\Users\\amira\\Desktop\\IMS\\client\\src\\App.js",[],"C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\Authapi.js",[],"C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\login\\Login_Form.js",["150"],"import React, { useEffect, useState } from 'react';\r\nimport 'react-bootstrap'\r\nimport { Form, Button, Container, Row, Col, Card} from 'react-bootstrap';\r\nimport styled  from 'styled-components';\r\nimport axios from 'axios';\r\nimport Header from '../header/Header'\r\nimport { API_URL } from '../../utils/constant';\r\nimport { useHistory } from 'react-router';\r\n// import PropTypes from 'prop-types';\r\nimport AuthApi from '../Authapi'\r\n// import Cookies from 'js-cookie'\r\n// import {ReactPDF} from '@react-pdf/renderer';\r\n// import PdfGenerator from '../PDF/PdfGenerator'\r\n// import Cookies from 'universal-cookie';\r\nimport \"../style.css\"\r\nconst LoginForm = () => {\r\n    // const cookie = new Cookies();\r\n    \r\n    const Auth = React.useContext(AuthApi);\r\n    const history = useHistory();\r\n    \r\n\r\n    const [Credentials, SetCredentials] = useState({\r\n        username : \"\",\r\n        password : \"\"\r\n    });\r\n   const [login,setlogin] = useState(true);\r\n    // Functions\r\n\r\n    const onChangeHandle = (e) => {\r\n        const value = e.target.value;\r\n        // console.log(value);\r\n        SetCredentials({\r\n            ...Credentials,\r\n            [e.target.name] : value\r\n       });\r\n    }\r\n\r\n\r\n    function simulateNetworkRequest() {\r\n        return new Promise((resolve) => setTimeout(resolve, 2000));\r\n      }\r\n      \r\n      function LoadingButton() {\r\n            const [isLoading, setLoading] = useState(false);\r\n          \r\n            useEffect(() => {\r\n              if (isLoading) {\r\n                simulateNetworkRequest().then(() => {\r\n                  setLoading(false);\r\n                });\r\n              }\r\n            \r\n            \r\n        \r\n          \r\n            }, [isLoading]);\r\n\r\n\r\n            \r\n\r\n            const handleClick = () =>{ \r\n                setLoading(true);\r\n                onSubmit();\r\n            };\r\n          \r\n            return (\r\n              <Button className=\"Btn\" \r\n              \r\n                disabled={isLoading}\r\n                onClick={!isLoading ? handleClick : null}\r\n                \r\n              >\r\n                {isLoading ? 'Signing in..' : 'Sign In'}\r\n              </Button>\r\n            );\r\n      }\r\n\r\n\r\n\r\n\r\n    const onSubmit = () => {   \r\n        \r\n        // event.preventDefault()\r\n       \r\n        axios({\r\n            method: \"POST\",\r\n            data: {\r\n                username: Credentials.username,\r\n                password: Credentials.password\r\n            },\r\n            withCredentials: true,\r\n            url: `${API_URL}/login`,\r\n          }).then((res)=>{\r\n            console.log(res.data);      \r\n            if(res.data) \r\n            {\r\n                console.log(res.data)\r\n                // settoken(res.data._id)\r\n               if (res.data.code === 404)\r\n               {\r\n                    Auth.settoken(false);\r\n                    localStorage.setItem('token', false);\r\n                    localStorage.clear();\r\n                    // cookie.remove('token');\r\n                    // cookie.remove('user');\r\n                    setlogin(false)\r\n                    window.flash('Login Failed', 'danger');\r\n\r\n               }\r\n               else\r\n               {\r\n                    Auth.settoken(true);\r\n                    // Cookies.set('user', 'loginTrue')\r\n                    // Auth.setRole(res.data.user.Designation);\r\n                    localStorage.setItem('token', true);\r\n                    localStorage.setItem('user', res.data.user.Designation);\r\n                    // cookie.set(\"token\", true, {path: \"/\"});\r\n                    // cookie.set(\"user\", res.data.user.Designation, {path: \"/\"});\r\n\r\n                    Auth.setRole(res.data.user.Designation);\r\n\r\n                    if(res.data.user.Designation === 'Head')\r\n                    history.push('/hoddashboard'); \r\n                    else if(res.data.user.Designation === 'Purchase')\r\n                    history.push('/purchase');\r\n                    else if(res.data.user.Designation === 'Admin' || res.data.user.Designation === 'Accounts' || res.data.user.Designation === 'Director')\r\n                    history.push('/managerdashboard'); \r\n                    else if(res.data.user.Designation === \"Store\")\r\n                    history.push('/storedashboard')\r\n                    else        \r\n                    history.push('/dashboard');\r\n               }\r\n                 \r\n            }\r\n            else\r\n            {\r\n                console.log('No user found')\r\n            }\r\n        })\r\n        };\r\n        \r\n        const onKeyhandle = (e) => {\r\n          if(e.keyCode  === 13)\r\n          {\r\n            console.log(\"heree\")\r\n              onSubmit()\r\n          }\r\n        }\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n        <Container className=\"MainContainer d-flex justify-content-center align-items-center\">\r\n            <Row>\r\n                <Col className=\"text-center\">\r\n                    <Card className=\"CardStyle\">\r\n                    <Form  onSubmit={onSubmit} >\r\n                        <Card.Header className = \"text-left\" >LOGIN</Card.Header>\r\n                        <Card.Body>\r\n                        <Form.Group className=\"text-left\">\r\n                        <Form.Label>Username : </Form.Label>\r\n                        <Form.Control placeholder=\"Enter Username\" onChange={onChangeHandle} type=\"text\" name=\"username\" value={Credentials.username}/>                \r\n                           \r\n                        </Form.Group>\r\n                        <Form.Group className=\"text-left\">\r\n                            <Form.Label>Password : </Form.Label>\r\n                            <Form.Control onKeyUp={onKeyhandle} placeholder=\"Enter Password\" onChange={onChangeHandle} type=\"password\" name=\"password\" value={Credentials.password} />\r\n                        </Form.Group>\r\n\r\n                    {login===false &&\r\n                    \r\n                    <Card.Text className=\"CardText text-left\">*username or password incorrect</Card.Text>\r\n                    \r\n                    }\r\n\r\n                        <Form.Group className=\"text-right\">\r\n                            {/* <a href=\"#\"> Forgot Password ? </a> */}\r\n                            <LoadingButton />\r\n                        </Form.Group>\r\n                        \r\n                        {/* <Button onClick = {() => { ReactPDF.renderToStream(<PdfGenerator/>); }}> PDF </Button> */}\r\n\r\n                        \r\n                        {/* <PDF /> */}\r\n                        </Card.Body>\r\n                    </Form>   \r\n                    </Card>\r\n                </Col> \r\n            </Row>\r\n\r\n\r\n            \r\n        </Container>  \r\n        </> \r\n    )\r\n    \r\n};\r\n\r\nexport default LoginForm;\r\n\r\n// const CardText = styled(Card.Text)`\r\n// color:red;\r\n// margin-top: -13px;\r\n// font-size: 12px;\r\n// `;\r\n// const CardStyle = styled(Card)`\r\n// background: white;\r\n// box-shadow: 6px 5px 5px rgb(0 0 0 );\r\n//     width: 500px;\r\n//     height: 350px;\r\n   \r\n// `;\r\n// const SigninButton = styled(Button)`\r\n//     background :#EFBB20;\r\n//     border: none; \r\n//     &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n// `;\r\n\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//   height: 100vh;\r\n//   min-height: 100%;\r\n//   min-height: 100vh;\r\n// `;","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\logout\\Logout.js",[],"C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\purchaseDashboard\\Purchase_dashboard.js",["151"],"import RequestTable from '../purchaseRequest/Purchase_request_table'\r\n// import axios from 'axios';\r\n// import {Link} from 'react-router-dom';\r\nimport {Container} from 'react-bootstrap'\r\nimport UserInformation from '../userInformation/User_information.js';\r\nimport styled from 'styled-components';\r\nimport HeaderPages from '../header/Header_pages';\r\nimport \"../style.css\"\r\nconst PurchaseDashboard = () =>{\r\n\r\nreturn(\r\n    <>\r\n    <HeaderPages/>\r\n    <Container className=\"MainContainer\">\r\n    \r\n    <UserInformation />\r\n    <br/>\r\n    <RequestTable/>\r\n    </Container>\r\n    </>\r\n)\r\n\r\n\r\n}\r\n\r\nexport default PurchaseDashboard;\r\n\r\n// const Btn = styled(Button)`\r\n//     background :#EFBB20;\r\n//     border: none; \r\n//     &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n// `;\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//     height: auto;\r\n//     min-height: 100%;\r\n//     min-height: 100vh;\r\n//     margin-top:100px;\r\n// `;","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\managerDashboard\\Manager_dashboard.js",["152"],"import RequestTable from \"../ManagerRequestTable/ManagerRequestTable\";\r\n// import axios from 'axios';\r\n// import {Link} from 'react-router-dom';\r\nimport { Container } from \"react-bootstrap\";\r\nimport UserInformation from \"../userInformation/User_information.js\";\r\nimport styled from \"styled-components\";\r\nimport HeaderPages from \"../header/Header_pages\";\r\nimport \"../style.css\";\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <>\r\n      <HeaderPages />\r\n      <Container className=\"MainContainer\">\r\n        <UserInformation />\r\n        <br />\r\n        <RequestTable />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n\r\n// const Btn = styled(Button)`\r\n//     background :#EFBB20;\r\n//     border: none;\r\n//     &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n// `;\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//     height: auto;\r\n//     min-height: 100%;\r\n//     min-height: 100vh;\r\n//     margin-top:100px;\r\n// `;\r\n","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\hod_dashboard\\Hod_dashboard.js",["153"],"import RequestTable from '../Request_Table/RequestTable'\r\n// import axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button, Container} from 'react-bootstrap'\r\nimport UserInformation from '../userInformation/User_information.js';\r\nimport styled from 'styled-components';\r\nimport HeaderPages from '../header/Header_pages';\r\nimport '../style.css'\r\nconst Hod_dashboard = () =>{\r\n\r\nreturn(\r\n    <>\r\n    <HeaderPages/>\r\n    <Container className =\"MainContainer\">\r\n    \r\n    <UserInformation />\r\n    \r\n    <Link to=\"/dashboard\"> <Button className=\"Btn btn btn-md mt-4 mb-4 float-right\"> Requisition Form </Button> </Link>\r\n    \r\n    <RequestTable/>\r\n    </Container>\r\n    </>\r\n)\r\n\r\n\r\n}\r\n\r\nexport default Hod_dashboard;\r\n\r\n","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\dashboard\\Dashboard.js",["154"],"// import axios from 'axios';\r\nimport React from 'react';\r\nimport { Col, Container, Row} from 'react-bootstrap';\r\nimport RequestForm from '../Request_Form/Request_Form.js'\r\nimport HeaderPg from '../header/Header_pages'\r\nimport styled from 'styled-components';\r\nimport UserInfo from '../userInformation/User_information.js';\r\nimport TrackRequest from '../track/Track_request'\r\n\r\n\r\nimport \"../style.css\"\r\n\r\n\r\nconst Dashboard = () => {\r\n    \r\n    return(  \r\n\r\n    <>\r\n        <HeaderPg />\r\n        <Container className=\"MainContainer\">\r\n        <Row >\r\n            <Col>            \r\n                <UserInfo/>\r\n                <br/>\r\n               <TrackRequest/>\r\n\r\n            </Col>\r\n            <Col className=\"Row1\">\r\n                <h1 className=\"ml-2\">Requisition Form: </h1>\r\n                <RequestForm />\r\n            </Col>\r\n        </Row>\r\n       </Container>\r\n    </>        \r\n\r\n)\r\n    \r\n\r\n};\r\n\r\nexport default Dashboard;\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//     height: auto;\r\n//     min-height: 100%;\r\n//     min-height: 100vh;\r\n//     margin-top:100px;\r\n// `;\r\n","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\RequestDetails\\Manager_admin.js",["155"],"import HeaderPages from '../header/Header_pages';\r\nimport {Card, Form,Container, Button} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\nimport { API_URL } from '../../utils/constant';\r\nimport download from 'downloadjs';\r\nimport {useHistory} from 'react-router';\r\nimport '../style.css'\r\nconst ManagerAdmin = () =>{ \r\n\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [admin_comment, set_admin] = useState(\"\");\r\n    const [request, set_request] = useState({});\r\n    const [comment, set_comment] = useState({});\r\n    const [department, setDepartment] = useState(\"\");\r\n\r\n    console.log(\"Params \" , id);\r\n    \r\n    useEffect (() =>{\r\n        axios.get(`${API_URL}/` + id + '/adminrequest')\r\n        .then(\r\n            (res) => {\r\n                // setDetails(res.data)\r\n                set_request(res.data.request)\r\n                setDepartment(res.data.request.R_Emp_Dept.Dept_Name)\r\n                set_comment(res.data.comment)\r\n                console.log(res.data) \r\n        \r\n            } \r\n        )\r\n    },[id])\r\n    \r\n    const SubmitComment = ()=>{\r\n        axios.post(`${API_URL}/submitadmin`, { id : id, comment : admin_comment }).then((res)=>{\r\n            if(res.data.code === 200)\r\n            { \r\n                console.log('Comment Added')\r\n                history.push('/managerdashboard')\r\n            }\r\n            else if(res.data.code === 404)\r\n            { \r\n                window.flash('Failed to submit comment', 'danger')\r\n                // console.log('Comment Added')\r\n                // history.push('/managerdashboard')\r\n            }\r\n        })\r\n    }\r\n    \r\n\r\n\r\n\r\n    const Download = async ()=>{\r\n        await axios.get(`${API_URL}/${id}/download`, {\r\n            responseType: 'blob'\r\n          }).then((res)=>{\r\n            download(res.data, 'quotation', 'pdf');\r\n          })\r\n    }\r\n\r\n    return(\r\n        \r\n        <>\r\n        <HeaderPages/>\r\n        <Container className=\"MainContainer\">\r\n\r\n        <Card>\r\n            <Card.Header>\r\n                Request Details\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Card.Title><strong>Name: </strong>{request.R_Emp_Name}</Card.Title>\r\n                <Card.Title><strong>Email: </strong>{request.R_Emp_Email}</Card.Title>\r\n                <Card.Title><strong>Department: </strong>{department}</Card.Title>\r\n                <Card.Title><strong>Item: </strong>{request.Item}</Card.Title>\r\n                <Card.Title><strong>Duration: </strong>{request.Duration}</Card.Title>\r\n                <Card.Title><strong>Quantity: </strong>{request.Quantity}</Card.Title>\r\n                <Card.Title><strong>Reason : </strong>{request.Reason}</Card.Title>\r\n                <Card.Title><strong>Date Requested </strong>{moment(request.Added).format('Do MMMM YYYY')}</Card.Title>\r\n                <Card.Title><strong>Accounts Manager Comments : </strong>{comment.Comment_Accounts}</Card.Title>\r\n                <Btn onClick={Download}>Download Quotation</Btn>\r\n                <Form className=\"mt-4\" onSubmit={SubmitComment}>\r\n                    <Form.Group>\r\n                        <CardTitle>Add Comments<span>*</span></CardTitle>\r\n                        <Form.Control as=\"textarea\" row={5} value = {admin_comment} onChange = {(e) => { set_admin(e.target.value) }} required></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Btn type=\"submit\" className=\"btn btn-md float-right\"  >Submit</Btn>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n        </Container>\r\n        \r\n       </>\r\n        \r\n    );\r\n\r\n}\r\n\r\nexport default ManagerAdmin;\r\nconst MainContainer = styled(Container)`\r\n    width: 100%;\r\n    height: auto;\r\n    min-height: 100%;\r\n    min-height: 100vh;\r\n    margin-top:100px;\r\n`;\r\n\r\n\r\nconst Btn = styled(Button)`\r\n    background :#EFBB20;\r\n    border: none; \r\n    &:hover{\r\n    background: #0e8ccc;\r\n}`;\r\n\r\nconst CardTitle = styled(Card.Title)`\r\nspan{\r\n    color : red;\r\n}\r\n`;\r\n\r\n","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\RequestDetails\\Accounts_manager.js",["156"],"import HeaderPages from '../header/Header_pages';\r\nimport {Card, Form,Container, Button} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\nimport download from 'downloadjs';\r\nimport { API_URL } from '../../utils/constant';\r\nimport {useHistory} from 'react-router';\r\nimport '../style.css'\r\nconst Account_Manager = () =>{ \r\n\r\n    const [comments, set_comments] = useState(\"\")\r\n    const  { id } = useParams();\r\n    const history = useHistory();\r\n    const [details, setDetails] = useState({});\r\n    const [department, setDepartment] = useState(\"\");\r\n    // const [path, setPath] = useState(\"\");\r\n    console.log(\"Params \" , id);\r\n    useEffect (() =>{\r\n    axios.get(`${API_URL}/` + id + '/accountsrequest')\r\n    .then(\r\n        (res) => {\r\n            setDetails(res.data)\r\n            setDepartment(res.data.R_Emp_Dept.Dept_Name)\r\n            console.log('Request : ' + res.data) \r\n       \r\n        } \r\n    )\r\n    },[id])\r\n    \r\n    const SubmitComment = ()=>{\r\n        axios.post(`${API_URL}/submitaccounts`, { id : id, comment : comments }).then((res)=>{\r\n                if(res.data.code === 200)\r\n                { \r\n                    console.log('Comment Added')\r\n                    history.push('/managerdashboard')\r\n                    window.flash('Successfully Added Comment')\r\n\r\n                }\r\n                else if(res.data.code === 404)\r\n                { \r\n                    window.flash('Failed to submit comment', 'danger')\r\n                    // console.log('Comment Added')\r\n                    // history.push('/managerdashboard')\r\n                }\r\n        })\r\n    }\r\n    \r\n    const SendBack = ()=>{\r\n        axios.post(`${API_URL}/sendbacktopurchase`, { id : id, comment : comments }).then((res)=>{\r\n                if(res.data.code === 200)\r\n                { \r\n                    console.log('Comment Added')\r\n                    history.push('/managerdashboard')\r\n                    window.flash('Sended Back to Purchase Department')\r\n\r\n                }\r\n                else if(res.data.code === 404)\r\n                { \r\n                    window.flash('Failed to Send Back', 'danger')\r\n                    // console.log('Comment Added')\r\n                    // history.push('/managerdashboard')\r\n                }\r\n        })\r\n    }\r\n    \r\n\r\n\r\n    const Download = async ()=>{\r\n        await axios.get(`${API_URL}/${id}/download`, {\r\n            responseType: 'blob'\r\n          }).then((res)=>{\r\n            download(res.data, 'quotation', 'pdf');\r\n          })\r\n    }\r\n    \r\n\r\n    \r\n    return(\r\n        \r\n        <>\r\n        <HeaderPages/>\r\n        <Container className = \"MainContainer\">\r\n\r\n        <Card>\r\n            <Card.Header>\r\n                Request Details\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Card.Title><strong>Name: </strong>{details.R_Emp_Name}</Card.Title>\r\n                <Card.Title><strong>Email: </strong>{details.R_Emp_Email}</Card.Title>\r\n                <Card.Title><strong>Department: </strong>{department}</Card.Title>\r\n                <Card.Title><strong>Item: </strong>{details.Item}</Card.Title>\r\n                <Card.Title><strong>Duration: </strong>{details.Duration}</Card.Title>\r\n                <Card.Title><strong>Quantity: </strong>{details.Quantity}</Card.Title>\r\n                <Card.Title><strong>Reason : </strong>{details.Reason}</Card.Title>\r\n                <Card.Title><strong>Date Requested </strong>{moment(details.Added).format('Do MMMM YYYY')}</Card.Title>\r\n                \r\n                <Button className = \"Btn\" onClick={Download}>Download Quotation</Button>\r\n                <Button className = \"ml-3 btn-danger\" onClick={SendBack}>Send Back to Purchase</Button>\r\n                \r\n                <Form className=\"mt-4\" onSubmit={SubmitComment}>\r\n                    <Form.Group>\r\n                        <Card.Title className=\"CardTitle\">Add Comments<span>*</span></Card.Title>\r\n                        <Form.Control placeholder=\"Enter Comments\" as=\"textarea\" row={5} value ={comments} onChange = { (e) => { set_comments(e.target.value) }} required></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" className=\"Btn btn btn-md float-right\"  >Submit</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n        </Container>\r\n        \r\n       </>\r\n        \r\n    );\r\n\r\n}\r\n\r\nexport default Account_Manager;\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//     height: auto;\r\n//     min-height: 100%;\r\n//     min-height: 100vh;\r\n//     margin-top:100px;\r\n// `;\r\n\r\n\r\n// const Btn = styled(Button)`\r\n//     background :#EFBB20;\r\n//     border: none; \r\n//     &:hover{\r\n//     background: #0e8ccc;\r\n// }`;\r\n\r\n// const CardTitle = styled(Card.Title)`\r\n// span{\r\n//     color : red;\r\n// }\r\n// `;","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\RequestDetails\\Director.js",["157"],"import HeaderPages from '../header/Header_pages';\r\nimport {Card,Container, Button} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\n// import Pdf from \"react-to-pdf\";\r\nimport {useHistory} from 'react-router';\r\n// import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { API_URL } from '../../utils/constant';\r\nimport download from 'downloadjs';\r\nimport '../style.css'\r\n\r\nconst Director = () =>{ \r\n        \r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [details, setDetails] = useState({request : {}, comment : []});\r\n    const [Department, setDepartment] = useState(\"\");\r\n\r\n    console.log(\"Params \" , id);\r\n    const ref = React.createRef();\r\n\r\n    // const PDF =()=>{\r\n    //     axios.get(`${API_URL}/pdf`).then((res)=>{\r\n    //         console.log(res.data)\r\n    //     }) \r\n    // }\r\n    // const [req_id, set_req_id] = useState(\"\")\r\n    useEffect (() =>{\r\n        axios.get(`${API_URL}/` + id + '/directorrequest')\r\n        .then(\r\n            (res) => {\r\n                setDetails(res.data)\r\n                setDepartment(res.data.request.R_Emp_Dept.Dept_Name)\r\n                console.log(id)\r\n                // console.log(details.request._id) \r\n        \r\n            } \r\n        )\r\n    },[id])\r\n    \r\n    const Accept = ()=>{\r\n        axios.post(`${API_URL}/`+id+'/acceptdirector').then((res)=>{\r\n                if(res.status === 200)\r\n                { \r\n                    console.log('Requested Accepted');\r\n                    window.flash('Requested Accepted');\r\n                    history.push('/managerdashboard');\r\n\r\n                }\r\n                else\r\n                {\r\n                    console.log('Requested Failed to Accept');\r\n                    window.flash('Requested Failed to Accept', 'danger');\r\n                }\r\n        })\r\n    }\r\n    \r\n\r\n    const Reject = ()=>{\r\n        axios.post(`${API_URL}/`+id+'/rejectdirector', {\r\n            name : details.request.R_Emp_Name,\r\n            email : details.request.R_Emp_Email,\r\n            item : details.request.Item\r\n        }).then((res)=>{\r\n            if(res.status === 200)\r\n            { \r\n                console.log('Requested Rejected');\r\n                window.flash('Requested Rejected');\r\n                history.push('/managerdashboard');\r\n\r\n            }\r\n            else\r\n            {\r\n                console.log('Requested Failed to Reject');\r\n                window.flash('Requested Failed to Reject', 'danger');\r\n            }\r\n        })\r\n    }\r\n\r\n    const PDF = async()=>{\r\n        fetch(`${API_URL}/${id}/pdf`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              filename: \"report\",\r\n              content: \"Testing Content\"\r\n            }),\r\n          }).then(async res => {\r\n            if (res.status === 200) {\r\n              const blob = await res.blob();\r\n              const file = new Blob(\r\n                [blob], \r\n                {type: 'application/pdf'},\r\n                {name : 'report.pdf'}\r\n              );\r\n              console.log(file)\r\n              \r\n              //Build a URL from the file\r\n              const fileURL = URL.createObjectURL(file);\r\n              //Open the URL on new Window\r\n              console.log(fileURL)\r\n            //   download(res.data, details.request.Item + '_report', 'pdf');\r\n              window.open(fileURL);  \r\n            }\r\n          })\r\n    }\r\n\r\n    const Download = async ()=>{\r\n        await axios.get(`${API_URL}/${id}/download`, {\r\n            responseType: 'blob'\r\n          }).then((res)=>{\r\n            download(res.data, details.request.Item + '_quotation', 'pdf');\r\n          })\r\n    }\r\n\r\n\r\n    return(\r\n        \r\n        <>\r\n        <HeaderPages/>\r\n        <Container className=\"MainContainer\">\r\n\r\n        <Card className=\"Card1\">\r\n            <Card.Header>\r\n                Request Details\r\n            </Card.Header>\r\n            <Card.Body ref = {ref}>\r\n                <Card.Title><strong>ID: </strong>{id}</Card.Title>\r\n                <Card.Title><strong>Name: </strong>{details.request.R_Emp_Name}</Card.Title>\r\n                <Card.Title><strong>Email: </strong>{details.request.R_Emp_Email}</Card.Title>\r\n                <Card.Title><strong>Department: </strong>{Department}</Card.Title>\r\n                <Card.Title><strong>Item: </strong>{details.request.Item}</Card.Title>\r\n                <Card.Title><strong>Duration: </strong>{details.request.Duration}</Card.Title>\r\n                <Card.Title><strong>Quantity: </strong>{details.request.Quantity}</Card.Title>\r\n                <Card.Title><strong>Reason : </strong>{details.request.Reason}</Card.Title>\r\n                <Card.Title><strong>Date Requested </strong>{moment(details.request.Added).format('Do MMMM YYYY')}</Card.Title>\r\n                <Card.Title><strong>Accounts Manager Comments : </strong>{details.comment.Comment_Accounts}</Card.Title>\r\n                <Card.Title><strong>Admin Manager Comments : </strong>{details.comment.Comment_Admin}</Card.Title>\r\n                <Button className = \"Btn\" onClick={Download}>Download Quotation</Button>\r\n              \r\n            </Card.Body>\r\n            <Card.Footer className=\"\">\r\n            {/* <Pdf targetRef={ref} filename=\"code-example.pdf\">\r\n                 {({ toPdf }) => <Btn onClick={ () => { toPdf()}}>Generate Pdf</Btn>}\r\n            </Pdf> */}\r\n           <Button className = \"btn-danger ml-4 float-right\" onClick={Reject}>Reject</Button>\r\n           <Button className = \"btn-success ml-4 float-right\" onClick={Accept}>Accept</Button>\r\n            \r\n            \r\n           {/* <Button className = \"Btn float-right\"><a href = {`${API_URL}/${id}/pdf`}>Generate Pdf</a></Button> */}\r\n           <Button className = \"Btn float-right\" onClick={PDF}>Generate PDF</Button>\r\n            \r\n            </Card.Footer>\r\n        </Card>\r\n        </Container>\r\n        \r\n       </>\r\n        \r\n    );\r\n\r\n}\r\n\r\nexport default Director;\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//     height: auto;\r\n//     min-height: 100%;\r\n//     min-height: 100vh;\r\n//     margin-top:100px;\r\n// `;\r\n\r\n\r\n// const Btn = styled(Button)`\r\n//     background :#EFBB20;\r\n//     border: none; \r\n//     &:hover{\r\n//     background: #0e8ccc;\r\n//     a{\r\n//         color: white;\r\n//         text-decoration : none;\r\n//     }\r\n// }`;\r\n","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\inventory\\Inventory.js",["158"],"import React , { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {Row,Table,Button,Container, Modal, Form} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport MainHeader from '../header/Header_pages'\r\nimport { API_URL } from '../../utils/constant';\r\nimport \"../style.css\"\r\n\r\n\r\nconst Inventory = () => {\r\n    const arr = ['Name','Type','Description','Quantity']\r\n    const [items, setitems] = useState([])\r\n\r\n    useEffect( () =>{\r\n       \r\n        async function fetch(){\r\n       await axios.get(`${API_URL}/storeitem`, {\r\n            withCredentials: true\r\n        }).then((res)=>{\r\n            console.log(res.data);\r\n            \r\n            setitems(res.data);\r\n            \r\n        })\r\n    } \r\n    fetch()\r\n    },[])\r\n\r\n\r\n    const [showModal, setShow] = useState(false)\r\n    const [ModalInfo, SetInfo] = useState({})\r\n    const ModalContent = ()=>{\r\n       \r\n        const [name, setname] = useState(ModalInfo.Item_ID.Item_Name)\r\n        const [quantity, setquantity] = useState(ModalInfo.Quantity)\r\n        const [description, setdescription] = useState(ModalInfo.Item_ID.Item_Description)\r\n        const [type, settype] = useState(ModalInfo.Item_ID.Item_Type)\r\n \r\n        const UpdateRecord = (event)=>{\r\n            event.preventDefault()\r\n            \r\n         axios.post(`${API_URL}/` + ModalInfo.Item_ID._id + '/updateitem'\r\n         ,{ id : ModalInfo.Item_ID._id, name : name, quantity : quantity, description : description, type : type })\r\n             .then(\r\n             (res) => {\r\n                 setShow(false);\r\n                 console.log(res) \r\n                 window.flash('Record Updated')\r\n                 setitems(res.data);\r\n             } \r\n         )\r\n         \r\n        }\r\n \r\n \r\n \r\n         return(\r\n             <Modal show = {showModal} onHide ={() => {setShow(false)}}>\r\n                 <Modal.Header closeButton>\r\n                     <Modal.Title>\r\n                         Details \r\n                     </Modal.Title>\r\n                     </Modal.Header>\r\n                   <Form onSubmit = {UpdateRecord}>  \r\n \r\n                     <Modal.Body className=\"ModalBody\">\r\n \r\n                 <Form.Group>\r\n                     <Form.Control type=\"text\" value={name} placeholder = \"Item Name\" onChange={(event)=>{ setname(event.target.value)}} />\r\n                 </Form.Group>\r\n \r\n                 <Form.Group>\r\n                     <Form.Control type=\"number\" value={quantity} placeholder = \"Item Quantity\" onChange={(event)=>{ setquantity(event.target.value) }} />\r\n                 </Form.Group>\r\n                 \r\n \r\n                 <Form.Group>\r\n                     <Form.Control type=\"text\" value={type} placeholder = \"Item Type\" onChange={ (event)=>{ settype(event.target.value) }} />\r\n                 </Form.Group>\r\n                 \r\n \r\n                 <Form.Group>\r\n                     <Form.Control type=\"text\" value={description} placeholder = \"Item Description\" onChange={ (event)=>{ setdescription(event.target.value) }} />\r\n                 </Form.Group>\r\n                 \r\n                 </Modal.Body>\r\n \r\n                  \r\n                <Modal.Footer>\r\n                    <Button type =\"submit\" className = \"Btn btn-success\">Update</Button>              \r\n                </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n        \r\n\r\n    }\r\n    \r\n\r\n    \r\n    const [itemName, setItemName] = useState(\"\")\r\n    return(\r\n        <>\r\n        {showModal?\r\n            <div>\r\n                <ModalContent/>\r\n            </div>\r\n        :null   \r\n        }\r\n\r\n        \r\n   \r\n    <MainHeader/>\r\n    \r\n     \r\n    <Container className=\"MainContainer\">\r\n        <Row className = \"Row1\">\r\n     <h1>Store Inventory</h1>\r\n\r\n        </Row>\r\n     <Row className=\"Row1 float-right\" >\r\n        \r\n    <Form>\r\n         \r\n         <Form.Group className=\"FormGroup\">\r\n           \r\n             <Form.Control type=\"text\" placeholder=\"Search\" name=\"searchbar\" value={itemName} onChange={(event)=>{ setItemName(event.target.value)}} >\r\n                 \r\n            \r\n             </Form.Control>\r\n            \r\n         </Form.Group>\r\n         \r\n    </Form>       \r\n        \r\n            \r\n      \r\n     \r\n     \r\n     </Row>\r\n \r\n        \r\n         { items.length > 0 &&\r\n        <Table className=\"TableStyle\" responsive>\r\n        <thead>\r\n            <>\r\n            <tr>\r\n             <th>#</th>\r\n            {arr.map((_, index) => (\r\n              <th key={index}>{_}</th>\r\n            ))}\r\n            <th></th>\r\n          </tr>\r\n</>\r\n        </thead>\r\n        <tbody>\r\n          {items.map((item, index) =>{\r\n            if (item.Item_ID.Item_Name.toLowerCase().includes(itemName.toLowerCase()) || item.Item_ID.Item_Description.toLowerCase().includes(itemName.toLowerCase()) )\r\n            return(\r\n            <>\r\n           <tr>\r\n                <td>{index+1}</td>\r\n                <td>{item.Item_ID.Item_Name}<br/></td>\r\n                <td>{item.Item_ID.Item_Type}</td>\r\n                <td>{item.Item_ID.Item_Description}</td>\r\n                <td>{item.Quantity}</td>\r\n                <td><Button className=\"Btn\" onClick = {()=>{ SetInfo(item); setShow(true); }} >Update</Button></td>\r\n                    \r\n               \r\n            </tr>\r\n            \r\n           \r\n            </>\r\n            )\r\n          else return(<tr></tr>)\r\n          \r\n          \r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      \r\n      }\r\n      {\r\n          items.length === 0 && <h2>No Items.</h2>\r\n      }\r\n        \r\n      </Container>\r\n      </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Inventory;\r\n\r\n// const Row1 = styled(Row)`\r\n//     padding:100px 16px 0px 0px;\r\n    \r\n\r\n\r\n// `;\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//   height: auto;\r\n//   min-height: 100%;\r\n//   min-height: 100vh;\r\n// `;\r\n// const TableStyle = styled(Table)`\r\n// th {background: #1F386B; color:white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n// const Btn = styled(Button)`\r\n// background :#EFBB20;\r\n// margin-left : 10px;\r\n// border: none; \r\n// &:hover{\r\n// background: #0e8ccc;\r\n// }\r\n// `;\r\n\r\n// const ModalBody = styled(Modal.Body)`\r\n\r\n// li{\r\n//     padding:5px;\r\n// }\r\n\r\n// `;\r\n\r\n\r\n// const FormGroup = styled(Form.Group)`\r\n// display : flex\r\n\r\n// `;","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\StoreDashboard\\Store_Dashboard.js",["159"],"import RequestTable from '../storeTable/Store_Table'\r\n// import axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button, Container} from 'react-bootstrap'\r\nimport UserInformation from '../userInformation/User_information.js';\r\nimport styled from 'styled-components';\r\nimport HeaderPages from '../header/Header_pages';\r\nimport '../style.css'\r\n\r\nconst StoreDashboard = () =>{\r\n\r\nreturn(\r\n    <>\r\n    <HeaderPages/>\r\n    <Container className =\"MainContainer\" >\r\n    \r\n    <UserInformation />\r\n    \r\n    \r\n    <Link to=\"/inventory\"> <Button className=\"btn Btn btn-md mt-4 mb-4 float-right\"> Inventory </Button> </Link>\r\n    <Link to=\"/recieveitems\"> <Button className=\"btn Btn btn-md mt-4 mb-4 mr-2 float-right\"> Recieve Item </Button> </Link>\r\n    <Link to=\"/returnitem\"> <Button className=\"btn Btn btn-md mt-4 mb-4 mr-2 float-right\"> Return Item </Button> </Link>\r\n    <Link to=\"/productledger\"> <Button className=\"btn Btn btn-md mt-4 mb-4 mr-2 float-right\"> Product Ledger </Button> </Link>\r\n    <Link to=\"/stockreport\"> <Button className=\"btn Btn btn-md mt-4 mb-4 mr-2 float-right\"> Stock Report </Button> </Link>\r\n    \r\n    \r\n    <RequestTable/>\r\n    </Container>\r\n    </>\r\n)\r\n\r\n\r\n}\r\n\r\nexport default StoreDashboard;\r\n\r\n// const Btn = styled(Button)`\r\n//     background :#EFBB20;\r\n//     border: none; \r\n//     &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n// `;\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//     height: auto;\r\n//     min-height: 100%;\r\n//     min-height: 100vh;\r\n//     margin-top:100px;\r\n// `;","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\recieve_items\\Recieve_Items.js",["160"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Table, Button, Container, Modal, Form } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport MainHeader from '../header/Header_pages'\r\nimport moment from 'moment';\r\nimport { API_URL } from '../../utils/constant';\r\nimport '../style.css'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst RecieveItems = () => {\r\n    const arr = ['Person Name', 'Item Name', 'Quantity', 'Requested Date']\r\n    const [allRequests, setRequests] = useState([])\r\n    const interval_id = useRef(null);\r\n    const history = useHistory()\r\n    async function fetch() {\r\n        await axios.get(`${API_URL}/recieveitem`, {\r\n            withCredentials: true\r\n        }).then((res) => {\r\n            console.log(res.data);\r\n\r\n            setRequests(res.data);\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch()\r\n\r\n        interval_id.current = setInterval(() => { fetch() }, 3000);\r\n        return function cleanup() {\r\n            clearInterval(interval_id.current);\r\n        }\r\n    }, [])\r\n\r\n\r\n    const [showModal, setShow] = useState(false)\r\n    const [ModalInfo, SetInfo] = useState({})\r\n    const ModalContent = () => {\r\n\r\n        const [name, setname] = useState(\"\")\r\n        const [quantity, setquantity] = useState(\"\")\r\n        const [description, setdescription] = useState(\"\")\r\n        const [type, settype] = useState(\"\")\r\n\r\n        const UpdateRecord = (event) => {\r\n            event.preventDefault()\r\n\r\n            axios.post(`${API_URL}/` + 'recieveitem'\r\n                , { id: ModalInfo._id, name: name, quantity: quantity, description: description, type: type })\r\n                .then(\r\n                    (res) => {\r\n                        setShow(false);\r\n                        console.log(res)\r\n                        window.flash('Record Updated')\r\n                        history.push('/storedashboard')\r\n                        // fetch()\r\n                    }\r\n                )\r\n\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <Modal show={showModal} onHide={() => {\r\n                fetch();\r\n                interval_id.current = setInterval(() => { fetch() }, 3000);\r\n                setShow(false)\r\n            }}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Add Item\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Form onSubmit={UpdateRecord}>\r\n\r\n                    <Modal.Body className=\"ModalBody\">\r\n\r\n                        <Form.Group>\r\n                            <Form.Control type=\"text\" value={name} placeholder=\"Item Name\" onChange={(event) => { setname(event.target.value) }} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Control type=\"number\" value={quantity} placeholder=\"Item Quantity\" onChange={(event) => { setquantity(event.target.value) }} />\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group>\r\n                            <Form.Control type=\"text\" value={type} placeholder=\"Item Type\" onChange={(event) => { settype(event.target.value) }} />\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group>\r\n                            <Form.Control type=\"text\" value={description} placeholder=\"Item Description\" onChange={(event) => { setdescription(event.target.value) }} />\r\n                        </Form.Group>\r\n\r\n                    </Modal.Body>\r\n\r\n\r\n                    <Modal.Footer>\r\n                        <Button type=\"submit\" className=\"Btn btn-success\">Add to the Inventory</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const [itemName, setItemName] = useState(\"\")\r\n    return (\r\n        <>\r\n            {showModal ?\r\n                <div>\r\n                    <ModalContent />\r\n                </div>\r\n                : null\r\n            }\r\n\r\n\r\n\r\n            <MainHeader />\r\n\r\n\r\n            <Container className=\"MainContainer\">\r\n                <Row className=\"Row1\">\r\n                    <h1>Recieve Items</h1>\r\n                </Row>\r\n                <Row className=\"Row1 float-right\" >\r\n\r\n                    <Form>\r\n\r\n                        <FormGroup>\r\n\r\n                            <Form.Control type=\"text\" placeholder=\"Search\" name=\"searchbar\" value={itemName} onChange={(event) => { setItemName(event.target.value) }} >\r\n\r\n\r\n                            </Form.Control>\r\n\r\n                        </FormGroup>\r\n\r\n                    </Form>\r\n\r\n\r\n\r\n\r\n\r\n                </Row>\r\n\r\n\r\n                {allRequests.length > 0 &&\r\n                    <Table className=\"TableStyle\" responsive>\r\n                        <thead>\r\n                            <>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    {arr.map((_, index) => (\r\n                                        <th key={index}>{_}</th>\r\n                                    ))}\r\n                                    <th></th>\r\n                                </tr>\r\n                            </>\r\n                        </thead>\r\n                        <tbody>\r\n                            {allRequests.map((request, index) => {\r\n                                if (request.Item.toLowerCase().includes(itemName.toLowerCase()))\r\n                                    return (\r\n                                        <>\r\n                                            <tr>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{request.R_Emp_Name}<br /></td>\r\n                                                <td>{request.Item}</td>\r\n                                                <td>{request.Quantity}</td>\r\n                                                <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\r\n                                                <td><Button className=\"Btn\" onClick={() => { clearInterval(interval_id.current); SetInfo(request); setShow(true); }} >Recieved</Button></td>\r\n\r\n\r\n                                            </tr>\r\n\r\n\r\n                                        </>\r\n                                    )\r\n                                else return (<tr></tr>)\r\n\r\n\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                }\r\n                {\r\n                    allRequests.length === 0 && <h2>No Requests.</h2>\r\n                }\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default RecieveItems;\r\n\r\n// const Row1 = styled(Row)`\r\n//     padding:100px 16px 0px 0px;\r\n\r\n\r\n\r\n// `;\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//   height: auto;\r\n//   min-height: 100%;\r\n//   min-height: 100vh;\r\n// `;\r\n// const TableStyle = styled(Table)`\r\n// th {background: #1F386B; color:white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n// const Btn = styled(Button)`\r\n// background :#EFBB20;\r\n// margin-left : 10px;\r\n// border: none; \r\n// &:hover{\r\n// background: #0e8ccc;\r\n// }\r\n// `;\r\n\r\n// const ModalBody = styled(Modal.Body)`\r\n\r\n// li{\r\n//     padding:5px;\r\n// }\r\n\r\n// `;\r\n\r\n\r\nconst FormGroup = styled(Form.Group)`\r\ndisplay : flex\r\n\r\n`;","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\issue\\Issue_items.js",["161","162"],"C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\userInformation\\User_information.js",["163"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {Card} from 'react-bootstrap';\r\n// import Authapi from '../Authapi'\r\nimport { useHistory } from 'react-router';\r\n// import Cookies from 'js-cookie'\r\nimport styled from 'styled-components';\r\nimport {Button, Collapse, Form} from 'react-bootstrap';\r\nimport {API_URL} from '../../utils/constant'\r\nimport '../style.css';\r\n\r\nconst UserInformation = () => {\r\n   \r\n    const [Credentials, SetCredentials] = useState({\r\n        name : \"\",\r\n        username : \"\",\r\n        password : \"\"\r\n    });\r\n\r\n    const [Profile, setProfile] = useState({\r\n        emp_Name: \"\",\r\n        designation: \"\",\r\n        department: \"\"\r\n    })\r\n    const [open, setOpen] = useState(false)\r\n    const [id, Setid] = useState({})\r\n    const history = useHistory();\r\n\r\n    useEffect(() =>{\r\n     \r\n\r\n        axios.get(`${API_URL}/dashboard1`, {\r\n            withCredentials: true\r\n        }).then((res)=>{\r\n            if(res.data)\r\n            { \r\n                console.log(res.data)\r\n                const user = res.data;\r\n                Setid(res.data.user._id);\r\n                SetCredentials({\r\n                    name : res.data.user.Emp_Name,\r\n                    username : res.data.user.Username,\r\n                    password : res.data.user.Password\r\n                })\r\n                console.log(res.data.user);\r\n                setProfile({\r\n                    emp_Name: user.user.Emp_Name,\r\n                    designation: user.user.Designation,\r\n                    department: user.department.Dept_Name\r\n                })\r\n            }\r\n            else\r\n            { \r\n                history.push('/logout')\r\n            }\r\n            \r\n        })\r\n\r\n    },[history])\r\n    const onChangeHandle = (e) => {\r\n        const value = e.target.value;\r\n        console.log(value);\r\n        SetCredentials({\r\n            ...Credentials,\r\n            [e.target.name] : value\r\n       });\r\n       \r\n    }\r\n    const onSubmit = (event) => {   \r\n        \r\n        event.preventDefault()\r\n        axios({\r\n            method: \"POST\",\r\n            data: {\r\n                id : id,\r\n                name: Credentials.name,\r\n                username: Credentials.username,\r\n                password: Credentials.password\r\n            },\r\n            withCredentials: true,\r\n            url: `${API_URL}/update_profile`,\r\n          }).then((res)=>{\r\n            setProfile({\r\n                ...Profile,\r\n                emp_Name: Credentials.name,\r\n            })\r\n            setOpen(false)\r\n        })\r\n        };\r\n    \r\n\r\n    return(  \r\n    <>\r\n    \r\n\r\n\r\n    <Card className=\"Card1\">\r\n        <Card.Header>User Information</Card.Header>\r\n            <Card.Body>\r\n\r\n                { Profile &&\r\n                <>\r\n                    <Card.Title><strong>User:  </strong>{Profile.emp_Name}</Card.Title>\r\n                    <Card.Title><strong>Designation:</strong> {Profile.designation}</Card.Title>  \r\n                    <Card.Title><strong>Department:</strong> {Profile.department}</Card.Title>  \r\n                    <Button\r\n                        className=\"Btn mb-4\"\r\n                        onClick={() => setOpen(!open)}\r\n                        aria-controls=\"collapse_menu\"\r\n                        aria-expanded={open}\r\n                    >\r\n                        Edit Profile\r\n                    </Button>\r\n\r\n                    <Collapse in={open}>\r\n                        \r\n                    \r\n                        <div id=\"collapse_menu\">\r\n                        <Form onSubmit={onSubmit}>\r\n                        <Form.Group>\r\n                             <Form.Label>Name :</Form.Label>\r\n                             <Form.Control name = \"name\" onChange={onChangeHandle} value={Credentials.name}/>\r\n                         </Form.Group>\r\n                        \r\n                        <Form.Group>\r\n                             <Form.Label>Username :</Form.Label>\r\n                             <Form.Control name = \"username\" onChange={onChangeHandle} value={Credentials.username} />\r\n                         </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Password :</Form.Label>\r\n                            <Form.Control name = \"password\" onChange={onChangeHandle} value={Credentials.password} />\r\n                        </Form.Group>\r\n                        <Button className=\"Btn\" type = \"submit\">Update</Button> \r\n                        </Form>\r\n                        </div>\r\n                    </Collapse>\r\n    \r\n                </>\r\n                }\r\n                \r\n            </Card.Body>\r\n    </Card>\r\n             \r\n           \r\n\r\n</>        \r\n)\r\n    \r\n\r\n};\r\n\r\nexport default UserInformation;\r\n","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\Request_Form\\Request_Form.js",["164"],"import React, { useState } from 'react';\r\nimport 'react-bootstrap'\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport styled  from 'styled-components';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../../utils/constant';\r\nimport \"../style.css\"\r\nconst RequestForm = ()=>{\r\n    // const Auth = React.useContext(AuthApi);\r\n    // const history = useHistory();\r\n\r\n    const [request, setRequest] = useState({\r\n        Name : \"\",\r\n        email: \"\",\r\n        itemname: \"\",\r\n        qty : \"\",\r\n        duration: \"\",\r\n        reason: \"\"\r\n    });\r\n   \r\n    // Functions\r\n\r\n    const onChangeHandle = (e) => {\r\n        const value = e.target.value;\r\n        // console.log(value);\r\n        setRequest({\r\n            ...request,\r\n            [e.target.name] : value\r\n       });\r\n    }\r\n    const onSubmit = (event) => {   \r\n        \r\n        event.preventDefault()\r\n        axios({\r\n            method: \"POST\",\r\n            data: {\r\n                R_Emp_Name: request.Name,\r\n                R_Emp_Email: request.email,\r\n                Item: request.itemname,\r\n                Quantity: request.qty,\r\n                Duration: request.duration,\r\n                Reason: request.reason\r\n            },\r\n            withCredentials: true,\r\n            url: `${API_URL}/add_request`,\r\n          }).then((res)=>{\r\n            console.log(res.data);      \r\n            if(res.data) \r\n            {\r\n                console.log(res.data)\r\n                window.flash('Request Forwarded\\nRequest ID : ' + res.data._id);\r\n                setRequest({\r\n                Name : \"\",\r\n                email: \"\",\r\n                itemname: \"\",\r\n                qty : \"\",\r\n                duration: \"\",\r\n                reason: \"\"\r\n            })\r\n\r\n            }\r\n            else\r\n            {\r\n                console.log('No user found')\r\n            }\r\n        })\r\n        };\r\n     \r\n\r\n    return (\r\n        <>\r\n      \r\n        <Container className=\"MainContainer mt-4 d-flex justify-content-left align-items-left\">\r\n            <Row>\r\n                <Col className=\"text-left\">\r\n                    <Form className=\"FormStyle\" onSubmit={onSubmit} >\r\n                        <Form.Group >\r\n                            <Form.Label>Name : </Form.Label>\r\n                            <Form.Control placeholder=\"Enter Name\" onChange={onChangeHandle} type=\"text\" name=\"Name\" value={request.Name}/>                \r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Email : </Form.Label>\r\n                            <Form.Control placeholder=\"Enter Email\" onChange={onChangeHandle} type=\"email\" name=\"email\" value={request.email} />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Item : </Form.Label>\r\n                            <Form.Control placeholder=\"Enter Item Name\" onChange={onChangeHandle} type=\"text\" name=\"itemname\" value={request.itemname} />\r\n                        </Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>Quantity : </Form.Label>\r\n                                <Form.Control placeholder=\"Enter Quantity\" onChange={onChangeHandle} type=\"number\" name=\"qty\" value={request.qty} />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} >\r\n                                <Form.Label>Duration : </Form.Label>\r\n                                <Form.Control placeholder=\"Enter Duration\" onChange={onChangeHandle} type=\"text\" name=\"duration\" value={request.duration}/>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Group>\r\n                            <Form.Label>Reason : </Form.Label>\r\n                            <Form.Control placeholder=\"Elaborate Reason(Optional)\" as=\"textarea\" rows={4} onChange={onChangeHandle} type=\"text\" name=\"reason\" value={request.reason} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"text-right\">\r\n                            {/* <a href=\"#\"> Forgot Email ? </a> */}\r\n                            <Button  type=\"submit\" className = \"Btn btn btn-md btn-success\">Submit</Button>\r\n                        </Form.Group>\r\n                    </Form>   \r\n                </Col> \r\n            </Row>\r\n        </Container>  \r\n        </> \r\n    )\r\n    \r\n};\r\n\r\n    \r\n\r\nexport default RequestForm;\r\n\r\n// const FormStyle = styled(Form)`\r\n//     background-color: white;\r\n//     width: 500px;\r\n//     .form-group{  \r\n//         &:hover{\r\n\r\n//         }\r\n//     }\r\n\r\n// `;\r\n\r\n// const MainContainer = styled(Container)`\r\n//     width: 100%;\r\n//   height: 100vh;\r\n//   min-height: 100%;\r\n//   min-height: 100vh;\r\n// `;\r\n// const Submit = styled(Button)`\r\n//     background :#EFBB20;\r\n//     border: none; \r\n//     &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n// `;","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\utils\\constant.js",[],"C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\header\\Header.js",["165"],"import React from 'react';\r\nimport 'react-bootstrap';\r\nimport styled  from 'styled-components';\r\nimport { Navbar } from 'react-bootstrap'\r\nimport Flash from '../Flash/flashmessage'\r\nimport '../style.css'\r\n\r\nconst Header = () => {\r\n    return(  \r\n        <>\r\n         <Flash />\r\n        <Navbar className=\"Nav fixed-top\" variant=\"dark\">\r\n            <Navbar.Brand className = \"align-left\" href=\"\">\r\n            <img\r\n                alt=\"\"\r\n                src=\"nav_logo.png\"\r\n                className=\"d-inline-block align-top ml-3\"\r\n                height=\"60\"\r\n                width = \"60\"\r\n            />\r\n            <h2 className=\"d-inline-block ml-3 mt-2 \" style={{fontSize:40}}>Inventory Management System</h2>\r\n            </Navbar.Brand>\r\n        </Navbar>\r\n       \r\n        </>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n\r\n// const Nav = styled(Navbar)`\r\n//     // background:  rgba(0,0,0,0.8);\r\n//     background: #1F386B;\r\n\r\n// `;\r\n\r\n","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\header\\Header_pages.js",["166"],"C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\purchaseRequest\\Purchase_request_table.js",["167","168","169","170"],"import React , { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport {Table,Button,Container, Modal, Form} from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { API_URL } from '../../utils/constant';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst RequestTable = () => {\r\n    const arr = ['Name','Email','Department','Date Requested','Item Name','Quantity','Quotation']\r\n    const [allrequest, setrequests] = useState([])\r\n    const interval_id = useRef(null);\r\n    // const [open, setOpen] = useState(false);\r\n    async function fetch(){\r\n      console.log('in fetch');\r\n        await axios.get(`${API_URL}/get_purchase_request`, {\r\n             withCredentials: true\r\n         }).then((res)=>{\r\n             console.log(res.data);\r\n             \r\n             setrequests(res.data);\r\n             \r\n         })\r\n     } \r\n    // var requests = []\r\n    useEffect( () =>{\r\n      fetch()\r\n     \r\n      interval_id.current = setInterval(()=>{fetch()}, 3000);\r\n     return function cleanup() {\r\n        clearInterval(interval_id.current);\r\n        }\r\n    },[])\r\n    \r\n    const [showModal, setShow] = useState(false)\r\n    const [file, SetFile] = useState(null)\r\n    const [Info, SetInfo] = useState(\"\")\r\n\r\n    \r\n    const SubmitFile = async (e)=>{\r\n            \r\n        e.preventDefault();            \r\n\r\n        console.log('File ' , file)\r\n        // console.log(e.target.file)\r\n\r\n\r\n        // console.log('document', document.getElementById('file').value())\r\n        \r\n        if (file) {\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            await axios.post(`${API_URL}/${Info}/upload`, formData, {\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n            }).then((res)=>{\r\n                if(res.data.code == 200)\r\n                {\r\n                    SetFile(null);\r\n                    window.flash('File Successfully Submitted')\r\n                    fetch();\r\n                }\r\n                else\r\n                {\r\n                    window.flash('Failed To Submit The File', 'danger')\r\n                }\r\n            });\r\n          } else {\r\n            window.flash('Please select a file to add.', 'danger');\r\n          }\r\n        \r\n        \r\n        \r\n        \r\n        \r\n    \r\n    }\r\n\r\n    const onChangeHandlerFile=(files)=>{\r\n        console.log(files)\r\n        const [uploadedFile] = files.target.files;\r\n        console.log(uploadedFile)\r\n        SetFile(uploadedFile)\r\n\r\n    }\r\n   \r\n\r\n   \r\n    // const ModalContent = ()=>{\r\n       \r\n    //    function getBase64(e) {\r\n    //         var file = e.target.files[0]\r\n    //         let reader = new FileReader()\r\n    //         reader.readAsDataURL(file)\r\n    //         reader.onload = () => {\r\n    //             console.log(reader.result)\r\n    //             SetFile(reader.result)\r\n    //         //   this.setState({\r\n    //         //     imgUpload: reader.result\r\n    //         //   })\r\n    //         };\r\n    //         reader.onerror = function (error) {\r\n    //           console.log('Error: ', error);\r\n    //         }\r\n    //       }\r\n        \r\n\r\n    //     return(\r\n    //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\r\n    //             <Modal.Header closeButton>\r\n    //                 <Modal.Title>\r\n    //                     Details \r\n    //                 </Modal.Title>\r\n    //                 </Modal.Header>\r\n    //                 <Form>    \r\n\r\n    //                 <ModalBody>\r\n                        \r\n    //                 <input\r\n    //                 type = 'file'\r\n    //                 id=\"file\"\r\n    //                 name = \"file\"\r\n    //                 value={FileInfo}\r\n    //                 onChange={(e) => { e.preventDefault(); \r\n    //                     SetFile(e.target.files[0])\r\n    //                     // getBase64(e);\r\n    //                 }}\r\n    //                 />\r\n    //                 </ModalBody>\r\n\r\n                \r\n    //             <Modal.Footer>\r\n    //                 <Btn className = \"btn-success\" type = \"submit\">Submit</Btn>\r\n    //             </Modal.Footer>\r\n    //             </Form>\r\n\r\n    //         </Modal>\r\n    //     );\r\n        \r\n    \r\n    // }\r\n    \r\n\r\n\r\n    return(\r\n        <>\r\n         {/* {showModal?\r\n            <div>\r\n                <ModalContent/>\r\n            </div>\r\n        :null    */}\r\n        \r\n\r\n\r\n\r\n     <Container>\r\n       <Button className = \"Btn float-right mb-2\" onClick={fetch} >Refresh</Button>\r\n        <Table className=\"TableStyle\" responsive=\"sm\">\r\n        <thead>\r\n            <tr>\r\n             <th>#</th>\r\n            {arr.map((_, index) => (\r\n              <th key={index}>{_}</th>\r\n            ))}\r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allrequest.map((request, index) =>{\r\n            return(\r\n            <>\r\n             <tr key= {index}>\r\n                <td>{index+1}</td>\r\n                <td>{request.R_Emp_Name}<br/></td>\r\n                <td>{request.R_Emp_Email}</td>\r\n                <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\r\n                <td>{request.Item}</td>\r\n                <td>{request.Quantity}</td>\r\n                {/* <td>{request.Duration}</td> */}\r\n                <td>\r\n\r\n\r\n                {/* <a href = \"http://localhost:5000/upload\"><Btn>Upload</Btn></a> */}\r\n\r\n                    <Form onSubmit = {SubmitFile}>\r\n                        <Form.File name = \"file\" onChange = {  onChangeHandlerFile } />\r\n                        <Button type=\"submit\" className =\"Btn mt-2 btn btn-md\" onClick= {() => {SetInfo(request._id)}}>Submit</Button>\r\n                    </Form>\r\n                </td>\r\n            </tr>\r\n            \r\n            </>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      </Container>\r\n      </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default RequestTable\r\n\r\n// const TableStyle = styled(Table)`\r\n\r\n// th {background: #1F386B;color : white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n\r\n// const Btn = styled(Button)`\r\n//     background :#EFBB20;\r\n//     border: none; \r\n//     &:hover{\r\n//     background: #0e8ccc;\r\n// }`;\r\n\r\nconst ModalBody = styled(Modal.Body)`\r\n\r\nli{\r\n    padding:5px;\r\n}\r\n\r\n`;","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\ManagerRequestTable\\ManagerRequestTable.js",[],"C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\track\\Track_request.js",["171"],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { API_URL } from '../../utils/constant';\r\nimport '../style.css'\r\nimport {\r\n\r\n  Form,\r\n  Button,\r\n  Collapse,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TrackRequest = () => {\r\n    const [trackID,settrackID] = useState({})\r\n    \r\n    const [show, setShow] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [errMsg, seterr] = useState(\"\");\r\n    const [status,setStatus] = useState({\r\n        \r\n        status:\"\",\r\n        item: \"\"\r\n        \r\n    })\r\n    const onChangeHandle = (e) => {\r\n        const value = e.target.value;\r\n        // console.log(value);\r\n        settrackID(value);\r\n    }\r\n    \r\n    const GetRequest = (event) =>\r\n    {\r\n        setShow(false)\r\n        seterr(\"\")\r\n        event.preventDefault();\r\n        axios.post(`${API_URL}/get_request`, {\r\n            id : trackID\r\n        }).then((res)=>{\r\n\r\n            console.log( 'STATUSSSS' , res.data);\r\n            \r\n           if(res.data.code ===  404)\r\n           {\r\n                seterr(res.data.message);\r\n           }\r\n           else\r\n           {\r\n            setStatus({\r\n                status: res.data.Status,\r\n                item:res.data.Item\r\n             })\r\n             setShow(true)\r\n             seterr(\"\")\r\n           }\r\n        })\r\n    }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"Btn mb-4\"\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"collapse_menu\"\r\n        aria-expanded={open}\r\n      >\r\n        Track Request\r\n      </Button>\r\n\r\n      <Collapse in={open}>\r\n        <div id=\"collapse_menu\">\r\n          <Form onSubmit={GetRequest}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Request ID\"\r\n              onChange={onChangeHandle}\r\n              name=\"RequestID\"\r\n            ></Form.Control>\r\n            <br />\r\n            <Button className=\"Btn\" type=\"submit\">Submit</Button>\r\n          </Form>\r\n          \r\n          <h3 className=\"mt-2\">{errMsg}</h3>\r\n          {show && \r\n            <>\r\n              <Card className=\"mt-4\">\r\n                <Card.Header>Request Status</Card.Header>\r\n                <Card.Body>\r\n                   \r\n                  \r\n                  { \r\n                  (status.status === 'Requested' || status.status === 'Approved' || status.status === 'Completed' || status.status === 'Issued') ?           \r\n                   <Card.Title>Status: {status.status}</Card.Title>\r\n                  :<Card.Title>Status: Pending</Card.Title>\r\n                  \r\n                  }\r\n                  \r\n                  \r\n                  \r\n                  <Card.Title>Item: {status.item}</Card.Title>\r\n                \r\n                </Card.Body>\r\n              </Card>\r\n            </>\r\n          }\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrackRequest;\r\n\r\n\r\n// const Btn = styled(Button)`\r\n\r\n// background :#EFBB20;\r\n// border: none; \r\n// &:hover{\r\n// background: #0e8ccc;\r\n// }\r\n\r\n// `;\r\n","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\Request_Table\\RequestTable.js",["172","173"],"import React , { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport {Table,Button,Container, Modal, Form} from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\nimport { API_URL } from '../../utils/constant';\r\nimport '../style.css'\r\nconst RequestTable = () => {\r\n    const [showModal, setShow] = useState(false);\r\n   const arr = ['Requested By','Email','Department','Date Requested','Item Name','Quantity','Duration']\r\n    const [allrequest, setrequests] = useState([])\r\n    const interval_id = useRef(null);\r\n\r\n    async function fetch(){\r\n        console.log('in fetch', showModal);\r\n        await axios.get(`${API_URL}/get_all_request`, {\r\n             withCredentials: true\r\n         }).then((res)=>{\r\n             console.log(res.data);\r\n            //  if (showModal === false)\r\n             setrequests(res.data);\r\n             \r\n         })\r\n        }\r\n    // var requests = []\r\n\r\n    useEffect( () =>{\r\n    \r\n    fetch()\r\n     \r\n      interval_id.current = setInterval(()=>{fetch()}, 3000);\r\n     return function cleanup() {\r\n        clearInterval(interval_id.current);\r\n        }\r\n    },[])\r\n\r\n    const [ModalInfo, SetInfo] = useState({})\r\n    const ModalContent = ()=>{\r\n       const [comment , setcomment] = useState(\"\")\r\n\r\n        const Approve = ()=>{\r\n            console.log('Approve Request')\r\n            axios.post(`${API_URL}/request_approve`, {id : ModalInfo._id}).then(\r\n                (res)=>{\r\n                    if(res.data)\r\n                    { \r\n                        window.flash('Request Approved')\r\n                        setShow(false)\r\n                        fetch()\r\n                    }\r\n                }\r\n            )\r\n        } \r\n\r\n\r\n        const Reject = ()=>{\r\n            axios.post(`${API_URL}/request_reject`, {\r\n                id : ModalInfo._id,\r\n                name: ModalInfo.R_Emp_Name,\r\n                email : ModalInfo.R_Emp_Email,\r\n                item : ModalInfo.Item,\r\n                comment : comment\r\n            }).then(\r\n                (res)=>{\r\n                    if(res.data)\r\n                    { \r\n                        window.flash('Request Rejected')\r\n                        setShow(false)\r\n                        fetch()\r\n                    }\r\n                }\r\n            )\r\n        } \r\n\r\n        return(\r\n            <Modal show = {showModal} onHide ={() => { fetch(); interval_id.current = setInterval(()=>{fetch()}, 3000); setShow(false)}}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Details \r\n                    </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Form>\r\n                       \r\n                    <Modal.Body className = \"ModalBody\">\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><strong>Requested by:</strong> {ModalInfo.R_Emp_Name}</li>\r\n                            <li><strong>Email:</strong> {ModalInfo.R_Emp_Email}</li>\r\n                            <li><strong>Department:</strong> {ModalInfo.R_Emp_Dept.Dept_Name}</li>\r\n                            <li><strong>Item:</strong> {ModalInfo.Item}</li>\r\n                            <li><strong>Quantity:</strong> {ModalInfo.Quantity}</li>\r\n                            <li><strong>Duration:</strong> {ModalInfo.Duration}</li>\r\n                            <li><strong>Reason:</strong> {ModalInfo.Reason}</li>\r\n                            <li className=\"mt-3\">\r\n                                    <Form.Group>\r\n                                        <Form.Control as=\"textarea\" value ={comment} onChange={(event)=>{ setcomment(event.target.value) }}  placeholder = \"Additional Comments\"  row={6}/>\r\n                                    </Form.Group>\r\n                                \r\n                            </li>\r\n                        </ul>\r\n                    </Modal.Body>\r\n\r\n                \r\n                <Modal.Footer>\r\n                    <Button className = \"Btn btn-success\" onClick = {() => {Approve()}}>Approve</Button>\r\n                    <Button className=\"Btn btn-danger\" onClick = {Reject}>Reject</Button>\r\n                        \r\n                </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n        \r\n\r\n    }\r\n    \r\n\r\n\r\n    return(\r\n        <>\r\n        {showModal?\r\n            <div>\r\n                <ModalContent/>\r\n            </div>\r\n        :null   \r\n        }\r\n\r\n\r\n\r\n     <Container>\r\n         { allrequest.length > 0 &&\r\n        <Table className=\"TableStyle\" responsive>\r\n        <thead>\r\n            <tr>\r\n             <th>#</th>\r\n            {arr.map((_, index) => (\r\n              <th key={index}>{_}</th>\r\n            ))}\r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allrequest.map((request, index) =>{\r\n            return(\r\n            <>\r\n            <tr onClick = {() => { clearInterval(interval_id.current); SetInfo(request); setShow(true);} }>\r\n                <td>{index+1}</td>\r\n                <td>{request.R_Emp_Name}<br/></td>\r\n                <td>{request.R_Emp_Email}</td>\r\n                <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\r\n                <td>{request.Item}</td>\r\n                <td>{request.Quantity}</td>\r\n                <td>{request.Duration}</td>\r\n                \r\n            </tr>\r\n            \r\n           \r\n            </>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      \r\n      }\r\n      {\r\n          allrequest.length === 0 && <h2>No Requests.</h2>\r\n      }\r\n        \r\n      </Container>\r\n      </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default RequestTable\r\n\r\n// const TableStyle = styled(Table)`\r\n// th {background: #1F386B; color:white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         // background: #1F386B;\r\n//     }\r\n// }\r\n// `;\r\n\r\n// const Btn = styled(Button)`\r\n// &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n\r\n// `;\r\n\r\n// const ModalBody = styled(Modal.Body)`\r\n\r\n// li{\r\n//     padding:5px;\r\n// }\r\n\r\n// `;","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\storeTable\\Store_Table.js",["174"],"import React , { useEffect, useState, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport {Table,Container,OverlayTrigger,Tooltip} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { API_URL } from '../../utils/constant';\r\n\r\nconst RequestTable = () => {\r\n    const arr = ['Requested By','Email','Department','Item Name','Quantity','Duration']\r\n    const [allrequest, setrequests] = useState([])\r\n    const interval_id = useRef(null);\r\n    const history = useHistory()\r\n    async function fetch(){\r\n        await axios.get(`${API_URL}/storerequests`, {\r\n            withCredentials: true\r\n        }).then((res)=>{\r\n            console.log(res.data);\r\n            setrequests(res.data);\r\n            \r\n        })\r\n    } \r\n    const onIssue = (id)=>{\r\n        \r\n        console.log(\"STORE TABLE MAIN ID FOR PARAMS\",id)\r\n        history.push('/'+id+'/issue')\r\n    }\r\n\r\n\r\n    // const onPurchase = (id)=>{\r\n    //     axios.post(`${API_URL}/request_forward_purchase`, { id : id}).then(\r\n    //         (res)=>{\r\n    //             if(res.data)\r\n    //             { \r\n    //                 setShow(false)\r\n    //                 window.flash('Request Forwarded to Purchase Department')\r\n    //                 fetch();\r\n    //             }\r\n    //         }\r\n    //     )\r\n\r\n    // }\r\n        \r\n    // const onCancel = (_id, email, name, item) => {\r\n    //     axios.post(`${API_URL}/request_cancel`, {id : _id, email : email, name : name, item : item}).then(\r\n    //         (res)=>{\r\n    //             if(res.data)\r\n    //             { \r\n    //                 window.flash('Request Cancelled');\r\n    //                 fetch();\r\n\r\n    //             }\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    \r\n\r\n    // var requests = []\r\n    useEffect( () =>{\r\n        fetch()\r\n     \r\n        interval_id.current = setInterval(()=>{fetch()}, 3000);\r\n       return function cleanup() {\r\n          clearInterval(interval_id.current);\r\n          }\r\n    },[])\r\n\r\n\r\n    // const [showModal, setShow] = useState(false)\r\n    // const [ModalInfo, SetInfo] = useState({})\r\n    // const ModalContent = ()=>{\r\n       \r\n    //     return(\r\n    //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\r\n    //             <Modal.Header closeButton>\r\n    //                 <Modal.Title>\r\n    //                     Details \r\n    //                 </Modal.Title>\r\n    //                        </Modal.Header>\r\n    //                 <ModalBody>\r\n    //                     <ul className=\"list-unstyled\">\r\n    //                         <li><strong>Requested by:</strong> {ModalInfo.R_Emp_Name}</li>\r\n    //                         <li><strong>Email:</strong> {ModalInfo.R_Emp_Email}</li>\r\n    //                         <li><strong>Item:</strong> {ModalInfo.Item}</li>\r\n    //                         <li><strong>Quantity:</strong> {ModalInfo.Quantity}</li>\r\n    //                         <li><strong>Duration:</strong> {ModalInfo.Duration}</li>\r\n    //                         <li><strong>Reason:</strong> {ModalInfo.Reason}</li>\r\n    //                         <li className=\"mt-3\">\r\n    //                             <Form>\r\n    //                                 <Form.Group>\r\n    //                                     <Form.Control as=\"textarea\" placeholder = \"Additional Comments\" row={6}/>\r\n    //                                 </Form.Group>\r\n    //                             </Form>\r\n    //                         </li>\r\n    //                     </ul>\r\n    //                 </ModalBody>\r\n\r\n                \r\n    //             <Modal.Footer>\r\n    //                 {/* <Btn className = \"btn-success\">Approve</Btn>\r\n    //                 <Btn className=\"btn-danger\">Reject</Btn> */}\r\n    //                 <Btn className=\"btn-success\" onClick= {() => {onPurchase()}}>Send To Purchase Department</Btn>\r\n                        \r\n    //             </Modal.Footer>\r\n    //         </Modal>\r\n    //     );\r\n        \r\n\r\n    // }\r\n    \r\n\r\n\r\n    return(\r\n        <>\r\n        {/* {showModal?\r\n            <div>\r\n                <ModalContent/>\r\n            </div>\r\n        :null   \r\n        } */}\r\n\r\n     <Container>\r\n         { allrequest.length > 0 &&\r\n        <Table className=\"TableStyle\" responsive>\r\n        <thead>\r\n            <>\r\n            <tr>\r\n             <th>#</th>\r\n            {arr.map((_, index) => (\r\n              <th key={index}>{_}</th>\r\n            ))}\r\n            <th></th>\r\n          </tr>\r\n</>\r\n        </thead>\r\n        <tbody>\r\n          {allrequest.map((request, index) =>{\r\n            return(\r\n            <>\r\n            <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"button-tooltip-2\">Click to see Details</Tooltip>} >\r\n            <tr key={index} onClick = {() => {onIssue(request._id)} }>\r\n                <td>{index+1}</td>\r\n                <td>{request.R_Emp_Name}<br/></td>\r\n                <td>{request.R_Emp_Email}</td>\r\n                <td>{request.R_Emp_Dept.Dept_Name}</td>\r\n                <td>{request.Item}</td>\r\n                <td>{request.Quantity}</td>\r\n                <td>{request.Duration}</td>\r\n                    \r\n                {/* <td>\r\n                    <Btn onClick = {() => {SetInfo(request); setShow(true);} } className = \"mr-1\"> Details </Btn>\r\n                    <Btn onClick={()=>onIssue(request._id)} className = \"btn-success mr-1\">Issue</Btn>\r\n                <Btn onClick={()=>onCancel(request._id, request.R_Emp_Email, request.R_Emp_Name, request.Item)} className=\"btn-danger\">Cancel</Btn>\r\n                </td> */}\r\n            </tr>\r\n            </OverlayTrigger>\r\n           \r\n            </>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      \r\n      }\r\n      {\r\n          allrequest.length === 0 && <h2>No Requests.</h2>\r\n      }\r\n        \r\n      </Container>\r\n      </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default RequestTable\r\n\r\n// const TableStyle = styled(Table)`\r\n// th {background: #1F386B; color:white;}\r\n// tr{\r\n//     cursor:pointer;\r\n//     &:hover{\r\n//         background: lightgray;\r\n//     }\r\n// }\r\n// `;\r\n\r\n// const Btn = styled(Button)`\r\n// &:hover{\r\n//     background: #0e8ccc;\r\n// }\r\n\r\n// `;\r\n\r\n// const ModalBody = styled(Modal.Body)`\r\n\r\n// li{\r\n//     padding:5px;\r\n// }\r\n\r\n// `;","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\Flash\\flashmessage.js",[],"C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\stock_report\\Stock_Report.js",["175","176"],"import axios from 'axios';\r\nimport {Button, Table, Form, Col, Container} from 'react-bootstrap'\r\nimport '../style.css'\r\nimport HeaderPages from '../header/Header_pages';\r\nimport { useState, useEffect } from 'react';\r\nimport { API_URL } from '../../utils/constant';\r\n\r\n\r\nconst StockReport = () =>{\r\n\r\nconst [start_Date , set_Start_Date] = useState();\r\nconst [end_Date , set_End_Date] = useState();\r\n\r\nconst arr = ['Product', 'Item In', 'Item Out', 'Issued']\r\n\r\n\r\n\r\n\r\nconst [allRecords, setRecords] = useState();\r\n\r\nconst Pdf = async()=>{\r\n\r\n    fetch(`${API_URL}/stockreportpdf`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \r\n            data : allRecords,\r\n            start : start_Date,\r\n            end : end_Date\r\n        }),\r\n      }).then(async res => {\r\n        if (res.status === 200) {\r\n          const blob = await res.blob();\r\n          const file = new Blob(\r\n            [blob], \r\n            {type: 'application/pdf'},\r\n            {name : 'report.pdf'}\r\n          );\r\n          console.log(file)\r\n          \r\n          //Build a URL from the file\r\n          const fileURL = URL.createObjectURL(file);\r\n          //Open the URL on new Window\r\n          console.log(fileURL)\r\n        //   download(res.data, details.request.Item + '_report', 'pdf');\r\n          window.open(fileURL);  \r\n        }\r\n      })\r\n}\r\n\r\nconst Submit = (event) => {\r\n    event.preventDefault();\r\n    axios.post(`${API_URL}/generatestockreport`, { start_date : start_Date, end_date : end_Date }).then((res)=>{\r\n        if(res.data.code == 200)\r\n        {\r\n            setRecords(res.data.records);\r\n        }\r\n        else\r\n        {\r\n            setRecords([]);\r\n        }\r\n})\r\n}\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <>\r\n    <HeaderPages />\r\n    <Container className='Container_Date text-center justify-content-center'>\r\n        <h1>Stock Report</h1>\r\n        <Form  onSubmit = {Submit} className = \"d-flex justify-content-center\">\r\n            <Form.Row>\r\n                    <Form.Group as = {Col} className = \"mt-4\"  >\r\n                    <Form.Label>Start Date</Form.Label>\r\n                    <Form.Control type = \"Date\" value = {start_Date} onChange = {(e)=> {set_Start_Date(e.target.value)}} required />\r\n                    </Form.Group>\r\n                    \r\n                    \r\n                    <Form.Group as = {Col} className = \"mt-4\" >\r\n                    <Form.Label>End Date</Form.Label>\r\n                    <Form.Control type = \"Date\" value = {end_Date} onChange = {(e)=> {set_End_Date(e.target.value)}} required/>\r\n                    </Form.Group>\r\n                \r\n                <Form.Group as = {Col} className = \"mt-4\">\r\n                <Button className = \"Btn Date_Button ml-2\" type = 'Submit'>Find</Button>\r\n                </Form.Group>\r\n\r\n            </Form.Row>\r\n        </Form>\r\n   \r\n\r\n    {allRecords && <>\r\n    {allRecords.length > 0 &&\r\n        <>\r\n        <Button className = \"Btn Date_Button ml-2\" onClick = {Pdf}>Generate PDF Report</Button>\r\n        <Table className=\"TableStyle mt-3 justify-content-center\" responsive>\r\n            <thead>\r\n                <>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        {arr.map((_, index) => (\r\n                            <th key={index}>{_}</th>\r\n                        ))}\r\n                        <th></th>\r\n                    </tr>\r\n                </>\r\n            </thead>\r\n            <tbody>\r\n                {allRecords.map((record, index) => {\r\n                        return (\r\n                            <>\r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{record[0]}</td>\r\n                                    <td>{record[1]}<br /></td>\r\n                                    <td>{record[2]}</td>\r\n                                    <td>{record[3]}</td>\r\n                                    <td>{record[4]}</td>\r\n                             \r\n\r\n                                </tr>\r\n\r\n\r\n                            </>\r\n                        )\r\n                    \r\n\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n        </>\r\n    }\r\n    {\r\n        allRecords.length === 0 && <h2>No Records.</h2>\r\n    }\r\n   </> }\r\n\r\n    </Container>\r\n    </>\r\n\r\n)\r\n\r\n\r\n}\r\n\r\nexport default StockReport;\r\n\r\n","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\product_ledger\\Product_Ledger.js",["177","178"],"import axios from 'axios';\r\nimport {Button, Table, Form, Col, Container} from 'react-bootstrap'\r\nimport '../style.css'\r\nimport HeaderPages from '../header/Header_pages';\r\nimport { useState, useEffect } from 'react';\r\nimport { API_URL } from '../../utils/constant';\r\n\r\n\r\nconst ProductLedger = () =>{\r\n\r\nconst [start_Date , set_Start_Date] = useState();\r\nconst [Product , set_Product] = useState();\r\nconst [end_Date , set_End_Date] = useState();\r\nconst [allitems , setallitems] = useState([]);\r\n\r\nconst arr = ['Date', 'Quantity', 'Duration', 'Status', 'Department']\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    axios.get(`${API_URL}/retreive-items`).then((res)=>{\r\n        if(res.data.code == 200)\r\n        {\r\n            setallitems(res.data.items)\r\n            console.log(res.data.items)\r\n        }\r\n        else\r\n        {\r\n            setallitems([])\r\n        }\r\n    })\r\n}, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst [allRecords, setRecords] = useState();\r\n\r\nconst Pdf = async()=>{\r\n\r\n    fetch(`${API_URL}/productledgerpdf`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            product : Product, \r\n            data : allRecords,\r\n            start : start_Date,\r\n            end : end_Date\r\n        }),\r\n      }).then(async res => {\r\n        if (res.status === 200) {\r\n          const blob = await res.blob();\r\n          const file = new Blob(\r\n            [blob], \r\n            {type: 'application/pdf'},\r\n            {name : 'report.pdf'}\r\n          );\r\n          console.log(file)\r\n          \r\n          //Build a URL from the file\r\n          const fileURL = URL.createObjectURL(file);\r\n          //Open the URL on new Window\r\n          console.log(fileURL)\r\n        //   download(res.data, details.request.Item + '_report', 'pdf');\r\n          window.open(fileURL);  \r\n        }\r\n      })\r\n}\r\n\r\nconst Submit = (event) => {\r\n    event.preventDefault();\r\n    axios.post(`${API_URL}/generateproductledger`, { start_date : start_Date, product : Product, end_date : end_Date }).then((res)=>{\r\n        if(res.data.code == 200)\r\n        {\r\n            setRecords(res.data.records);\r\n        }\r\n        else\r\n        {\r\n            setRecords([]);\r\n        }\r\n})\r\n}\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <>\r\n    <HeaderPages />\r\n    <Container className='Container_Date text-center justify-content-center'>\r\n        <h1>Product Ledger</h1>\r\n        <Form  onSubmit = {Submit} className = \"d-flex justify-content-center\">\r\n            <Form.Row>\r\n                    <Form.Group as = {Col} className = \"mt-4\"  >\r\n                    <Form.Label>Start Date</Form.Label>\r\n                    <Form.Control type = \"Date\" value = {start_Date} onChange = {(e)=> {set_Start_Date(e.target.value)}} required />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as = {Col} className = \"mt-4\"  >\r\n                    <Form.Label>Product</Form.Label>\r\n                    <Form.Control as = \"select\" className = \"selectstyle\" onChange = {(e)=> {set_Product(e.target.value)}} required>\r\n                    <option disabled selected>-</option>\r\n                    {   \r\n                        allitems.map((item,index) =>{\r\n                            return(\r\n                                <option>{item}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                    </Form.Control>    \r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as = {Col} className = \"mt-4\" >\r\n                    <Form.Label>End Date</Form.Label>\r\n                    <Form.Control type = \"Date\" value = {end_Date} onChange = {(e)=> {set_End_Date(e.target.value)}} required/>\r\n                    </Form.Group>\r\n                \r\n                <Form.Group as = {Col} className = \"mt-4\">\r\n                <Button className = \"Btn Date_Button ml-2\" type = 'Submit'>Find</Button>\r\n                </Form.Group>\r\n\r\n            </Form.Row>\r\n        </Form>\r\n   \r\n\r\n    {allRecords && <>\r\n    {allRecords.length > 0 &&\r\n        <>\r\n        <Button className = \"Btn Date_Button ml-2\" onClick = {Pdf}>Generate PDF Report</Button>\r\n        <Table className=\"TableStyle mt-3 justify-content-center\" responsive>\r\n            <thead>\r\n                <>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        {arr.map((_, index) => (\r\n                            <th key={index}>{_}</th>\r\n                        ))}\r\n                        <th></th>\r\n                    </tr>\r\n                </>\r\n            </thead>\r\n            <tbody>\r\n                {allRecords.map((record, index) => {\r\n                        return (\r\n                            <>\r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{record[0]}</td>\r\n                                    <td>{record[1]}<br /></td>\r\n                                    <td>{record[2]}</td>\r\n                                    <td>{record[3]}</td>\r\n                                    <td>{record[4]}</td>\r\n                             \r\n\r\n                                </tr>\r\n\r\n\r\n                            </>\r\n                        )\r\n                    \r\n\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n        </>\r\n    }\r\n    {\r\n        allRecords.length === 0 && <h2>No Records.</h2>\r\n    }\r\n   </> }\r\n\r\n    </Container>\r\n    </>\r\n\r\n)\r\n\r\n\r\n}\r\n\r\nexport default ProductLedger;\r\n\r\n","C:\\Users\\amira\\Desktop\\IMS\\client\\src\\components\\return_items\\Return_items.js",["179","180"],"import React , { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {Row,Table,Button,Container, Modal, Form} from 'react-bootstrap';\r\nimport MainHeader from '../header/Header_pages'\r\nimport moment from 'moment';\r\nimport { API_URL } from '../../utils/constant';\r\nimport \"../style.css\"\r\n\r\n\r\nconst ReturnItems = () => {\r\n    const arr = ['Item Name', 'Department','Quantity','Duration','Date', ' ']\r\n    const [items, setitems] = useState([])\r\n\r\n    useEffect( () =>{\r\n       \r\n        async function fetch(){\r\n       await axios.get(`${API_URL}/get_issued_records`, {\r\n            withCredentials: true\r\n        }).then((res)=>{\r\n            console.log(res.data);\r\n            \r\n            setitems(res.data);\r\n            \r\n        })\r\n    } \r\n    fetch()\r\n    },[])\r\n\r\n\r\n    const [showModal, setShow] = useState(false)\r\n    const [ModalInfo, SetInfo] = useState({})\r\n    const ModalContent = ()=>{\r\n       \r\n        const [quantity, setquantity] = useState(ModalInfo.Quantity)\r\n        \r\n        const UpdateRecord = (event)=>{\r\n            event.preventDefault()\r\n            \r\n         axios.post(`${API_URL}/` + 'return_this_item'\r\n         ,{ id : ModalInfo._id,  quantity : quantity })\r\n             .then(\r\n             (res) => {\r\n                 setShow(false);\r\n                 console.log(res) \r\n                 window.flash('Record Updated')\r\n                 setitems(res.data);\r\n             } \r\n         )\r\n         \r\n        }\r\n \r\n \r\n \r\n         return(\r\n             <Modal show = {showModal} onHide ={() => {setShow(false)}}>\r\n                 <Modal.Header closeButton>\r\n                     <Modal.Title>\r\n                         Details \r\n                     </Modal.Title>\r\n                     </Modal.Header>\r\n                   <Form onSubmit = {UpdateRecord}>  \r\n \r\n                     <Modal.Body className=\"ModalBody\">\r\n \r\n                 {/* <Form.Group>\r\n                     <Form.Control type=\"text\" value={name} placeholder = \"Item Name\" onChange={(event)=>{ setname(event.target.value)}} />\r\n                 </Form.Group> */}\r\n \r\n                 <Form.Group>\r\n                        <Form.Label>Quantity</Form.Label>\r\n                     <Form.Control type=\"number\" value={quantity} placeholder = \"Returned Quantity\" onChange={(event)=>{ setquantity(event.target.value) }} />\r\n                 </Form.Group>\r\n{/*                  \r\n \r\n                 <Form.Group>\r\n                     <Form.Control type=\"text\" value={type} placeholder = \"Item Type\" onChange={ (event)=>{ settype(event.target.value) }} />\r\n                 </Form.Group>\r\n                 \r\n \r\n                 <Form.Group>\r\n                     <Form.Control type=\"text\" value={description} placeholder = \"Item Description\" onChange={ (event)=>{ setdescription(event.target.value) }} />\r\n                 </Form.Group>\r\n*/}                 \r\n                 </Modal.Body>\r\n\r\n                  \r\n                <Modal.Footer>\r\n                    <Button type =\"submit\" className = \"Btn btn-success\">Update</Button>              \r\n                </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n        \r\n\r\n    }\r\n    \r\n    const Dissmiss = (id)=>{\r\n        axios.post(`${API_URL}/` + 'dissmiss_issue_record'\r\n         ,{ id : id })\r\n             .then(\r\n             (res) => {\r\n                 console.log(res) \r\n                 window.flash('Record Updated')\r\n                 setitems(res.data);\r\n             } \r\n         )\r\n         \r\n    }\r\n\r\n    \r\n    const [itemName, setItemName] = useState(\"\")\r\n    return(\r\n        <>\r\n        {showModal?\r\n            <div>\r\n                <ModalContent/>\r\n            </div>\r\n        :null   \r\n        }\r\n\r\n        \r\n   \r\n    <MainHeader/>\r\n    \r\n     \r\n    <Container className=\"MainContainer\">\r\n        <Row className = \"Row1\">\r\n     <h1>Issue Records</h1>\r\n\r\n        </Row>\r\n     <Row className=\"Row1 float-right\" >\r\n        \r\n    <Form>\r\n         \r\n         <Form.Group className=\"FormGroup\">\r\n           \r\n             <Form.Control type=\"text\" placeholder=\"Search\" name=\"searchbar\" value={itemName} onChange={(event)=>{ setItemName(event.target.value)}} >\r\n                 \r\n            \r\n             </Form.Control>\r\n            \r\n         </Form.Group>\r\n         \r\n    </Form>       \r\n        \r\n            \r\n      \r\n     \r\n     \r\n     </Row>\r\n \r\n        \r\n         { items.length > 0 &&\r\n        <Table className=\"TableStyle\" responsive>\r\n        <thead>\r\n            <>\r\n            <tr>\r\n             <th>#</th>\r\n            {arr.map((_, index) => (\r\n              <th key={index}>{_}</th>\r\n            ))}\r\n            <th></th>\r\n          </tr>\r\n</>\r\n        </thead>\r\n        <tbody>\r\n          {items.map((item, index) =>{\r\n            if (item.Item_ID.Item_Name.toLowerCase().includes(itemName.toLowerCase()) )\r\n            return(\r\n            <>\r\n           <tr>\r\n                <td>{index+1}</td>\r\n                <td>{item.Item_ID.Item_Name}<br/></td>\r\n                <td>{item.Department}<br/></td>\r\n                <td>{item.Quantity}</td>\r\n                <td>{item.Duration}</td>\r\n                <td>{moment(item.Date).format('Do MMMM YYYY')}</td>\r\n                <td><Button className=\"Btn\" onClick = {()=>{ SetInfo(item); setShow(true); }} >Returned</Button></td>\r\n                <td><Button className=\"btn-danger\" onClick = {()=>{ Dissmiss(item._id); }} >Dissmiss</Button></td>\r\n                    \r\n               \r\n            </tr>\r\n            \r\n           \r\n            </>\r\n            )\r\n          else return(<tr></tr>)\r\n          \r\n          \r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      \r\n      }\r\n      {\r\n          items.length === 0 && <h2>No Items.</h2>\r\n      }\r\n        \r\n      </Container>\r\n      </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ReturnItems;\r\n",{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":14},{"ruleId":"185","severity":1,"message":"189","line":105,"column":7,"nodeType":"187","messageId":"188","endLine":105,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":49,"column":38,"nodeType":"192","messageId":"193","endLine":49,"endColumn":39},{"ruleId":"194","severity":1,"message":"195","line":100,"column":6,"nodeType":"196","endLine":100,"endColumn":8,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":301,"column":44,"nodeType":"200","messageId":"201","endLine":301,"endColumn":46},{"ruleId":"185","severity":1,"message":"186","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"202","line":35,"column":12,"nodeType":"187","messageId":"188","endLine":35,"endColumn":21},{"ruleId":"185","severity":1,"message":"203","line":35,"column":23,"nodeType":"187","messageId":"188","endLine":35,"endColumn":30},{"ruleId":"204","severity":1,"message":"205","line":58,"column":34,"nodeType":"192","messageId":"206","endLine":58,"endColumn":36},{"ruleId":"185","severity":1,"message":"207","line":228,"column":7,"nodeType":"187","messageId":"188","endLine":228,"endColumn":16},{"ruleId":"185","severity":1,"message":"186","line":12,"column":8,"nodeType":"187","messageId":"188","endLine":12,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":14},{"ruleId":"194","severity":1,"message":"195","line":35,"column":7,"nodeType":"196","endLine":35,"endColumn":9,"suggestions":"208"},{"ruleId":"185","severity":1,"message":"186","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"209","line":5,"column":20,"nodeType":"187","messageId":"188","endLine":5,"endColumn":29},{"ruleId":"204","severity":1,"message":"205","line":57,"column":26,"nodeType":"192","messageId":"206","endLine":57,"endColumn":28},{"ruleId":"204","severity":1,"message":"205","line":22,"column":26,"nodeType":"192","messageId":"206","endLine":22,"endColumn":28},{"ruleId":"204","severity":1,"message":"205","line":77,"column":26,"nodeType":"192","messageId":"206","endLine":77,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":39,"column":35,"nodeType":"192","messageId":"193","endLine":39,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":98,"column":34,"nodeType":"192","messageId":"193","endLine":98,"endColumn":35},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'MainContainer' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.","ArrayExpression",["212"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'showModal' is assigned a value but never used.","'setShow' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'ModalBody' is assigned a value but never used.",["213"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"214","fix":"216"},"Update the dependencies array to be: [fetch]",{"range":"217","text":"218"},{"range":"219","text":"218"},[2857,2859],"[fetch]",[1167,1169]]