[{"/home/amir/Desktop/New File/IMS/client/src/index.js":"1","/home/amir/Desktop/New File/IMS/client/src/App.js":"2","/home/amir/Desktop/New File/IMS/client/src/components/Bus.js":"3","/home/amir/Desktop/New File/IMS/client/src/components/Authapi.js":"4","/home/amir/Desktop/New File/IMS/client/src/components/logout/Logout.js":"5","/home/amir/Desktop/New File/IMS/client/src/components/dashboard/Dashboard.js":"6","/home/amir/Desktop/New File/IMS/client/src/components/login/Login_Form.js":"7","/home/amir/Desktop/New File/IMS/client/src/components/hod_dashboard/Hod_dashboard.js":"8","/home/amir/Desktop/New File/IMS/client/src/components/purchaseDashboard/Purchase_dashboard.js":"9","/home/amir/Desktop/New File/IMS/client/src/components/managerDashboard/Manager_dashboard.js":"10","/home/amir/Desktop/New File/IMS/client/src/components/RequestDetails/Accounts_manager.js":"11","/home/amir/Desktop/New File/IMS/client/src/components/RequestDetails/Manager_admin.js":"12","/home/amir/Desktop/New File/IMS/client/src/components/StoreDashboard/Store_Dashboard.js":"13","/home/amir/Desktop/New File/IMS/client/src/components/RequestDetails/Director.js":"14","/home/amir/Desktop/New File/IMS/client/src/components/inventory/Inventory.js":"15","/home/amir/Desktop/New File/IMS/client/src/components/issue/Issue_items.js":"16","/home/amir/Desktop/New File/IMS/client/src/components/recieve_items/Recieve_Items.js":"17","/home/amir/Desktop/New File/IMS/client/src/components/Request_Form/Request_Form.js":"18","/home/amir/Desktop/New File/IMS/client/src/components/userInformation/User_information.js":"19","/home/amir/Desktop/New File/IMS/client/src/utils/constant.js":"20","/home/amir/Desktop/New File/IMS/client/src/components/header/Header_pages.js":"21","/home/amir/Desktop/New File/IMS/client/src/components/header/Header.js":"22","/home/amir/Desktop/New File/IMS/client/src/components/track/Track_request.js":"23","/home/amir/Desktop/New File/IMS/client/src/components/Request_Table/RequestTable.js":"24","/home/amir/Desktop/New File/IMS/client/src/components/purchaseRequest/Purchase_request_table.js":"25","/home/amir/Desktop/New File/IMS/client/src/components/ManagerRequestTable/ManagerRequestTable.js":"26","/home/amir/Desktop/New File/IMS/client/src/components/storeTable/Store_Table.js":"27","/home/amir/Desktop/New File/IMS/client/src/components/Flash/flashmessage.js":"28","/home/amir/Desktop/New File/current/IMS/client/src/index.js":"29","/home/amir/Desktop/New File/current/IMS/client/src/App.js":"30","/home/amir/Desktop/New File/current/IMS/client/src/components/Bus.js":"31","/home/amir/Desktop/New File/current/IMS/client/src/components/Authapi.js":"32","/home/amir/Desktop/New File/current/IMS/client/src/components/logout/Logout.js":"33","/home/amir/Desktop/New File/current/IMS/client/src/components/login/Login_Form.js":"34","/home/amir/Desktop/New File/current/IMS/client/src/components/dashboard/Dashboard.js":"35","/home/amir/Desktop/New File/current/IMS/client/src/components/hod_dashboard/Hod_dashboard.js":"36","/home/amir/Desktop/New File/current/IMS/client/src/components/purchaseDashboard/Purchase_dashboard.js":"37","/home/amir/Desktop/New File/current/IMS/client/src/components/managerDashboard/Manager_dashboard.js":"38","/home/amir/Desktop/New File/current/IMS/client/src/components/RequestDetails/Accounts_manager.js":"39","/home/amir/Desktop/New File/current/IMS/client/src/components/RequestDetails/Manager_admin.js":"40","/home/amir/Desktop/New File/current/IMS/client/src/components/RequestDetails/Director.js":"41","/home/amir/Desktop/New File/current/IMS/client/src/components/StoreDashboard/Store_Dashboard.js":"42","/home/amir/Desktop/New File/current/IMS/client/src/components/inventory/Inventory.js":"43","/home/amir/Desktop/New File/current/IMS/client/src/components/recieve_items/Recieve_Items.js":"44","/home/amir/Desktop/New File/current/IMS/client/src/components/issue/Issue_items.js":"45","/home/amir/Desktop/New File/current/IMS/client/src/components/Request_Form/Request_Form.js":"46","/home/amir/Desktop/New File/current/IMS/client/src/components/userInformation/User_information.js":"47","/home/amir/Desktop/New File/current/IMS/client/src/utils/constant.js":"48","/home/amir/Desktop/New File/current/IMS/client/src/components/header/Header.js":"49","/home/amir/Desktop/New File/current/IMS/client/src/components/header/Header_pages.js":"50","/home/amir/Desktop/New File/current/IMS/client/src/components/Request_Table/RequestTable.js":"51","/home/amir/Desktop/New File/current/IMS/client/src/components/track/Track_request.js":"52","/home/amir/Desktop/New File/current/IMS/client/src/components/purchaseRequest/Purchase_request_table.js":"53","/home/amir/Desktop/New File/current/IMS/client/src/components/ManagerRequestTable/ManagerRequestTable.js":"54","/home/amir/Desktop/New File/current/IMS/client/src/components/storeTable/Store_Table.js":"55","/home/amir/Desktop/New File/current/IMS/client/src/components/Flash/flashmessage.js":"56"},{"size":316,"mtime":1620372446329,"results":"57","hashOfConfig":"58"},{"size":12501,"mtime":1620373613199,"results":"59","hashOfConfig":"58"},{"size":69,"mtime":1620372446329,"results":"60","hashOfConfig":"58"},{"size":89,"mtime":1620372446329,"results":"61","hashOfConfig":"58"},{"size":750,"mtime":1620373341219,"results":"62","hashOfConfig":"58"},{"size":969,"mtime":1620372446329,"results":"63","hashOfConfig":"58"},{"size":6878,"mtime":1620374857649,"results":"64","hashOfConfig":"58"},{"size":918,"mtime":1620372446329,"results":"65","hashOfConfig":"58"},{"size":844,"mtime":1620372446329,"results":"66","hashOfConfig":"58"},{"size":836,"mtime":1620372446329,"results":"67","hashOfConfig":"58"},{"size":3738,"mtime":1620374296289,"results":"68","hashOfConfig":"58"},{"size":3836,"mtime":1620374322399,"results":"69","hashOfConfig":"58"},{"size":1034,"mtime":1620372446329,"results":"70","hashOfConfig":"58"},{"size":4921,"mtime":1620372446329,"results":"71","hashOfConfig":"58"},{"size":5785,"mtime":1620372446329,"results":"72","hashOfConfig":"58"},{"size":9772,"mtime":1620372446329,"results":"73","hashOfConfig":"58"},{"size":5693,"mtime":1620372446329,"results":"74","hashOfConfig":"58"},{"size":4743,"mtime":1620372446329,"results":"75","hashOfConfig":"58"},{"size":4716,"mtime":1620372446329,"results":"76","hashOfConfig":"58"},{"size":27,"mtime":1620372446329,"results":"77","hashOfConfig":"58"},{"size":857,"mtime":1620372446329,"results":"78","hashOfConfig":"58"},{"size":841,"mtime":1620372446329,"results":"79","hashOfConfig":"58"},{"size":2885,"mtime":1620372446329,"results":"80","hashOfConfig":"58"},{"size":5275,"mtime":1620372446329,"results":"81","hashOfConfig":"58"},{"size":5693,"mtime":1620372446329,"results":"82","hashOfConfig":"58"},{"size":2935,"mtime":1620373351659,"results":"83","hashOfConfig":"58"},{"size":5805,"mtime":1620372446329,"results":"84","hashOfConfig":"58"},{"size":1113,"mtime":1620372446329,"results":"85","hashOfConfig":"58"},{"size":316,"mtime":1620372446329,"results":"86","hashOfConfig":"87"},{"size":12513,"mtime":1620682947179,"results":"88","hashOfConfig":"87"},{"size":69,"mtime":1620372446329,"results":"89","hashOfConfig":"87"},{"size":89,"mtime":1620372446329,"results":"90","hashOfConfig":"87"},{"size":773,"mtime":1620683052889,"results":"91","hashOfConfig":"87"},{"size":7054,"mtime":1620683012479,"results":"92","hashOfConfig":"87"},{"size":1064,"mtime":1620671077959,"results":"93","hashOfConfig":"87"},{"size":707,"mtime":1620671077969,"results":"94","hashOfConfig":"87"},{"size":903,"mtime":1620671077969,"results":"95","hashOfConfig":"87"},{"size":896,"mtime":1620671077969,"results":"96","hashOfConfig":"87"},{"size":3899,"mtime":1620672326959,"results":"97","hashOfConfig":"87"},{"size":3884,"mtime":1620672500499,"results":"98","hashOfConfig":"87"},{"size":6280,"mtime":1620683185369,"results":"99","hashOfConfig":"87"},{"size":1137,"mtime":1620671077959,"results":"100","hashOfConfig":"87"},{"size":6039,"mtime":1620671077969,"results":"101","hashOfConfig":"87"},{"size":5912,"mtime":1620671077969,"results":"102","hashOfConfig":"87"},{"size":10105,"mtime":1620672161629,"results":"103","hashOfConfig":"87"},{"size":4853,"mtime":1620671077959,"results":"104","hashOfConfig":"87"},{"size":4619,"mtime":1620671077969,"results":"105","hashOfConfig":"87"},{"size":48,"mtime":1620681516319,"results":"106","hashOfConfig":"87"},{"size":906,"mtime":1620671077969,"results":"107","hashOfConfig":"87"},{"size":937,"mtime":1620672744139,"results":"108","hashOfConfig":"87"},{"size":5412,"mtime":1620671077959,"results":"109","hashOfConfig":"87"},{"size":2959,"mtime":1620671077969,"results":"110","hashOfConfig":"87"},{"size":5761,"mtime":1620671077969,"results":"111","hashOfConfig":"87"},{"size":3008,"mtime":1620682854669,"results":"112","hashOfConfig":"87"},{"size":5845,"mtime":1620671077969,"results":"113","hashOfConfig":"87"},{"size":1113,"mtime":1620372446329,"results":"114","hashOfConfig":"87"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y8repy",{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},"1vpfozj",{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"173"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"173"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"173"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"173"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"173"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"173"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"173"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"173"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"173"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"173"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"173"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"173"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"173"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"173"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"173"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"173"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"173"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"173"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},"/home/amir/Desktop/New File/IMS/client/src/index.js",[],"/home/amir/Desktop/New File/IMS/client/src/App.js",["246"],"/home/amir/Desktop/New File/IMS/client/src/components/Bus.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/Authapi.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/logout/Logout.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/dashboard/Dashboard.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/login/Login_Form.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/hod_dashboard/Hod_dashboard.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/purchaseDashboard/Purchase_dashboard.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/managerDashboard/Manager_dashboard.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/RequestDetails/Accounts_manager.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/RequestDetails/Manager_admin.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/StoreDashboard/Store_Dashboard.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/RequestDetails/Director.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/inventory/Inventory.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/issue/Issue_items.js",["247","248","249","250","251","252","253","254","255","256"],"/home/amir/Desktop/New File/IMS/client/src/components/recieve_items/Recieve_Items.js",["257"],"/home/amir/Desktop/New File/IMS/client/src/components/Request_Form/Request_Form.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/userInformation/User_information.js",[],"/home/amir/Desktop/New File/IMS/client/src/utils/constant.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/header/Header_pages.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/header/Header.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/track/Track_request.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/Request_Table/RequestTable.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/purchaseRequest/Purchase_request_table.js",["258","259","260","261"],"/home/amir/Desktop/New File/IMS/client/src/components/ManagerRequestTable/ManagerRequestTable.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/storeTable/Store_Table.js",[],"/home/amir/Desktop/New File/IMS/client/src/components/Flash/flashmessage.js",[],"/home/amir/Desktop/New File/current/IMS/client/src/index.js",[],["262","263"],"/home/amir/Desktop/New File/current/IMS/client/src/App.js",[],"/home/amir/Desktop/New File/current/IMS/client/src/components/Bus.js",[],"/home/amir/Desktop/New File/current/IMS/client/src/components/Authapi.js",[],"/home/amir/Desktop/New File/current/IMS/client/src/components/logout/Logout.js",[],"/home/amir/Desktop/New File/current/IMS/client/src/components/login/Login_Form.js",["264"],"/home/amir/Desktop/New File/current/IMS/client/src/components/dashboard/Dashboard.js",["265"],"// import axios from 'axios';\nimport React from 'react';\nimport { Col, Container, Row} from 'react-bootstrap';\nimport RequestForm from '../Request_Form/Request_Form.js'\nimport HeaderPg from '../header/Header_pages'\nimport styled from 'styled-components';\nimport UserInfo from '../userInformation/User_information.js';\nimport TrackRequest from '../track/Track_request'\n\n\nimport \"../style.css\"\n\n\nconst Dashboard = () => {\n    \n    return(  \n\n    <>\n        <HeaderPg />\n        <Container className=\"MainContainer\">\n        <Row >\n            <Col>            \n                <UserInfo/>\n                <br/>\n               <TrackRequest/>\n\n            </Col>\n            <Col className=\"Row1\">\n                <h1 className=\"ml-2\">Requisition Form: </h1>\n                <RequestForm />\n            </Col>\n        </Row>\n       </Container>\n    </>        \n\n)\n    \n\n};\n\nexport default Dashboard;\n// const MainContainer = styled(Container)`\n//     width: 100%;\n//     height: auto;\n//     min-height: 100%;\n//     min-height: 100vh;\n//     margin-top:100px;\n// `;\n","/home/amir/Desktop/New File/current/IMS/client/src/components/hod_dashboard/Hod_dashboard.js",["266"],"import RequestTable from '../Request_Table/RequestTable'\n// import axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport {Button, Container} from 'react-bootstrap'\nimport UserInformation from '../userInformation/User_information.js';\nimport styled from 'styled-components';\nimport HeaderPages from '../header/Header_pages';\nimport '../style.css'\nconst Hod_dashboard = () =>{\n\nreturn(\n    <>\n    <HeaderPages/>\n    <Container className =\"MainContainer\">\n    \n    <UserInformation />\n    \n    <Link to=\"/dashboard\"> <Button className=\"Btn btn btn-md mt-4 mb-4 float-right\"> Requisition Form </Button> </Link>\n    \n    <RequestTable/>\n    </Container>\n    </>\n)\n\n\n}\n\nexport default Hod_dashboard;\n\n","/home/amir/Desktop/New File/current/IMS/client/src/components/purchaseDashboard/Purchase_dashboard.js",["267"],"import RequestTable from '../purchaseRequest/Purchase_request_table'\n// import axios from 'axios';\n// import {Link} from 'react-router-dom';\nimport {Container} from 'react-bootstrap'\nimport UserInformation from '../userInformation/User_information.js';\nimport styled from 'styled-components';\nimport HeaderPages from '../header/Header_pages';\nimport \"../style.css\"\nconst PurchaseDashboard = () =>{\n\nreturn(\n    <>\n    <HeaderPages/>\n    <Container className=\"MainContainer\">\n    \n    <UserInformation />\n    <br/>\n    <RequestTable/>\n    </Container>\n    </>\n)\n\n\n}\n\nexport default PurchaseDashboard;\n\n// const Btn = styled(Button)`\n//     background :#EFBB20;\n//     border: none; \n//     &:hover{\n//     background: #0e8ccc;\n// }\n// `;\n// const MainContainer = styled(Container)`\n//     width: 100%;\n//     height: auto;\n//     min-height: 100%;\n//     min-height: 100vh;\n//     margin-top:100px;\n// `;","/home/amir/Desktop/New File/current/IMS/client/src/components/managerDashboard/Manager_dashboard.js",["268"],"import RequestTable from '../ManagerRequestTable/ManagerRequestTable'\n// import axios from 'axios';\n// import {Link} from 'react-router-dom';\nimport {Container} from 'react-bootstrap'\nimport UserInformation from '../userInformation/User_information.js';\nimport styled from 'styled-components';\nimport HeaderPages from '../header/Header_pages';\nimport \"../style.css\"\nconst AdminDashboard = () =>{\n\nreturn(\n    <>\n    <HeaderPages/>\n    <Container className =\"MainContainer\">  \n    <UserInformation />\n    <br/>\n    <RequestTable/>\n    </Container>\n    </>\n)\n\n\n}\n\nexport default AdminDashboard;\n\n// const Btn = styled(Button)`\n//     background :#EFBB20;\n//     border: none; \n//     &:hover{\n//     background: #0e8ccc;\n// }\n// `;\n// const MainContainer = styled(Container)`\n//     width: 100%;\n//     height: auto;\n//     min-height: 100%;\n//     min-height: 100vh;\n//     margin-top:100px;\n// `;","/home/amir/Desktop/New File/current/IMS/client/src/components/RequestDetails/Accounts_manager.js",["269"],"import HeaderPages from '../header/Header_pages';\nimport {Card, Form,Container, Button} from 'react-bootstrap';\nimport axios from 'axios';\nimport {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport download from 'downloadjs';\nimport { API_URL } from '../../utils/constant';\nimport {useHistory} from 'react-router';\nimport '../style.css'\nconst Account_Manager = () =>{ \n\n    const [comments, set_comments] = useState(\"\")\n    const  { id } = useParams();\n    const history = useHistory();\n    const [details, setDetails] = useState([]);\n    // const [path, setPath] = useState(\"\");\n    console.log(\"Params \" , id);\n    useEffect (() =>{\n    axios.get(`${API_URL}/` + id + '/accountsrequest')\n    .then(\n        (res) => {\n            setDetails(res.data)\n            // setPath(res.data.path)\n            console.log(res.data) \n       \n        } \n    )\n    },[id])\n    \n    const SubmitComment = ()=>{\n        axios.post(`${API_URL}/submitaccounts`, { id : id, comment : comments }).then((res)=>{\n                if(res.data.code === 200)\n                { \n                    console.log('Comment Added')\n                    history.push('/managerdashboard')\n                }\n                else if(res.data.code === 404)\n                { \n                    window.flash('Failed to submit comment', 'danger')\n                    // console.log('Comment Added')\n                    // history.push('/managerdashboard')\n                }\n        })\n    }\n    \n\n    const Download = async ()=>{\n        await axios.get(`${API_URL}/${id}/download`, {\n            responseType: 'blob'\n          }).then((res)=>{\n            download(res.data, 'quotation', 'pdf');\n          })\n    }\n\n    \n    return(\n        \n        <>\n        <HeaderPages/>\n        <Container className = \"MainContainer\">\n\n        <Card>\n            <Card.Header>\n                Request Details\n            </Card.Header>\n            <Card.Body>\n                <Card.Title><strong>Name: </strong>{details.R_Emp_Name}</Card.Title>\n                <Card.Title><strong>Email: </strong>{details.R_Emp_Email}</Card.Title>\n                <Card.Title><strong>Item: </strong>{details.Item}</Card.Title>\n                <Card.Title><strong>Duration: </strong>{details.Duration}</Card.Title>\n                <Card.Title><strong>Quantity: </strong>{details.Quantity}</Card.Title>\n                <Card.Title><strong>Reason : </strong>{details.Reason}</Card.Title>\n                <Card.Title><strong>Date Requested </strong>{moment(details.Added).format('Do MMMM YYYY')}</Card.Title>\n                \n                <Button className = \"Btn\" onClick={Download}>Download Quotation</Button>\n                \n                <Form className=\"mt-4\" onSubmit={SubmitComment}>\n                    <Form.Group>\n                        <Card.Title className=\"CardTitle\">Add Comments<span>*</span></Card.Title>\n                        <Form.Control placeholder=\"Enter Comments\" as=\"textarea\" row={5} value ={comments} onChange = { (e) => { set_comments(e.target.value) }} required></Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Button type=\"submit\" className=\"Btn btn btn-md float-right\"  >Submit</Button>\n                    </Form.Group>\n                </Form>\n            </Card.Body>\n        </Card>\n        </Container>\n        \n       </>\n        \n    );\n\n}\n\nexport default Account_Manager;\n// const MainContainer = styled(Container)`\n//     width: 100%;\n//     height: auto;\n//     min-height: 100%;\n//     min-height: 100vh;\n//     margin-top:100px;\n// `;\n\n\n// const Btn = styled(Button)`\n//     background :#EFBB20;\n//     border: none; \n//     &:hover{\n//     background: #0e8ccc;\n// }`;\n\n// const CardTitle = styled(Card.Title)`\n// span{\n//     color : red;\n// }\n// `;","/home/amir/Desktop/New File/current/IMS/client/src/components/RequestDetails/Manager_admin.js",["270"],"import HeaderPages from '../header/Header_pages';\nimport {Card, Form,Container, Button} from 'react-bootstrap';\nimport axios from 'axios';\nimport {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { API_URL } from '../../utils/constant';\nimport download from 'downloadjs';\nimport {useHistory} from 'react-router';\nimport '../style.css'\nconst ManagerAdmin = () =>{ \n\n    const history = useHistory();\n    const { id } = useParams();\n    const [admin_comment, set_admin] = useState(\"\");\n    const [request, set_request] = useState({});\n    const [comment, set_comment] = useState({});\n\n    console.log(\"Params \" , id);\n    \n    useEffect (() =>{\n        axios.get(`${API_URL}/` + id + '/adminrequest')\n        .then(\n            (res) => {\n                // setDetails(res.data)\n                set_request(res.data.request)\n                set_comment(res.data.comment)\n                console.log(res.data) \n        \n            } \n        )\n    },[id])\n    \n    const SubmitComment = ()=>{\n        axios.post(`${API_URL}/submitadmin`, { id : id, comment : admin_comment }).then((res)=>{\n            if(res.data.code === 200)\n            { \n                console.log('Comment Added')\n                history.push('/managerdashboard')\n            }\n            else if(res.data.code === 404)\n            { \n                window.flash('Failed to submit comment', 'danger')\n                // console.log('Comment Added')\n                // history.push('/managerdashboard')\n            }\n        })\n    }\n    \n\n\n\n    const Download = async ()=>{\n        await axios.get(`${API_URL}/${id}/download`, {\n            responseType: 'blob'\n          }).then((res)=>{\n            download(res.data, 'quotation', 'pdf');\n          })\n    }\n\n    return(\n        \n        <>\n        <HeaderPages/>\n        <Container className=\"MainContainer\">\n\n        <Card>\n            <Card.Header>\n                Request Details\n            </Card.Header>\n            <Card.Body>\n                <Card.Title><strong>Name: </strong>{request.R_Emp_Name}</Card.Title>\n                <Card.Title><strong>Email: </strong>{request.R_Emp_Email}</Card.Title>\n                <Card.Title><strong>Item: </strong>{request.Item}</Card.Title>\n                <Card.Title><strong>Duration: </strong>{request.Duration}</Card.Title>\n                <Card.Title><strong>Quantity: </strong>{request.Quantity}</Card.Title>\n                <Card.Title><strong>Reason : </strong>{request.Reason}</Card.Title>\n                <Card.Title><strong>Date Requested </strong>{moment(request.Added).format('Do MMMM YYYY')}</Card.Title>\n                <Card.Title><strong>Accounts Manager Comments : </strong>{comment.Comment_Accounts}</Card.Title>\n                <Btn onClick={Download}>Download Quotation</Btn>\n                <Form className=\"mt-4\" onSubmit={SubmitComment}>\n                    <Form.Group>\n                        <CardTitle>Add Comments<span>*</span></CardTitle>\n                        <Form.Control as=\"textarea\" row={5} value = {admin_comment} onChange = {(e) => { set_admin(e.target.value) }} required></Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Btn type=\"submit\" className=\"btn btn-md float-right\"  >Submit</Btn>\n                    </Form.Group>\n                </Form>\n            </Card.Body>\n        </Card>\n        </Container>\n        \n       </>\n        \n    );\n\n}\n\nexport default ManagerAdmin;\nconst MainContainer = styled(Container)`\n    width: 100%;\n    height: auto;\n    min-height: 100%;\n    min-height: 100vh;\n    margin-top:100px;\n`;\n\n\nconst Btn = styled(Button)`\n    background :#EFBB20;\n    border: none; \n    &:hover{\n    background: #0e8ccc;\n}`;\n\nconst CardTitle = styled(Card.Title)`\nspan{\n    color : red;\n}\n`;\n\n","/home/amir/Desktop/New File/current/IMS/client/src/components/RequestDetails/Director.js",["271"],"/home/amir/Desktop/New File/current/IMS/client/src/components/StoreDashboard/Store_Dashboard.js",["272"],"import RequestTable from '../storeTable/Store_Table'\n// import axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport {Button, Container} from 'react-bootstrap'\nimport UserInformation from '../userInformation/User_information.js';\nimport styled from 'styled-components';\nimport HeaderPages from '../header/Header_pages';\nimport '../style.css'\n\nconst StoreDashboard = () =>{\n\nreturn(\n    <>\n    <HeaderPages/>\n    <Container className =\"MainContainer\" >\n    \n    <UserInformation />\n    \n    \n    <Link to=\"/inventory\"> <Button className=\"btn Btn btn-md mt-4 mb-4 float-right\"> Inventory </Button> </Link>\n    <Link to=\"/recieveitems\"> <Button className=\"btn Btn btn-md mt-4 mb-4 mr-2 float-right\"> Recieved Item </Button> </Link>\n    \n    \n    <RequestTable/>\n    </Container>\n    </>\n)\n\n\n}\n\nexport default StoreDashboard;\n\n// const Btn = styled(Button)`\n//     background :#EFBB20;\n//     border: none; \n//     &:hover{\n//     background: #0e8ccc;\n// }\n// `;\n// const MainContainer = styled(Container)`\n//     width: 100%;\n//     height: auto;\n//     min-height: 100%;\n//     min-height: 100vh;\n//     margin-top:100px;\n// `;","/home/amir/Desktop/New File/current/IMS/client/src/components/inventory/Inventory.js",["273"],"import React , { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {Row,Table,Button,Container, Modal, Form} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport MainHeader from '../header/Header_pages'\nimport { API_URL } from '../../utils/constant';\nimport \"../style.css\"\n\n\nconst Inventory = () => {\n    const arr = ['Name','Type','Description','Quantity']\n    const [items, setitems] = useState([])\n\n    useEffect( () =>{\n       \n        async function fetch(){\n       await axios.get(`${API_URL}/storeitem`, {\n            withCredentials: true\n        }).then((res)=>{\n            console.log(res.data);\n            \n            setitems(res.data);\n            \n        })\n    } \n    fetch()\n    },[])\n\n\n    const [showModal, setShow] = useState(false)\n    const [ModalInfo, SetInfo] = useState({})\n    const ModalContent = ()=>{\n       \n        const [name, setname] = useState(ModalInfo.Item_Name)\n        const [quantity, setquantity] = useState(ModalInfo.Item_Quantity)\n        const [description, setdescription] = useState(ModalInfo.Item_Description)\n        const [type, settype] = useState(ModalInfo.Item_Type)\n \n        const UpdateRecord = (event)=>{\n            event.preventDefault()\n            \n         axios.post(`${API_URL}/` + ModalInfo._id + '/updateitem'\n         ,{ id : ModalInfo._id, name : name, quantity : quantity, description : description, type : type })\n             .then(\n             (res) => {\n                 setShow(false);\n                 console.log(res) \n                 window.flash('Record Updated')\n                 setitems(res.data);\n             } \n         )\n         \n        }\n \n \n \n         return(\n             <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n                 <Modal.Header closeButton>\n                     <Modal.Title>\n                         Details \n                     </Modal.Title>\n                     </Modal.Header>\n                   <Form onSubmit = {UpdateRecord}>  \n \n                     <Modal.Body className=\"ModalBody\">\n \n                 <Form.Group>\n                     <Form.Control type=\"text\" value={name} placeholder = \"Item Name\" onChange={(event)=>{ setname(event.target.value)}} />\n                 </Form.Group>\n \n                 <Form.Group>\n                     <Form.Control type=\"number\" value={quantity} placeholder = \"Item Quantity\" onChange={(event)=>{ setquantity(event.target.value) }} />\n                 </Form.Group>\n                 \n \n                 <Form.Group>\n                     <Form.Control type=\"text\" value={type} placeholder = \"Item Type\" onChange={ (event)=>{ settype(event.target.value) }} />\n                 </Form.Group>\n                 \n \n                 <Form.Group>\n                     <Form.Control type=\"text\" value={description} placeholder = \"Item Description\" onChange={ (event)=>{ setdescription(event.target.value) }} />\n                 </Form.Group>\n                 \n                 </Modal.Body>\n \n                  \n                <Modal.Footer>\n                    <Button type =\"submit\" className = \"Btn btn-success\">Update</Button>              \n                </Modal.Footer>\n                </Form>\n            </Modal>\n        );\n        \n\n    }\n    \n\n    \n    const [itemName, setItemName] = useState(\"\")\n    return(\n        <>\n        {showModal?\n            <div>\n                <ModalContent/>\n            </div>\n        :null   \n        }\n\n        \n   \n    <MainHeader/>\n    \n     \n    <Container className=\"MainContainer\">\n        <Row className = \"Row1\">\n     <h1>Store Inventory</h1>\n\n        </Row>\n     <Row className=\"Row1 float-right\" >\n        \n    <Form>\n         \n         <Form.Group className=\"FormGroup\">\n           \n             <Form.Control type=\"text\" placeholder=\"Search\" name=\"searchbar\" value={itemName} onChange={(event)=>{ setItemName(event.target.value)}} >\n                 \n            \n             </Form.Control>\n            \n         </Form.Group>\n         \n    </Form>       \n        \n            \n      \n     \n     \n     </Row>\n \n        \n         { items.length > 0 &&\n        <Table className=\"TableStyle\" responsive>\n        <thead>\n            <>\n            <tr>\n             <th>#</th>\n            {arr.map((_, index) => (\n              <th key={index}>{_}</th>\n            ))}\n            <th></th>\n          </tr>\n</>\n        </thead>\n        <tbody>\n          {items.map((item, index) =>{\n            if (item.Item_Name.toLowerCase().includes(itemName.toLowerCase()) || item.Item_Description.toLowerCase().includes(itemName.toLowerCase()) )\n            return(\n            <>\n           <tr>\n                <td>{index+1}</td>\n                <td>{item.Item_Name}<br/></td>\n                <td>{item.Item_Type}</td>\n                <td>{item.Item_Description}</td>\n                <td>{item.Item_Quantity}</td>\n                <td><Button className=\"Btn\" onClick = {()=>{ SetInfo(item); setShow(true); }} >Update</Button></td>\n                    \n               \n            </tr>\n            \n           \n            </>\n            )\n          else return(<tr></tr>)\n          \n          \n          })}\n        </tbody>\n      </Table>\n      \n      }\n      {\n          items.length === 0 && <h2>No Items.</h2>\n      }\n        \n      </Container>\n      </>\n    )\n\n\n}\n\nexport default Inventory;\n\n// const Row1 = styled(Row)`\n//     padding:100px 16px 0px 0px;\n    \n\n\n// `;\n// const MainContainer = styled(Container)`\n//     width: 100%;\n//   height: auto;\n//   min-height: 100%;\n//   min-height: 100vh;\n// `;\n// const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n\n// const Btn = styled(Button)`\n// background :#EFBB20;\n// margin-left : 10px;\n// border: none; \n// &:hover{\n// background: #0e8ccc;\n// }\n// `;\n\n// const ModalBody = styled(Modal.Body)`\n\n// li{\n//     padding:5px;\n// }\n\n// `;\n\n\n// const FormGroup = styled(Form.Group)`\n// display : flex\n\n// `;","/home/amir/Desktop/New File/current/IMS/client/src/components/recieve_items/Recieve_Items.js",["274"],"import React , { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {Row,Table,Button,Container, Modal, Form} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport MainHeader from '../header/Header_pages'\nimport moment from 'moment';\nimport { API_URL } from '../../utils/constant';\nimport '../style.css'\n\nconst RecieveItems = () => {\n    const arr = ['Person Name','Item Name','Quantity','Requested Date']\n    const [allRequests, setRequests] = useState([])\n  \n    \n    async function fetch(){\n        await axios.get(`${API_URL}/recieveitem`, {\n             withCredentials: true\n         }).then((res)=>{\n             console.log(res.data);\n             \n             setRequests(res.data);\n             \n         })\n    } \n    \n    useEffect( () =>{\n      \n    fetch()\n    },[])\n\n\n    const [showModal, setShow] = useState(false)\n    const [ModalInfo, SetInfo] = useState({})\n    const ModalContent = ()=>{\n       \n       const [name, setname] = useState(\"\")\n       const [quantity, setquantity] = useState(\"\")\n       const [description, setdescription] = useState(\"\")\n       const [type, settype] = useState(\"\")\n\n       const UpdateRecord = (event)=>{\n           event.preventDefault()\n           \n        axios.post(`${API_URL}/` + 'recieveitem'\n        ,{ id : ModalInfo._id, name : name, quantity : quantity, description : description, type : type })\n            .then(\n            (res) => {\n                setShow(false);\n                console.log(res) \n                window.flash('Record Updated')\n                // fetch()\n            } \n        )\n        \n       }\n\n\n\n        return(\n            <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Add Item \n                    </Modal.Title>\n                    </Modal.Header>\n                  <Form onSubmit = {UpdateRecord}>  \n\n                    <Modal.Body className=\"ModalBody\">\n\n                <Form.Group>\n                    <Form.Control type=\"text\" value={name} placeholder = \"Item Name\" onChange={(event)=>{ setname(event.target.value)}} />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Control type=\"number\" value={quantity} placeholder = \"Item Quantity\" onChange={(event)=>{ setquantity(event.target.value) }} />\n                </Form.Group>\n                \n\n                <Form.Group>\n                    <Form.Control type=\"text\" value={type} placeholder = \"Item Type\" onChange={ (event)=>{ settype(event.target.value) }} />\n                </Form.Group>\n                \n\n                <Form.Group>\n                    <Form.Control type=\"text\" value={description} placeholder = \"Item Description\" onChange={ (event)=>{ setdescription(event.target.value) }} />\n                </Form.Group>\n                \n                </Modal.Body>\n\n                \n                <Modal.Footer>\n                    <Button type =\"submit\" className = \"Btn btn-success\">Add to the Inventory</Button>              \n                </Modal.Footer>\n                </Form>\n            </Modal>\n        );\n        \n\n    }\n    \n\n    \n    const [itemName, setItemName] = useState(\"\")\n    return(\n        <>\n        {showModal?\n            <div>\n                <ModalContent/>\n            </div>\n        :null   \n        }\n\n        \n   \n    <MainHeader/>\n    \n     \n    <Container className=\"MainContainer\">\n        <Row className=\"Row1\">\n            <h1>Recieve Items</h1>\n        </Row>\n     <Row className=\"Row1 float-right\" >\n     \n    <Form>\n         \n         <FormGroup>\n           \n             <Form.Control type=\"text\" placeholder=\"Search\" name=\"searchbar\" value={itemName} onChange={(event)=>{ setItemName(event.target.value)}} >\n                 \n            \n             </Form.Control>\n            \n         </FormGroup>\n         \n    </Form>       \n        \n            \n      \n     \n     \n     </Row>\n \n    \n         { allRequests.length > 0 &&\n        <Table className=\"TableStyle\" responsive>\n        <thead>\n            <>\n            <tr>\n             <th>#</th>\n            {arr.map((_, index) => (\n              <th key={index}>{_}</th>\n            ))}\n            <th></th>\n          </tr>\n</>\n        </thead>\n        <tbody>\n          {allRequests.map((request, index) =>{\n            if (request.Item.toLowerCase().includes(itemName.toLowerCase()) )\n            return(\n            <>\n           <tr>\n                <td>{index+1}</td>\n                <td>{request.R_Emp_Name}<br/></td>\n                <td>{request.Item}</td>\n                <td>{request.Quantity}</td>\n                <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\n                <td><Button className=\"Btn\" onClick = {()=>{ SetInfo(request); setShow(true); }} >Recieved</Button></td>\n                    \n               \n            </tr>\n            \n           \n            </>\n            )\n          else return(<tr></tr>)\n          \n          \n          })}\n        </tbody>\n      </Table>\n      \n      }\n      {\n          allRequests.length === 0 && <h2>No Requests.</h2>\n      }\n        \n      </Container>\n      </>\n    )\n\n\n}\n\nexport default RecieveItems;\n\n// const Row1 = styled(Row)`\n//     padding:100px 16px 0px 0px;\n    \n\n\n// `;\n// const MainContainer = styled(Container)`\n//     width: 100%;\n//   height: auto;\n//   min-height: 100%;\n//   min-height: 100vh;\n// `;\n// const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n\n// const Btn = styled(Button)`\n// background :#EFBB20;\n// margin-left : 10px;\n// border: none; \n// &:hover{\n// background: #0e8ccc;\n// }\n// `;\n\n// const ModalBody = styled(Modal.Body)`\n\n// li{\n//     padding:5px;\n// }\n\n// `;\n\n\nconst FormGroup = styled(Form.Group)`\ndisplay : flex\n\n`;","/home/amir/Desktop/New File/current/IMS/client/src/components/issue/Issue_items.js",["275","276","277","278","279","280","281","282","283","284"],"import React , { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {Row,Table,Button,Container, Modal, Form, Card} from 'react-bootstrap';\n// import styled from 'styled-components';\nimport MainHeader from '../header/Header_pages';\nimport { useParams, useHistory } from 'react-router';\nimport { API_URL } from '../../utils/constant';\nimport \"../style.css\"\n// import { func } from 'prop-types';\n\n\nconst IssueItems = () => \n{\n    const history = useHistory();\n    const arr = ['Name','Type','Description','Quantity']\n    // const [items, setitems] = useState([])\n\n    const {id} = useParams();\n  \n        \n    const [requested,setRequested] = useState({\n    })\n    const [iName, setItemName] = useState(\"\")\n    const [inventory,setInventory] = useState([])\n    async function fetch()\n       { \n            await axios.get(`${API_URL}/` +id+ '/issuerequest', {\n                withCredentials: true\n        }).then((res)=>{\n            \n            console.log(\"IN ISSUE_ITEMS.JS BLABLA\",res.data); \n            if(res.data.code === 404)\n            {\n                history.push('/storedashboard')\n            }\n            else if (res.data.code === 200)\n            {   \n                console.log(res.data)\n                setRequested(res.data.requested_item);\n                setInventory(res.data.inventory_items);\n                setItemName(res.data.requested_item.Item);\n            }\n            \n           // // // // // // // check quantity update wali cheez main try kr rahi thi didnt get\n        })\n       }\n   \n\n    const onPurchase = ()=>{\n        axios.post(`${API_URL}/request_forward_purchase`, { id : id}).then(\n            (res)=>{\n                if(res.data)\n                { \n                    setShow(false)\n                    console.log(\"Request Forwarded to Purchase Department\")\n                    window.flash('Request Forwarded to Purchase Department')\n                    history.push('/storedashboard');\n                }\n            }\n        )\n\n    }\n        \n    const onCancel = (_id, email, name, item) => {\n        axios.post(`${API_URL}/request_cancel`, {id : _id, email : email, name : name, item : item}).then(\n            (res)=>{\n                if(res.data)\n                { \n                    window.flash('Request Cancelled');\n                    fetch();\n                    history.push('/storedashboard');\n                }\n            }\n        )\n    }\n\n    \n\n    useEffect( () =>{\n       fetch()\n  \n    },[])\n    // /////////////////////////////////////////////////\n    const [showModal, setShow] = useState(false)\n    const [ModalInfo, SetInfo] = useState({})\n    const [item_id, set_item_id] = useState(\"\")\n    const ModalContent = ()=>{\n       \n        const [name, setname] = useState(ModalInfo.Item_Name)\n        const [quantity, setquantity] = useState(ModalInfo.Item_Quantity)\n        const [description, setdescription] = useState(ModalInfo.Item_Description)\n        const [type, settype] = useState(ModalInfo.Item_Type)\n \n        const UpdateRecord = (event,q)=>{\n            // event.preventDefault() oyeeee abbb bass bhot hogaya ... commit karo aur so jao \n            console.log('Quantity : ', ModalInfo.Item_Quantity - Quantity)     \n         axios.post(`${API_URL}/issued_item`,\n         { quantity : Quantity, request_id : requested._id,  item_id: item_id})\n             .then(\n             (res) => {\n                 setShow(false);\n                 console.log(res);\n                 if (res.data.code === 404)\n                 {\n                    window.scrollTo(0, 0)\n                     window.flash('Item Quantity Invalid', 'danger')\n                 }\n                 else if (res.data.code === 200)\n                 { \n                    window.scrollTo(0, 0)\n                     window.flash('Item Successfully Issued ')\n                     history.push('/storedashboard');\n                 }  \n                //  setRequested(res.data);\n              \n             } \n         )\n         \n        }\n            \n        const [Quantity, setQuantity] = useState(0)\n\n        \n        \n         return(\n             <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n                 <Modal.Header closeButton>\n                     <Modal.Title>\n                         Details \n                     </Modal.Title>\n                     </Modal.Header>\n                <Modal.Body className=\"ModalBody\">\n             \n                <h5><strong>Requested Item Information</strong></h5>\n                <p>Item Name: {requested.Item}</p>\n                <p>Quantity Requested: {requested.Quantity}</p>\n                <p>Duration of Request: {requested.Duration}</p>\n\n                <h5><strong>Inventory Information</strong></h5> \n                <p>Item Name: {ModalInfo.Item_Name}</p> \n                <p>Quantity Available: {ModalInfo.Item_Quantity}</p> \n                \n                <p><strong>Set Issue Quantity</strong></p> \n               \n                <Form>\n                    <Form.Control type=\"number\" value = {Quantity} onChange={(event)=>{setQuantity(event.target.value)}}  />    \n                </Form>\n\n                </Modal.Body>\n                 <Modal.Footer>\n                    <Button onClick={()=>UpdateRecord(ModalInfo.Item_Quantity - Quantity)} type =\"submit\" className = \"Btn btn-success\">Issue</Button>              \n                </Modal.Footer>\n               \n            </Modal>\n        );\n        \n\n    }\n    \n\n \n   \n\n    return(\n        <>\n        \n         {     showModal?\n                 <div>\n                     <ModalContent/>\n                 </div>\n             :null   \n         }\n        \n        <MainHeader/>  \n        \n\n        <Container className=\"MainContainer\">\n            <Row className=\"Row1\">\n                <h1>Store Inventory</h1>\n\n            </Row>\n            <Row className=\"Row1\">\n                <Card>\n                <Card.Header>Requested Item Information</Card.Header>\n                <Card.Body>\n                <Card.Title>Item Name: {requested.Item}</Card.Title>\n                <Card.Title>Quantity Requested: {requested.Quantity}</Card.Title>\n                <Card.Title>Duration of Request: {requested.Duration}</Card.Title>\n                </Card.Body>\n                {/* <Btn onClick = {() => {SetInfo(request); setShow(true);} } className = \"mr-1\"> Details </Btn> */}\n                {/* <Btn onClick={()=>onIssue(request._id)} className = \"btn-success mr-1\">Issue</Btn> */}\n                <Card.Footer>\n                <Button  className=\"Btn btn-success mr-4\" onClick= {() => {onPurchase()}}>Send To Purchase Department</Button>\n                <Button className = \" btn-danger\" onClick={()=>onCancel(requested._id, requested.R_Emp_Email, requested.R_Emp_Name, requested.Item)} >Cancel</Button>\n                </Card.Footer></Card>\n            </Row>\n            <Row className=\"Row1 float-right\" >\n        \n        <Form>\n             \n             <Form.Group className=\"FormGroup\">\n                    \n                <Form.Label className=\"mt-auto mr-2\">Search: </Form.Label>  \n                 <Form.Control type=\"text\" placeholder=\"Search\" name=\"searchbar\" value={iName} onChange={(event)=>{ setItemName(event.target.value)}} />\n                 \n                \n              \n                \n             </Form.Group>\n             \n        </Form>       \n            \n                \n          \n         \n         \n         </Row>\n     \n            { \n                inventory.length > 0 &&\n                <Table className=\"TableStyle\" responsive>\n            \n                <thead>\n                <>\n                    <tr>\n                        <th>#</th>\n                        {arr.map((_, index) => (\n                        <th key={index}>{_}</th>\n                        ))}\n                        \n                        \n                        <th></th>\n                    </tr>\n                </>\n                </thead>\n        \n            \n                <tbody>\n                {\n                    inventory.map((item, index) => {\n                        if (item.Item_Name.toLowerCase().includes(iName.toLowerCase()) || item.Item_Description.toLowerCase().includes(iName.toLowerCase()) )\n                        return(\n                        \n                        <>\n                        <tr>\n                            <td>{index+1}</td>\n                            <td>{item.Item_Name}<br/></td>\n                            <td>{item.Item_Type}</td>\n                            <td>{item.Item_Description}</td>\n                            <td>{item.Item_Quantity}</td> \n                            <td><Button className=\"Btn\" onClick = {()=>{ SetInfo(item); set_item_id(item._id); setShow(true); }} >Confirm Issue</Button></td>\n                                \n               \n                        </tr>\n            \n           \n                        </>\n                    )\n                    // else return(<tr></tr>)\n\n                    }\n                    )\n                }\n            </tbody>\n      \n            </Table>\n      \n            }\n\n            {\n                inventory.length === 0 && <h2 className=\"mt-2\">No Items.</h2>\n            }\n        \n            \n        </Container>\n        \n        </>\n    )\n\n\n}\n\nexport default IssueItems;\n\n// const Row1 = styled(Row)`\n//     padding:100px 16px 0px 0px;\n    \n\n\n// `;\n// const MainContainer = styled(Container)`\n//     width: 100%;\n//   height: auto;\n//   min-height: 100%;\n//   min-height: 100vh;\n// `;\n// const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n\n// const Btn = styled(Button)`\n// background :#EFBB20;\n// margin-left : 10px;\n// border: none; \n// &:hover{\n// background: #0e8ccc;\n// }\n// `;\n\n// const ModalBody = styled(Modal.Body)`\n\n// li{\n//     padding:10px;\n// }\n\n// `;\n\n\n// const FormGroup = styled(Form.Group)`\n// display : flex\n\n// `;\n\n\n// const FormLabel = styled(Form.Label)`\n// font-size : 25px\n\n// `;","/home/amir/Desktop/New File/current/IMS/client/src/components/Request_Form/Request_Form.js",["285"],"import React, { useState } from 'react';\nimport 'react-bootstrap'\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport styled  from 'styled-components';\nimport axios from 'axios';\nimport { API_URL } from '../../utils/constant';\nimport \"../style.css\"\nconst RequestForm = ()=>{\n    // const Auth = React.useContext(AuthApi);\n    // const history = useHistory();\n\n    const [request, setRequest] = useState({\n        Name : \"\",\n        email: \"\",\n        itemname: \"\",\n        qty : \"\",\n        duration: \"\",\n        reason: \"\"\n    });\n   \n    // Functions\n\n    const onChangeHandle = (e) => {\n        const value = e.target.value;\n        // console.log(value);\n        setRequest({\n            ...request,\n            [e.target.name] : value\n       });\n    }\n    const onSubmit = (event) => {   \n        \n        event.preventDefault()\n        axios({\n            method: \"POST\",\n            data: {\n                R_Emp_Name: request.Name,\n                R_Emp_Email: request.email,\n                Item: request.itemname,\n                Quantity: request.qty,\n                Duration: request.duration,\n                Reason: request.reason\n            },\n            withCredentials: true,\n            url: `${API_URL}/add_request`,\n          }).then((res)=>{\n            console.log(res.data);      \n            if(res.data) \n            {\n                console.log(res.data)\n                window.flash('Request Forwarded\\nRequest ID : ' + res.data._id);\n                setRequest({\n                Name : \"\",\n                email: \"\",\n                itemname: \"\",\n                qty : \"\",\n                duration: \"\",\n                reason: \"\"\n            })\n\n            }\n            else\n            {\n                console.log('No user found')\n            }\n        })\n        };\n     \n\n    return (\n        <>\n      \n        <Container className=\"MainContainer mt-4 d-flex justify-content-left align-items-left\">\n            <Row>\n                <Col className=\"text-left\">\n                    <Form className=\"FormStyle\" onSubmit={onSubmit} >\n                        <Form.Group >\n                            <Form.Label>Name : </Form.Label>\n                            <Form.Control placeholder=\"Enter Name\" onChange={onChangeHandle} type=\"text\" name=\"Name\" value={request.Name}/>                \n                        </Form.Group>\n                        <Form.Group >\n                            <Form.Label>Email : </Form.Label>\n                            <Form.Control placeholder=\"Enter Email\" onChange={onChangeHandle} type=\"email\" name=\"email\" value={request.email} />\n                        </Form.Group>\n                        <Form.Group >\n                            <Form.Label>Item : </Form.Label>\n                            <Form.Control placeholder=\"Enter Item Name\" onChange={onChangeHandle} type=\"text\" name=\"itemname\" value={request.itemname} />\n                        </Form.Group>\n                        <Form.Row>\n                            <Form.Group as={Col}>\n                                <Form.Label>Quantity : </Form.Label>\n                                <Form.Control placeholder=\"Enter Quantity\" onChange={onChangeHandle} type=\"number\" name=\"qty\" value={request.qty} />\n                            </Form.Group>\n                            <Form.Group as={Col} >\n                                <Form.Label>Duration : </Form.Label>\n                                <Form.Control placeholder=\"Enter Duration\" onChange={onChangeHandle} type=\"text\" name=\"duration\" value={request.duration}/>\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Group>\n                            <Form.Label>Reason : </Form.Label>\n                            <Form.Control placeholder=\"Elaborate Reason(Optional)\" as=\"textarea\" rows={4} onChange={onChangeHandle} type=\"text\" name=\"reason\" value={request.reason} />\n                        </Form.Group>\n                        <Form.Group className=\"text-right\">\n                            {/* <a href=\"#\"> Forgot Email ? </a> */}\n                            <Button  type=\"submit\" className = \"Btn btn btn-md btn-success\">Submit</Button>\n                        </Form.Group>\n                    </Form>   \n                </Col> \n            </Row>\n        </Container>  \n        </> \n    )\n    \n};\n\n    \n\nexport default RequestForm;\n\n// const FormStyle = styled(Form)`\n//     background-color: white;\n//     width: 500px;\n//     .form-group{  \n//         &:hover{\n\n//         }\n//     }\n\n// `;\n\n// const MainContainer = styled(Container)`\n//     width: 100%;\n//   height: 100vh;\n//   min-height: 100%;\n//   min-height: 100vh;\n// `;\n// const Submit = styled(Button)`\n//     background :#EFBB20;\n//     border: none; \n//     &:hover{\n//     background: #0e8ccc;\n// }\n// `;","/home/amir/Desktop/New File/current/IMS/client/src/components/userInformation/User_information.js",["286"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport {Card} from 'react-bootstrap';\n// import Authapi from '../Authapi'\nimport { useHistory } from 'react-router';\n// import Cookies from 'js-cookie'\nimport styled from 'styled-components';\nimport {Button, Collapse, Form} from 'react-bootstrap';\nimport {API_URL} from '../../utils/constant'\nimport '../style.css';\n\nconst UserInformation = () => {\n   \n    const [Credentials, SetCredentials] = useState({\n        name : \"\",\n        username : \"\",\n        password : \"\"\n    });\n\n    const [Profile, setProfile] = useState({\n        emp_Name: \"\",\n        designation: \"\",\n        department: \"\"\n    })\n    const [open, setOpen] = useState(false)\n    const [id, Setid] = useState({})\n    const history = useHistory();\n\n    useEffect(() =>{\n     \n\n        axios.get(`${API_URL}/dashboard1`, {\n            withCredentials: true\n        }).then((res)=>{\n            if(res.data)\n            { \n                console.log(res.data)\n                const user = res.data;\n                Setid(res.data.user._id);\n                SetCredentials({\n                    name : res.data.user.Emp_Name,\n                    username : res.data.user.Username,\n                    password : res.data.user.Password\n                })\n                console.log(res.data.user);\n                setProfile({\n                    emp_Name: user.user.Emp_Name,\n                    designation: user.user.Designation,\n                    department: user.department.Dept_Name\n                })\n            }\n            else\n            { \n                history.push('/logout')\n            }\n            \n        })\n\n    },[history])\n    const onChangeHandle = (e) => {\n        const value = e.target.value;\n        console.log(value);\n        SetCredentials({\n            ...Credentials,\n            [e.target.name] : value\n       });\n       \n    }\n    const onSubmit = (event) => {   \n        \n        event.preventDefault()\n        axios({\n            method: \"POST\",\n            data: {\n                id : id,\n                name: Credentials.name,\n                username: Credentials.username,\n                password: Credentials.password\n            },\n            withCredentials: true,\n            url: `${API_URL}/update_profile`,\n          }).then((res)=>{\n            setProfile({\n                ...Profile,\n                emp_Name: Credentials.name,\n            })\n            setOpen(false)\n        })\n        };\n    \n\n    return(  \n    <>\n    \n\n\n    <Card className=\"Card1\">\n        <Card.Header>User Information</Card.Header>\n            <Card.Body>\n\n                { Profile &&\n                <>\n                    <Card.Title><strong>User:  </strong>{Profile.emp_Name}</Card.Title>\n                    <Card.Title><strong>Designation:</strong> {Profile.designation}</Card.Title>  \n                    <Card.Title><strong>Department:</strong> {Profile.department}</Card.Title>  \n                    <Button\n                        className=\"Btn mb-4\"\n                        onClick={() => setOpen(!open)}\n                        aria-controls=\"collapse_menu\"\n                        aria-expanded={open}\n                    >\n                        Edit Profile\n                    </Button>\n\n                    <Collapse in={open}>\n                        \n                    \n                        <div id=\"collapse_menu\">\n                        <Form onSubmit={onSubmit}>\n                        <Form.Group>\n                             <Form.Label>Name :</Form.Label>\n                             <Form.Control name = \"name\" onChange={onChangeHandle} value={Credentials.name}/>\n                         </Form.Group>\n                        \n                        <Form.Group>\n                             <Form.Label>Username :</Form.Label>\n                             <Form.Control name = \"username\" onChange={onChangeHandle} value={Credentials.username} />\n                         </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Password :</Form.Label>\n                            <Form.Control name = \"password\" onChange={onChangeHandle} value={Credentials.password} />\n                        </Form.Group>\n                        <Button className=\"Btn\" type = \"submit\">Update</Button> \n                        </Form>\n                        </div>\n                    </Collapse>\n    \n                </>\n                }\n                \n            </Card.Body>\n    </Card>\n             \n           \n\n</>        \n)\n    \n\n};\n\nexport default UserInformation;\n","/home/amir/Desktop/New File/current/IMS/client/src/utils/constant.js",[],"/home/amir/Desktop/New File/current/IMS/client/src/components/header/Header.js",["287"],"import React from 'react';\nimport 'react-bootstrap';\nimport styled  from 'styled-components';\nimport { Navbar } from 'react-bootstrap'\nimport Flash from '../Flash/flashmessage'\nimport '../style.css'\n\nconst Header = () => {\n    return(  \n        <>\n         <Flash />\n        <Navbar className=\"Nav fixed-top\" variant=\"dark\">\n            <Navbar.Brand className = \"align-left\" href=\"\">\n            <img\n                alt=\"\"\n                src=\"nav_logo.png\"\n                className=\"d-inline-block align-top ml-3\"\n                height=\"60\"\n                width = \"60\"\n            />\n            <h2 className=\"d-inline-block ml-3 mt-2 \" style={{fontSize:40}}>Inventory Management System</h2>\n            </Navbar.Brand>\n        </Navbar>\n       \n        </>\n    )\n};\n\nexport default Header;\n\n// const Nav = styled(Navbar)`\n//     // background:  rgba(0,0,0,0.8);\n//     background: #1F386B;\n\n// `;\n\n","/home/amir/Desktop/New File/current/IMS/client/src/components/header/Header_pages.js",["288"],"import React from 'react';\nimport 'react-bootstrap';\nimport styled  from 'styled-components';\nimport { Navbar, Button} from 'react-bootstrap'\nimport { Link } from 'react-router-dom';\nimport Flash from '../Flash/flashmessage'\nimport '../style.css'\n  \n\nconst HeaderPages = () => {\n    return(  \n        <>\n       <Flash />\n        <Navbar className=\"Nav justify-content-end fixed-top\">\n           \n            <Link to=\"/logout\" >\n                <Button className=\"Btn  btn-primary btn-md mr-4\">\n                        Log Out\n                </Button>\n            </Link>\n           \n        </Navbar>\n        </>\n    )\n};\n\nexport default HeaderPages;\n\n// const Nav = styled(Navbar)`\n//     // background:  rgba(0,0,0,0.8);\n//     background: #1F386B;\n//     justify-content:flex-end;\n// `;\n\n// const LogoutButton = styled(Button)`\n//     background :#EFBB20;\n//     border: none; \n//     &:hover{\n//     background: #0e8ccc;\n// }\n// `;","/home/amir/Desktop/New File/current/IMS/client/src/components/Request_Table/RequestTable.js",["289"],"import React , { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {Table,Button,Container, Modal, Form} from 'react-bootstrap';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { API_URL } from '../../utils/constant';\nimport '../style.css'\nconst RequestTable = () => {\n   const arr = ['Requested By','Email','Date Requested','Item Name','Quantity','Duration']\n    const [allrequest, setrequests] = useState([])\n    // const [open, setOpen] = useState(false);\n\n    async function fetch(){\n        await axios.get(`${API_URL}/get_all_request`, {\n             withCredentials: true\n         }).then((res)=>{\n             console.log(res.data);\n             \n             setrequests(res.data);\n             \n         })\n        }\n    // var requests = []\n    useEffect( () =>{\n    \n    fetch()\n    },[])\n    const [showModal, setShow] = useState(false)\n    const [ModalInfo, SetInfo] = useState({})\n    const ModalContent = ()=>{\n       const [comment , setcomment] = useState(\"\")\n\n        const Approve = ()=>{\n            console.log('Approve Request')\n            axios.post(`${API_URL}/request_approve`, {id : ModalInfo._id}).then(\n                (res)=>{\n                    if(res.data)\n                    { \n                        window.flash('Request Approved')\n                        setShow(false)\n                        fetch()\n                    }\n                }\n            )\n        } \n\n\n        const Reject = ()=>{\n            axios.post(`${API_URL}/request_reject`, {\n                id : ModalInfo._id,\n                name: ModalInfo.R_Emp_Name,\n                email : ModalInfo.R_Emp_Email,\n                item : ModalInfo.Item,\n                comment : comment\n            }).then(\n                (res)=>{\n                    if(res.data)\n                    { \n                        window.flash('Request Rejected')\n                        setShow(false)\n                        fetch()\n                    }\n                }\n            )\n        } \n\n        return(\n            <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Details \n                    </Modal.Title>\n                    </Modal.Header>\n                    <Form>\n                       \n                    <Modal.Body className = \"ModalBody\">\n                        <ul className=\"list-unstyled\">\n                            <li><strong>Requested by:</strong> {ModalInfo.R_Emp_Name}</li>\n                            <li><strong>Email:</strong> {ModalInfo.R_Emp_Email}</li>\n                            <li><strong>Item:</strong> {ModalInfo.Item}</li>\n                            <li><strong>Quantity:</strong> {ModalInfo.Quantity}</li>\n                            <li><strong>Duration:</strong> {ModalInfo.Duration}</li>\n                            <li><strong>Reason:</strong> {ModalInfo.Reason}</li>\n                            <li className=\"mt-3\">\n                                    <Form.Group>\n                                        <Form.Control as=\"textarea\" value ={comment} onChange={(event)=>{ setcomment(event.target.value) }}  placeholder = \"Additional Comments\"  row={6}/>\n                                    </Form.Group>\n                                \n                            </li>\n                        </ul>\n                    </Modal.Body>\n\n                \n                <Modal.Footer>\n                    <Button className = \"Btn btn-success\" onClick = {() => {Approve()}}>Approve</Button>\n                    <Button className=\"Btn btn-danger\" onClick = {Reject}>Reject</Button>\n                        \n                </Modal.Footer>\n                </Form>\n            </Modal>\n        );\n        \n\n    }\n    \n\n\n    return(\n        <>\n        {showModal?\n            <div>\n                <ModalContent/>\n            </div>\n        :null   \n        }\n\n\n\n     <Container>\n         { allrequest.length > 0 &&\n        <Table className=\"TableStyle\" responsive>\n        <thead>\n            <tr>\n             <th>#</th>\n            {arr.map((_, index) => (\n              <th key={index}>{_}</th>\n            ))}\n            \n          </tr>\n        </thead>\n        <tbody>\n          {allrequest.map((request, index) =>{\n            return(\n            <>\n            <tr onClick = {() => {SetInfo(request); setShow(true);} }>\n                <td>{index+1}</td>\n                <td>{request.R_Emp_Name}<br/></td>\n                <td>{request.R_Emp_Email}</td>\n                <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\n                <td>{request.Item}</td>\n                <td>{request.Quantity}</td>\n                <td>{request.Duration}</td>\n                \n            </tr>\n            \n           \n            </>\n            )\n          })}\n        </tbody>\n      </Table>\n      \n      }\n      {\n          allrequest.length === 0 && <h2>No Requests.</h2>\n      }\n        \n      </Container>\n      </>\n    )\n\n\n}\n\n\nexport default RequestTable\n\n// const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         // background: #1F386B;\n//     }\n// }\n// `;\n\n// const Btn = styled(Button)`\n// &:hover{\n//     background: #0e8ccc;\n// }\n\n// `;\n\n// const ModalBody = styled(Modal.Body)`\n\n// li{\n//     padding:5px;\n// }\n\n// `;","/home/amir/Desktop/New File/current/IMS/client/src/components/track/Track_request.js",["290"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { API_URL } from '../../utils/constant';\nimport '../style.css'\nimport {\n\n  Form,\n  Button,\n  Collapse,\n  Card,\n} from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst TrackRequest = () => {\n    const [trackID,settrackID] = useState({})\n    \n    const [show, setShow] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [errMsg, seterr] = useState(\"\");\n    const [status,setStatus] = useState({\n        \n        status:\"\",\n        item: \"\"\n        \n    })\n    const onChangeHandle = (e) => {\n        const value = e.target.value;\n        // console.log(value);\n        settrackID(value);\n    }\n    \n    const GetRequest = (event) =>\n    {\n        setShow(false)\n        seterr(\"\")\n        event.preventDefault();\n        axios.post(`${API_URL}/get_request`, {\n            id : trackID\n        }).then((res)=>{\n\n            console.log( 'STATUSSSS' , res.data);\n            \n           if(res.data.code ===  404)\n           {\n                seterr(res.data.message);\n           }\n           else\n           {\n            setStatus({\n                status: res.data.Status,\n                item:res.data.Item\n             })\n             setShow(true)\n             seterr(\"\")\n           }\n        })\n    }\n    \n    \n\n\n\n\n  return (\n    <>\n      <Button\n        className=\"Btn mb-4\"\n        onClick={() => setOpen(!open)}\n        aria-controls=\"collapse_menu\"\n        aria-expanded={open}\n      >\n        Track Request\n      </Button>\n\n      <Collapse in={open}>\n        <div id=\"collapse_menu\">\n          <Form onSubmit={GetRequest}>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Request ID\"\n              onChange={onChangeHandle}\n              name=\"RequestID\"\n            ></Form.Control>\n            <br />\n            <Button className=\"Btn\" type=\"submit\">Submit</Button>\n          </Form>\n          \n          <h3 className=\"mt-2\">{errMsg}</h3>\n          {show && \n            <>\n              <Card className=\"mt-4\">\n                <Card.Header>Request Status</Card.Header>\n                <Card.Body>\n                   \n                  \n                  { \n                  (status.status === 'Requested' || status.status === 'Approved' || status.status === 'Completed' || status.status === 'Issued') ?           \n                   <Card.Title>Status: {status.status}</Card.Title>\n                  :<Card.Title>Status: Pending</Card.Title>\n                  \n                  }\n                  \n                  \n                  \n                  <Card.Title>Item: {status.item}</Card.Title>\n                \n                </Card.Body>\n              </Card>\n            </>\n          }\n        </div>\n      </Collapse>\n    </>\n  );\n};\n\nexport default TrackRequest;\n\n\n// const Btn = styled(Button)`\n\n// background :#EFBB20;\n// border: none; \n// &:hover{\n// background: #0e8ccc;\n// }\n\n// `;\n","/home/amir/Desktop/New File/current/IMS/client/src/components/purchaseRequest/Purchase_request_table.js",["291","292","293","294"],"import React , { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {Table,Button,Container, Modal, Form} from 'react-bootstrap';\nimport moment from 'moment';\nimport { API_URL } from '../../utils/constant';\n\nimport styled from 'styled-components';\n\nconst RequestTable = () => {\n    const arr = ['Date Requested','Item Name','Quantity','Quotation']\n    const [allrequest, setrequests] = useState([])\n    // const [open, setOpen] = useState(false);\n    async function fetch(){\n        await axios.get(`${API_URL}/get_purchase_request`, {\n             withCredentials: true\n         }).then((res)=>{\n             console.log(res.data);\n             \n             setrequests(res.data);\n             \n         })\n     } \n    // var requests = []\n    useEffect( () =>{\n       \n        \n    fetch()\n    },[])\n    \n    const [showModal, setShow] = useState(false)\n    const [file, SetFile] = useState(null)\n    const [Info, SetInfo] = useState(\"\")\n\n    \n    const SubmitFile = async (e)=>{\n            \n        e.preventDefault();            \n\n        console.log('File ' , file)\n        // console.log(e.target.file)\n\n\n        // console.log('document', document.getElementById('file').value())\n        \n        if (file) {\n            const formData = new FormData();\n            formData.append('file', file);\n            await axios.post(`${API_URL}/${Info}/upload`, formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }).then((res)=>{\n                if(res.data.code == 200)\n                {\n                    window.flash('File Successfully Submitted')\n                    fetch();\n                }\n                else\n                {\n                    window.flash('Failed To Submit The File', 'danger')\n                }\n            });\n          } else {\n            window.flash('Please select a file to add.', 'danger');\n          }\n        \n        \n        \n        \n        \n    \n    }\n\n    const onChangeHandlerFile=(files)=>{\n        console.log(files)\n        const [uploadedFile] = files.target.files;\n        console.log(uploadedFile)\n        SetFile(uploadedFile)\n\n    }\n   \n\n   \n    // const ModalContent = ()=>{\n       \n    //    function getBase64(e) {\n    //         var file = e.target.files[0]\n    //         let reader = new FileReader()\n    //         reader.readAsDataURL(file)\n    //         reader.onload = () => {\n    //             console.log(reader.result)\n    //             SetFile(reader.result)\n    //         //   this.setState({\n    //         //     imgUpload: reader.result\n    //         //   })\n    //         };\n    //         reader.onerror = function (error) {\n    //           console.log('Error: ', error);\n    //         }\n    //       }\n        \n\n    //     return(\n    //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n    //             <Modal.Header closeButton>\n    //                 <Modal.Title>\n    //                     Details \n    //                 </Modal.Title>\n    //                 </Modal.Header>\n    //                 <Form>    \n\n    //                 <ModalBody>\n                        \n    //                 <input\n    //                 type = 'file'\n    //                 id=\"file\"\n    //                 name = \"file\"\n    //                 value={FileInfo}\n    //                 onChange={(e) => { e.preventDefault(); \n    //                     SetFile(e.target.files[0])\n    //                     // getBase64(e);\n    //                 }}\n    //                 />\n    //                 </ModalBody>\n\n                \n    //             <Modal.Footer>\n    //                 <Btn className = \"btn-success\" type = \"submit\">Submit</Btn>\n    //             </Modal.Footer>\n    //             </Form>\n\n    //         </Modal>\n    //     );\n        \n    \n    // }\n    \n\n\n    return(\n        <>\n         {/* {showModal?\n            <div>\n                <ModalContent/>\n            </div>\n        :null    */}\n        \n\n\n\n     <Container>\n        <Table className=\"TableStyle\" responsive=\"sm\">\n        <thead>\n            <tr>\n             <th>#</th>\n            {arr.map((_, index) => (\n              <th key={index}>{_}</th>\n            ))}\n            \n          </tr>\n        </thead>\n        <tbody>\n          {allrequest.map((request, index) =>{\n            return(\n            <>\n             <tr key= {index}>\n                <td>{index+1}</td>\n                {/* <td>{request.R_Emp_Name}<br/></td> */}\n                {/* <td>{request.R_Emp_Email}</td> */}\n                <td>{moment(request.Added).format('Do MMMM YYYY')}</td>\n                <td>{request.Item}</td>\n                <td>{request.Quantity}</td>\n                {/* <td>{request.Duration}</td> */}\n                <td>\n\n\n                {/* <a href = \"http://localhost:5000/upload\"><Btn>Upload</Btn></a> */}\n\n                    <Form onSubmit = {SubmitFile}>\n                        <Form.File name = \"file\" onChange = {  onChangeHandlerFile } />\n                        <Button type=\"submit\" className =\"Btn mt-2 btn btn-md\" onClick= {() => {SetInfo(request._id)}}>Submit</Button>\n                    </Form>\n                </td>\n            </tr>\n            \n            </>\n            )\n          })}\n        </tbody>\n      </Table>\n      </Container>\n      </>\n    )\n\n\n}\n\n\nexport default RequestTable\n\n// const TableStyle = styled(Table)`\n\n// th {background: #1F386B;color : white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n\n\n// const Btn = styled(Button)`\n//     background :#EFBB20;\n//     border: none; \n//     &:hover{\n//     background: #0e8ccc;\n// }`;\n\nconst ModalBody = styled(Modal.Body)`\n\nli{\n    padding:5px;\n}\n\n`;","/home/amir/Desktop/New File/current/IMS/client/src/components/ManagerRequestTable/ManagerRequestTable.js",[],"/home/amir/Desktop/New File/current/IMS/client/src/components/storeTable/Store_Table.js",["295"],"import React , { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {Table,Container,OverlayTrigger,Tooltip} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport {useHistory} from 'react-router-dom';\nimport { API_URL } from '../../utils/constant';\n\nconst RequestTable = () => {\n    const arr = ['Requested By','Email','Item Name','Quantity','Duration']\n    const [allrequest, setrequests] = useState([])\n    const history = useHistory()\n    async function fetch(){\n        await axios.get(`${API_URL}/storerequests`, {\n            withCredentials: true\n        }).then((res)=>{\n            console.log(res.data);\n            setrequests(res.data);\n            \n        })\n    } \n    const onIssue = (id)=>{\n        \n        console.log(\"STORE TABLE MAIN ID FOR PARAMS\",id)\n        history.push('/'+id+'/issuerequest')\n    }\n\n\n    // const onPurchase = (id)=>{\n    //     axios.post(`${API_URL}/request_forward_purchase`, { id : id}).then(\n    //         (res)=>{\n    //             if(res.data)\n    //             { \n    //                 setShow(false)\n    //                 window.flash('Request Forwarded to Purchase Department')\n    //                 fetch();\n    //             }\n    //         }\n    //     )\n\n    // }\n        \n    // const onCancel = (_id, email, name, item) => {\n    //     axios.post(`${API_URL}/request_cancel`, {id : _id, email : email, name : name, item : item}).then(\n    //         (res)=>{\n    //             if(res.data)\n    //             { \n    //                 window.flash('Request Cancelled');\n    //                 fetch();\n\n    //             }\n    //         }\n    //     )\n    // }\n\n    \n\n    // var requests = []\n    useEffect( () =>{\n       \n        \n    fetch()\n    },[])\n\n\n    // const [showModal, setShow] = useState(false)\n    // const [ModalInfo, SetInfo] = useState({})\n    // const ModalContent = ()=>{\n       \n    //     return(\n    //         <Modal show = {showModal} onHide ={() => {setShow(false)}}>\n    //             <Modal.Header closeButton>\n    //                 <Modal.Title>\n    //                     Details \n    //                 </Modal.Title>\n    //                        </Modal.Header>\n    //                 <ModalBody>\n    //                     <ul className=\"list-unstyled\">\n    //                         <li><strong>Requested by:</strong> {ModalInfo.R_Emp_Name}</li>\n    //                         <li><strong>Email:</strong> {ModalInfo.R_Emp_Email}</li>\n    //                         <li><strong>Item:</strong> {ModalInfo.Item}</li>\n    //                         <li><strong>Quantity:</strong> {ModalInfo.Quantity}</li>\n    //                         <li><strong>Duration:</strong> {ModalInfo.Duration}</li>\n    //                         <li><strong>Reason:</strong> {ModalInfo.Reason}</li>\n    //                         <li className=\"mt-3\">\n    //                             <Form>\n    //                                 <Form.Group>\n    //                                     <Form.Control as=\"textarea\" placeholder = \"Additional Comments\" row={6}/>\n    //                                 </Form.Group>\n    //                             </Form>\n    //                         </li>\n    //                     </ul>\n    //                 </ModalBody>\n\n                \n    //             <Modal.Footer>\n    //                 {/* <Btn className = \"btn-success\">Approve</Btn>\n    //                 <Btn className=\"btn-danger\">Reject</Btn> */}\n    //                 <Btn className=\"btn-success\" onClick= {() => {onPurchase()}}>Send To Purchase Department</Btn>\n                        \n    //             </Modal.Footer>\n    //         </Modal>\n    //     );\n        \n\n    // }\n    \n\n\n    return(\n        <>\n        {/* {showModal?\n            <div>\n                <ModalContent/>\n            </div>\n        :null   \n        } */}\n\n     <Container>\n         { allrequest.length > 0 &&\n        <Table className=\"TableStyle\" responsive>\n        <thead>\n            <>\n            <tr>\n             <th>#</th>\n            {arr.map((_, index) => (\n              <th key={index}>{_}</th>\n            ))}\n            <th></th>\n          </tr>\n</>\n        </thead>\n        <tbody>\n          {allrequest.map((request, index) =>{\n            return(\n            <>\n            <OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"button-tooltip-2\">Click to see Details</Tooltip>} >\n            <tr key={index} onClick = {() => {onIssue(request._id)} }>\n                <td>{index+1}</td>\n                <td>{request.R_Emp_Name}<br/></td>\n                <td>{request.R_Emp_Email}</td>\n                \n                <td>{request.Item}</td>\n                <td>{request.Quantity}</td>\n                <td>{request.Duration}</td>\n                    \n                {/* <td>\n                    <Btn onClick = {() => {SetInfo(request); setShow(true);} } className = \"mr-1\"> Details </Btn>\n                    <Btn onClick={()=>onIssue(request._id)} className = \"btn-success mr-1\">Issue</Btn>\n                <Btn onClick={()=>onCancel(request._id, request.R_Emp_Email, request.R_Emp_Name, request.Item)} className=\"btn-danger\">Cancel</Btn>\n                </td> */}\n            </tr>\n            </OverlayTrigger>\n           \n            </>\n            )\n          })}\n        </tbody>\n      </Table>\n      \n      }\n      {\n          allrequest.length === 0 && <h2>No Requests.</h2>\n      }\n        \n      </Container>\n      </>\n    )\n\n\n}\n\n\nexport default RequestTable\n\n// const TableStyle = styled(Table)`\n// th {background: #1F386B; color:white;}\n// tr{\n//     cursor:pointer;\n//     &:hover{\n//         background: lightgray;\n//     }\n// }\n// `;\n\n// const Btn = styled(Button)`\n// &:hover{\n//     background: #0e8ccc;\n// }\n\n// `;\n\n// const ModalBody = styled(Modal.Body)`\n\n// li{\n//     padding:5px;\n// }\n\n// `;","/home/amir/Desktop/New File/current/IMS/client/src/components/Flash/flashmessage.js",[],{"ruleId":"296","severity":1,"message":"297","line":104,"column":7,"nodeType":"298","endLine":104,"endColumn":9,"suggestions":"299"},{"ruleId":"296","severity":1,"message":"300","line":82,"column":7,"nodeType":"298","endLine":82,"endColumn":9,"suggestions":"301"},{"ruleId":"302","severity":1,"message":"303","line":89,"column":16,"nodeType":"304","messageId":"305","endLine":89,"endColumn":20},{"ruleId":"302","severity":1,"message":"306","line":89,"column":22,"nodeType":"304","messageId":"305","endLine":89,"endColumn":29},{"ruleId":"302","severity":1,"message":"307","line":90,"column":16,"nodeType":"304","messageId":"305","endLine":90,"endColumn":24},{"ruleId":"302","severity":1,"message":"308","line":90,"column":26,"nodeType":"304","messageId":"305","endLine":90,"endColumn":37},{"ruleId":"302","severity":1,"message":"309","line":91,"column":16,"nodeType":"304","messageId":"305","endLine":91,"endColumn":27},{"ruleId":"302","severity":1,"message":"310","line":91,"column":29,"nodeType":"304","messageId":"305","endLine":91,"endColumn":43},{"ruleId":"302","severity":1,"message":"311","line":92,"column":16,"nodeType":"304","messageId":"305","endLine":92,"endColumn":20},{"ruleId":"302","severity":1,"message":"312","line":92,"column":22,"nodeType":"304","messageId":"305","endLine":92,"endColumn":29},{"ruleId":"313","severity":1,"message":"314","line":240,"column":49,"nodeType":"315","messageId":"316","endLine":240,"endColumn":51},{"ruleId":"317","severity":1,"message":"318","line":44,"column":34,"nodeType":"319","messageId":"320","endLine":44,"endColumn":35},{"ruleId":"302","severity":1,"message":"321","line":30,"column":12,"nodeType":"304","messageId":"305","endLine":30,"endColumn":21},{"ruleId":"302","severity":1,"message":"322","line":30,"column":23,"nodeType":"304","messageId":"305","endLine":30,"endColumn":30},{"ruleId":"323","severity":1,"message":"324","line":53,"column":34,"nodeType":"319","messageId":"325","endLine":53,"endColumn":36},{"ruleId":"302","severity":1,"message":"326","line":220,"column":7,"nodeType":"304","messageId":"305","endLine":220,"endColumn":16},{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","replacedBy":"330"},{"ruleId":"302","severity":1,"message":"331","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":14},{"ruleId":"302","severity":1,"message":"331","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":14},{"ruleId":"302","severity":1,"message":"331","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":14},{"ruleId":"302","severity":1,"message":"331","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":14},{"ruleId":"302","severity":1,"message":"331","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":14},{"ruleId":"302","severity":1,"message":"331","line":7,"column":8,"nodeType":"304","messageId":"305","endLine":7,"endColumn":14},{"ruleId":"302","severity":1,"message":"332","line":102,"column":7,"nodeType":"304","messageId":"305","endLine":102,"endColumn":20},{"ruleId":"302","severity":1,"message":"331","line":7,"column":8,"nodeType":"304","messageId":"305","endLine":7,"endColumn":14},{"ruleId":"302","severity":1,"message":"331","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":14},{"ruleId":"302","severity":1,"message":"331","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":14},{"ruleId":"317","severity":1,"message":"318","line":44,"column":34,"nodeType":"319","messageId":"320","endLine":44,"endColumn":35},{"ruleId":"296","severity":1,"message":"300","line":82,"column":7,"nodeType":"298","endLine":82,"endColumn":9,"suggestions":"333"},{"ruleId":"302","severity":1,"message":"303","line":89,"column":16,"nodeType":"304","messageId":"305","endLine":89,"endColumn":20},{"ruleId":"302","severity":1,"message":"306","line":89,"column":22,"nodeType":"304","messageId":"305","endLine":89,"endColumn":29},{"ruleId":"302","severity":1,"message":"307","line":90,"column":16,"nodeType":"304","messageId":"305","endLine":90,"endColumn":24},{"ruleId":"302","severity":1,"message":"308","line":90,"column":26,"nodeType":"304","messageId":"305","endLine":90,"endColumn":37},{"ruleId":"302","severity":1,"message":"309","line":91,"column":16,"nodeType":"304","messageId":"305","endLine":91,"endColumn":27},{"ruleId":"302","severity":1,"message":"310","line":91,"column":29,"nodeType":"304","messageId":"305","endLine":91,"endColumn":43},{"ruleId":"302","severity":1,"message":"311","line":92,"column":16,"nodeType":"304","messageId":"305","endLine":92,"endColumn":20},{"ruleId":"302","severity":1,"message":"312","line":92,"column":22,"nodeType":"304","messageId":"305","endLine":92,"endColumn":29},{"ruleId":"313","severity":1,"message":"314","line":240,"column":49,"nodeType":"315","messageId":"316","endLine":240,"endColumn":51},{"ruleId":"302","severity":1,"message":"331","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":14},{"ruleId":"302","severity":1,"message":"331","line":7,"column":8,"nodeType":"304","messageId":"305","endLine":7,"endColumn":14},{"ruleId":"302","severity":1,"message":"331","line":3,"column":8,"nodeType":"304","messageId":"305","endLine":3,"endColumn":14},{"ruleId":"302","severity":1,"message":"331","line":3,"column":8,"nodeType":"304","messageId":"305","endLine":3,"endColumn":14},{"ruleId":"302","severity":1,"message":"331","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":14},{"ruleId":"302","severity":1,"message":"331","line":12,"column":8,"nodeType":"304","messageId":"305","endLine":12,"endColumn":14},{"ruleId":"302","severity":1,"message":"321","line":30,"column":12,"nodeType":"304","messageId":"305","endLine":30,"endColumn":21},{"ruleId":"302","severity":1,"message":"322","line":30,"column":23,"nodeType":"304","messageId":"305","endLine":30,"endColumn":30},{"ruleId":"323","severity":1,"message":"324","line":53,"column":34,"nodeType":"319","messageId":"325","endLine":53,"endColumn":36},{"ruleId":"302","severity":1,"message":"326","line":220,"column":7,"nodeType":"304","messageId":"305","endLine":220,"endColumn":16},{"ruleId":"302","severity":1,"message":"331","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":14},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'CheckUser'. Either include it or remove the dependency array.","ArrayExpression",["334"],"React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.",["335"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'setname' is assigned a value but never used.","'quantity' is assigned a value but never used.","'setquantity' is assigned a value but never used.","'description' is assigned a value but never used.","'setdescription' is assigned a value but never used.","'type' is assigned a value but never used.","'settype' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'showModal' is assigned a value but never used.","'setShow' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'ModalBody' is assigned a value but never used.","no-native-reassign",["336"],"no-negated-in-lhs",["337"],"'styled' is defined but never used.","'MainContainer' is assigned a value but never used.",["338"],{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},"no-global-assign","no-unsafe-negation",{"desc":"341","fix":"343"},"Update the dependencies array to be: [CheckUser]",{"range":"344","text":"345"},"Update the dependencies array to be: [fetch]",{"range":"346","text":"347"},{"range":"348","text":"347"},[3082,3084],"[CheckUser]",[2461,2463],"[fetch]",[2485,2487]]